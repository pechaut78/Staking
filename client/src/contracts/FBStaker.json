{
  "contractName": "FBStaker",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "adr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BonusRetrieved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Customer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "BonusRound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "adr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "Tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "adr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "Tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUnstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getMoneyBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "getTokenStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "customer",
          "type": "address"
        }
      ],
      "name": "retrieveBonuses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "Aggregator",
          "type": "address"
        }
      ],
      "name": "StakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "Customer",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "Aggregator",
          "type": "address"
        }
      ],
      "name": "UnstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "Customer",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "Aggregator",
          "type": "address"
        }
      ],
      "name": "bonusRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BonusRetrieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Customer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"BonusRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"Tkn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"Tkn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Aggregator\",\"type\":\"address\"}],\"name\":\"StakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Customer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Aggregator\",\"type\":\"address\"}],\"name\":\"UnstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Customer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Aggregator\",\"type\":\"address\"}],\"name\":\"bonusRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMoneyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"getTokenStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"}],\"name\":\"retrieveBonuses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"StakeTokens(address,uint256,address)\":{\"details\":\"Stake swap some tokens for our money token - To be called by the customer\",\"params\":{\"Aggregator\":\"Provided by JS for the correct PAIR\",\"Token\":\"customer's Token\",\"amount\":\"amount of customer's token to Stake\"}},\"UnstakeTokens(address,address,uint256,address)\":{\"details\":\"Unstake the staked tokens - To be called by the owner of the contract\",\"params\":{\"Aggregator\":\"Provided by JS for the correct PAIR\",\"Customer\":\"Customer's address\",\"Token\":\"customer's Token\",\"amount\":\"amount of customer's token to Stake\"}},\"bonusRound(address,address,address)\":{\"details\":\"Triggers bonus computation, for calling on timer\",\"params\":{\"Aggregator\":\"Provided by JS for calulating Parity\",\"Customer\":\"Customer's address\",\"Token\":\"customer's Token\"}},\"getMoneyBalance()\":{\"details\":\"Returns the balance of our home made token for bonuses\"},\"getTokenStakedBalance(address)\":{\"details\":\"debugging purpose: Returns the amount of money staked per token\"},\"retrieveBonuses(address)\":{\"details\":\"Customer retrieves all his acquired bonuses - to be called by the owner of the contract\",\"params\":{\"customer\":\"customer who wants to get the FBMoney back\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FBStaker.sol\":\"FBStaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47\",\"dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/FBMoney.sol\":{\"keccak256\":\"0x8dbddd1b8b7da1f2579fd5bed3291bf2420200f4e2dc07bf377bbbc0f71759be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6cb5d29cf0a72799cbc1aebbab113a7e4530c7450138f26da27ddcafd741def\",\"dweb:/ipfs/QmWqwmWeaGxRwyXDMDCDsRiz8pWQtPp2VUquR4BvSdzx61\"]},\"project:/contracts/FBStaker.sol\":{\"keccak256\":\"0xfc2fa06223abb455ef23eab9ba7085c47236906b4841974859ba938bde6999cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b82076c069d465fff4716fa246203aab9242abf03031cbea0c1a4bf99adb06a\",\"dweb:/ipfs/QmYi6SS445GqRLvDV6nAXkHKvXGrwLcU4rGvPoKGZjpubt\"]}},\"version\":1}",
  "bytecode": "0x608060405260016000553480156200001657600080fd5b506103e86040516200002890620000b4565b620000349190620000d3565b604051809103906000f08015801562000051573d6000803e3d6000fd5b50600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506012600460006101000a81548160ff021916908360ff1602179055506200010e565b6119068062001bfa83390190565b620000cd81620000fa565b82525050565b6000602082019050620000ea6000830184620000c2565b92915050565b6000819050919050565b60006200010782620000f0565b9050919050565b611adc806200011e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063093e5a1d146100675780633544357114610083578063469c67541461009f5780639da3f76d146100bb578063b80f5f89146100d7578063e2f59ec914610107575b600080fd5b610081600480360381019061007c9190611052565b610125565b005b61009d6004803603810190610098919061117f565b6102e8565b005b6100b960048036038101906100b4919061107b565b6105b0565b005b6100d560048036038101906100d091906110ca565b6107f9565b005b6100f160048036038101906100ec9190611156565b610b43565b6040516100fe919061145f565b60405180910390f35b61010f610bcc565b60405161011c919061145f565b60405180910390f35b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561016057600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600081146102e3576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f03d0edaee35df77920681c2dbc0bdb40062585adafef0b3547bd994c9de2668c83826040516102289291906113f6565b60405180910390a1600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3385846040518463ffffffff1660e01b815260040161028f9392919061135f565b602060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e1919061112d565b505b505050565b8160008114156102f757600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561033257600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561036d57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160200151111561042557610424338683610c7e565b5b8581602001818151610437919061148b565b915081815250504381600001818152505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050507f17a90bf25d618e67de9bc66de5762d97787b11707d112164ab54c37111467f2b33888860405161050f939291906113bf565b60405180910390a18673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016105549392919061135f565b602060405180830381600087803b15801561056e57600080fd5b505af1158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a6919061112d565b5050505050505050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105eb57600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561062657600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066157600080fd5b6000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816020015111156107b757610718878683610c7e565b4381600001818152505080600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505b7f543e2a778776598bebee5d88699813b2a595a90ce0382574f046ce60b29085b387876040516107e8929190611396565b60405180910390a150505050505050565b81600081141561080857600080fd5b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561084357600080fd5b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561087e57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108b957600080fd5b6000600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050868160200151101561099f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109969061141f565b60405180910390fd5b6000816020015111156109b8576109b7898783610c7e565b5b86816020018181516109ca919061185e565b915081815250504381600001818152505080600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050507f4c5a68df1e54dd796657dc5832c88515a36dc92548af9951a0ef38dd61a3322e898989604051610aa2939291906113bf565b60405180910390a18773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a896040518363ffffffff1660e01b8152600401610ae59291906113f6565b602060405180830381600087803b158015610aff57600080fd5b505af1158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b37919061112d565b50505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6000600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c299190611344565b60206040518083038186803b158015610c4157600080fd5b505afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7991906111ce565b905090565b6000610c8a8284610cf5565b90506000811115610cef5780600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610ce7919061148b565b925050819055505b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7691906111f7565b50505091505060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610dc457600080fd5b505afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc919061126e565b9050600460009054906101000a900460ff1660ff168160ff1614610e6a5781610e358383600460009054906101000a900460ff16610e98565b610e3f91906116ed565b610e4886610f1b565b8660200151610e579190611804565b610e619190611804565b92505050610e92565b81610e7486610f1b565b8660200151610e839190611804565b610e8d9190611804565b925050505b92915050565b60008160ff168360ff161015610ed5578282610eb49190611892565b60ff16600a610ec391906115cf565b84610ece91906116ed565b9050610f14565b8160ff168360ff161115610f10578183610eef9190611892565b60ff16600a610efe91906115cf565b84610f0991906114e1565b9050610f14565b8390505b9392505050565b600081600001514311610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061143f565b60405180910390fd5b62030ad9600054836000015143610f7a919061185e565b610f849190611804565b610f8e919061154b565b9050919050565b600081359050610fa4816119ee565b92915050565b600081519050610fb981611a05565b92915050565b600081359050610fce81611a1c565b92915050565b600081359050610fe381611a33565b92915050565b600081519050610ff881611a4a565b92915050565b60008135905061100d81611a61565b92915050565b60008151905061102281611a61565b92915050565b60008151905061103781611a8f565b92915050565b60008151905061104c81611a78565b92915050565b60006020828403121561106457600080fd5b600061107284828501610f95565b91505092915050565b60008060006060848603121561109057600080fd5b600061109e86828701610f95565b93505060206110af86828701610fd4565b92505060406110c086828701610f95565b9150509250925092565b600080600080608085870312156110e057600080fd5b60006110ee87828801610f95565b94505060206110ff87828801610fd4565b935050604061111087828801610ffe565b925050606061112187828801610f95565b91505092959194509250565b60006020828403121561113f57600080fd5b600061114d84828501610faa565b91505092915050565b60006020828403121561116857600080fd5b600061117684828501610fbf565b91505092915050565b60008060006060848603121561119457600080fd5b60006111a286828701610fd4565b93505060206111b386828701610ffe565b92505060406111c486828701610f95565b9150509250925092565b6000602082840312156111e057600080fd5b60006111ee84828501611013565b91505092915050565b600080600080600060a0868803121561120f57600080fd5b600061121d88828901611028565b955050602061122e88828901610fe9565b945050604061123f88828901611013565b935050606061125088828901611013565b925050608061126188828901611028565b9150509295509295909350565b60006020828403121561128057600080fd5b600061128e8482850161103d565b91505092915050565b6112a0816118c6565b82525050565b6112af8161195f565b82525050565b60006112c2600f8361147a565b91507f616d6f756e7420746f6f206869676800000000000000000000000000000000006000830152602082019050919050565b600061130260148361147a565b91507f696e76616c696420626c6f636b206e756d6265720000000000000000000000006000830152602082019050919050565b61133e81611932565b82525050565b60006020820190506113596000830184611297565b92915050565b60006060820190506113746000830186611297565b6113816020830185611297565b61138e6040830184611335565b949350505050565b60006040820190506113ab6000830185611297565b6113b860208301846112a6565b9392505050565b60006060820190506113d46000830186611297565b6113e160208301856112a6565b6113ee6040830184611335565b949350505050565b600060408201905061140b6000830185611297565b6114186020830184611335565b9392505050565b60006020820190508181036000830152611438816112b5565b9050919050565b60006020820190508181036000830152611458816112f5565b9050919050565b60006020820190506114746000830184611335565b92915050565b600082825260208201905092915050565b600061149682611932565b91506114a183611932565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114d6576114d5611983565b5b828201905092915050565b60006114ec82611908565b91506114f783611908565b925082611507576115066119b2565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156115405761153f611983565b5b828205905092915050565b600061155682611932565b915061156183611932565b925082611571576115706119b2565b5b828204905092915050565b6000808291508390505b60018511156115c6578086048111156115a2576115a1611983565b5b60018516156115b15780820291505b80810290506115bf856119e1565b9450611586565b94509492505050565b60006115da82611932565b91506115e583611932565b92506116127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461161a565b905092915050565b60008261162a57600190506116e6565b8161163857600090506116e6565b816001811461164e576002811461165857611687565b60019150506116e6565b60ff84111561166a57611669611983565b5b8360020a91508482111561168157611680611983565b5b506116e6565b5060208310610133831016604e8410600b84101617156116bc5782820a9050838111156116b7576116b6611983565b5b6116e6565b6116c9848484600161157c565b925090508184048111156116e0576116df611983565b5b81810290505b9392505050565b60006116f882611908565b915061170383611908565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561174257611741611983565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561177f5761177e611983565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156117bc576117bb611983565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156117f9576117f8611983565b5b828202905092915050565b600061180f82611932565b915061181a83611932565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561185357611852611983565b5b828202905092915050565b600061186982611932565b915061187483611932565b92508282101561188757611886611983565b5b828203905092915050565b600061189d8261193c565b91506118a88361193c565b9250828210156118bb576118ba611983565b5b828203905092915050565b60006118d182611912565b9050919050565b60008115159050919050565b60006118ef826118c6565b9050919050565b6000611901826118c6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b600061196a82611971565b9050919050565b600061197c82611912565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b6119f7816118c6565b8114611a0257600080fd5b50565b611a0e816118d8565b8114611a1957600080fd5b50565b611a25816118e4565b8114611a3057600080fd5b50565b611a3c816118f6565b8114611a4757600080fd5b50565b611a5381611908565b8114611a5e57600080fd5b50565b611a6a81611932565b8114611a7557600080fd5b50565b611a818161193c565b8114611a8c57600080fd5b50565b611a9881611949565b8114611aa357600080fd5b5056fea2646970667358221220660a0de0c9daba240b738a10a73fd48daca4eff3c8192ffc4b7bab9db48cdf2964736f6c6343000800003360806040523480156200001157600080fd5b506040516200190638038062001906833981810160405281019062000037919062000370565b6040518060400160405280600f81526020017f4672616e6365426f72674d6f6e657900000000000000000000000000000000008152506040518060400160405280600381526020017f46424d00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620002a9565b508060049080519060200190620000d4929190620002a9565b5050506200011633620000ec6200011d60201b60201c565b60ff16600a84620000fe91906200049c565b6200010a91906200049c565b6200012660201b60201c565b50620005b5565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000199576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019090620003ef565b60405180910390fd5b620001ad600083836200029f60201b60201c565b8060026000828254620001c191906200043f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200021891906200043f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027f919062000411565b60405180910390a36200029b60008383620002a460201b60201c565b5050565b505050565b505050565b828054620002b79062000507565b90600052602060002090601f016020900481019282620002db576000855562000327565b82601f10620002f657805160ff191683800117855562000327565b8280016001018555821562000327579182015b828111156200032657825182559160200191906001019062000309565b5b5090506200033691906200033a565b5090565b5b80821115620003555760008160009055506001016200033b565b5090565b6000815190506200036a816200059b565b92915050565b6000602082840312156200038357600080fd5b6000620003938482850162000359565b91505092915050565b6000620003ab601f836200042e565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620003e981620004fd565b82525050565b600060208201905081810360008301526200040a816200039c565b9050919050565b6000602082019050620004286000830184620003de565b92915050565b600082825260208201905092915050565b60006200044c82620004fd565b91506200045983620004fd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200049157620004906200053d565b5b828201905092915050565b6000620004a982620004fd565b9150620004b683620004fd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620004f257620004f16200053d565b5b828202905092915050565b6000819050919050565b600060028204905060018216806200052057607f821691505b602082108114156200053757620005366200056c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620005a681620004fd565b8114620005b257600080fd5b50565b61134180620005c56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c3919061100a565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610fef565b60405180910390f35b610104610326565b604051610111919061110c565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610fef565b60405180910390f35b610152610428565b60405161015f9190611127565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610fef565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf919061110c565b60405180910390f35b6101d0610525565b6040516101dd919061100a565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610fef565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610fef565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d919061110c565b60405180910390f35b6060600380546102859061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061123c565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061108c565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce919061115e565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105349061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546105609061123c565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a906110ec565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906110cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108269061104c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d919061110c565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610981906110ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f19061102c565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a829061106c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e919061115e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b82919061110c565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb4816112dd565b92915050565b600081359050610bc9816112f4565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc8816111c6565b82525050565b6000610cd982611142565b610ce3818561114d565b9350610cf3818560208601611209565b610cfc816112cc565b840191505092915050565b6000610d1460238361114d565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d7a60228361114d565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610de060268361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e4660288361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610eac60258361114d565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f1260248361114d565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7860258361114d565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610fda816111f2565b82525050565b610fe9816111fc565b82525050565b60006020820190506110046000830184610cbf565b92915050565b600060208201905081810360008301526110248184610cce565b905092915050565b6000602082019050818103600083015261104581610d07565b9050919050565b6000602082019050818103600083015261106581610d6d565b9050919050565b6000602082019050818103600083015261108581610dd3565b9050919050565b600060208201905081810360008301526110a581610e39565b9050919050565b600060208201905081810360008301526110c581610e9f565b9050919050565b600060208201905081810360008301526110e581610f05565b9050919050565b6000602082019050818103600083015261110581610f6b565b9050919050565b60006020820190506111216000830184610fd1565b92915050565b600060208201905061113c6000830184610fe0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611169826111f2565b9150611174836111f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111a9576111a861126e565b5b828201905092915050565b60006111bf826111d2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561122757808201518184015260208101905061120c565b83811115611236576000848401525b50505050565b6000600282049050600182168061125457607f821691505b602082108114156112685761126761129d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6112e6816111b4565b81146112f157600080fd5b50565b6112fd816111f2565b811461130857600080fd5b5056fea2646970667358221220dc65a6da80e464200c4371dc44879fdb55f0fcde00581f28e15ef03e881f714b64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063093e5a1d146100675780633544357114610083578063469c67541461009f5780639da3f76d146100bb578063b80f5f89146100d7578063e2f59ec914610107575b600080fd5b610081600480360381019061007c9190611052565b610125565b005b61009d6004803603810190610098919061117f565b6102e8565b005b6100b960048036038101906100b4919061107b565b6105b0565b005b6100d560048036038101906100d091906110ca565b6107f9565b005b6100f160048036038101906100ec9190611156565b610b43565b6040516100fe919061145f565b60405180910390f35b61010f610bcc565b60405161011c919061145f565b60405180910390f35b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561016057600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600081146102e3576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f03d0edaee35df77920681c2dbc0bdb40062585adafef0b3547bd994c9de2668c83826040516102289291906113f6565b60405180910390a1600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3385846040518463ffffffff1660e01b815260040161028f9392919061135f565b602060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e1919061112d565b505b505050565b8160008114156102f757600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561033257600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561036d57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160200151111561042557610424338683610c7e565b5b8581602001818151610437919061148b565b915081815250504381600001818152505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050507f17a90bf25d618e67de9bc66de5762d97787b11707d112164ab54c37111467f2b33888860405161050f939291906113bf565b60405180910390a18673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016105549392919061135f565b602060405180830381600087803b15801561056e57600080fd5b505af1158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a6919061112d565b5050505050505050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105eb57600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561062657600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066157600080fd5b6000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816020015111156107b757610718878683610c7e565b4381600001818152505080600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505b7f543e2a778776598bebee5d88699813b2a595a90ce0382574f046ce60b29085b387876040516107e8929190611396565b60405180910390a150505050505050565b81600081141561080857600080fd5b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561084357600080fd5b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561087e57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108b957600080fd5b6000600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050868160200151101561099f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109969061141f565b60405180910390fd5b6000816020015111156109b8576109b7898783610c7e565b5b86816020018181516109ca919061185e565b915081815250504381600001818152505080600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050507f4c5a68df1e54dd796657dc5832c88515a36dc92548af9951a0ef38dd61a3322e898989604051610aa2939291906113bf565b60405180910390a18773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a896040518363ffffffff1660e01b8152600401610ae59291906113f6565b602060405180830381600087803b158015610aff57600080fd5b505af1158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b37919061112d565b50505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6000600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c299190611344565b60206040518083038186803b158015610c4157600080fd5b505afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7991906111ce565b905090565b6000610c8a8284610cf5565b90506000811115610cef5780600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610ce7919061148b565b925050819055505b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7691906111f7565b50505091505060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610dc457600080fd5b505afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc919061126e565b9050600460009054906101000a900460ff1660ff168160ff1614610e6a5781610e358383600460009054906101000a900460ff16610e98565b610e3f91906116ed565b610e4886610f1b565b8660200151610e579190611804565b610e619190611804565b92505050610e92565b81610e7486610f1b565b8660200151610e839190611804565b610e8d9190611804565b925050505b92915050565b60008160ff168360ff161015610ed5578282610eb49190611892565b60ff16600a610ec391906115cf565b84610ece91906116ed565b9050610f14565b8160ff168360ff161115610f10578183610eef9190611892565b60ff16600a610efe91906115cf565b84610f0991906114e1565b9050610f14565b8390505b9392505050565b600081600001514311610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061143f565b60405180910390fd5b62030ad9600054836000015143610f7a919061185e565b610f849190611804565b610f8e919061154b565b9050919050565b600081359050610fa4816119ee565b92915050565b600081519050610fb981611a05565b92915050565b600081359050610fce81611a1c565b92915050565b600081359050610fe381611a33565b92915050565b600081519050610ff881611a4a565b92915050565b60008135905061100d81611a61565b92915050565b60008151905061102281611a61565b92915050565b60008151905061103781611a8f565b92915050565b60008151905061104c81611a78565b92915050565b60006020828403121561106457600080fd5b600061107284828501610f95565b91505092915050565b60008060006060848603121561109057600080fd5b600061109e86828701610f95565b93505060206110af86828701610fd4565b92505060406110c086828701610f95565b9150509250925092565b600080600080608085870312156110e057600080fd5b60006110ee87828801610f95565b94505060206110ff87828801610fd4565b935050604061111087828801610ffe565b925050606061112187828801610f95565b91505092959194509250565b60006020828403121561113f57600080fd5b600061114d84828501610faa565b91505092915050565b60006020828403121561116857600080fd5b600061117684828501610fbf565b91505092915050565b60008060006060848603121561119457600080fd5b60006111a286828701610fd4565b93505060206111b386828701610ffe565b92505060406111c486828701610f95565b9150509250925092565b6000602082840312156111e057600080fd5b60006111ee84828501611013565b91505092915050565b600080600080600060a0868803121561120f57600080fd5b600061121d88828901611028565b955050602061122e88828901610fe9565b945050604061123f88828901611013565b935050606061125088828901611013565b925050608061126188828901611028565b9150509295509295909350565b60006020828403121561128057600080fd5b600061128e8482850161103d565b91505092915050565b6112a0816118c6565b82525050565b6112af8161195f565b82525050565b60006112c2600f8361147a565b91507f616d6f756e7420746f6f206869676800000000000000000000000000000000006000830152602082019050919050565b600061130260148361147a565b91507f696e76616c696420626c6f636b206e756d6265720000000000000000000000006000830152602082019050919050565b61133e81611932565b82525050565b60006020820190506113596000830184611297565b92915050565b60006060820190506113746000830186611297565b6113816020830185611297565b61138e6040830184611335565b949350505050565b60006040820190506113ab6000830185611297565b6113b860208301846112a6565b9392505050565b60006060820190506113d46000830186611297565b6113e160208301856112a6565b6113ee6040830184611335565b949350505050565b600060408201905061140b6000830185611297565b6114186020830184611335565b9392505050565b60006020820190508181036000830152611438816112b5565b9050919050565b60006020820190508181036000830152611458816112f5565b9050919050565b60006020820190506114746000830184611335565b92915050565b600082825260208201905092915050565b600061149682611932565b91506114a183611932565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114d6576114d5611983565b5b828201905092915050565b60006114ec82611908565b91506114f783611908565b925082611507576115066119b2565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156115405761153f611983565b5b828205905092915050565b600061155682611932565b915061156183611932565b925082611571576115706119b2565b5b828204905092915050565b6000808291508390505b60018511156115c6578086048111156115a2576115a1611983565b5b60018516156115b15780820291505b80810290506115bf856119e1565b9450611586565b94509492505050565b60006115da82611932565b91506115e583611932565b92506116127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461161a565b905092915050565b60008261162a57600190506116e6565b8161163857600090506116e6565b816001811461164e576002811461165857611687565b60019150506116e6565b60ff84111561166a57611669611983565b5b8360020a91508482111561168157611680611983565b5b506116e6565b5060208310610133831016604e8410600b84101617156116bc5782820a9050838111156116b7576116b6611983565b5b6116e6565b6116c9848484600161157c565b925090508184048111156116e0576116df611983565b5b81810290505b9392505050565b60006116f882611908565b915061170383611908565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561174257611741611983565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561177f5761177e611983565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156117bc576117bb611983565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156117f9576117f8611983565b5b828202905092915050565b600061180f82611932565b915061181a83611932565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561185357611852611983565b5b828202905092915050565b600061186982611932565b915061187483611932565b92508282101561188757611886611983565b5b828203905092915050565b600061189d8261193c565b91506118a88361193c565b9250828210156118bb576118ba611983565b5b828203905092915050565b60006118d182611912565b9050919050565b60008115159050919050565b60006118ef826118c6565b9050919050565b6000611901826118c6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b600061196a82611971565b9050919050565b600061197c82611912565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b6119f7816118c6565b8114611a0257600080fd5b50565b611a0e816118d8565b8114611a1957600080fd5b50565b611a25816118e4565b8114611a3057600080fd5b50565b611a3c816118f6565b8114611a4757600080fd5b50565b611a5381611908565b8114611a5e57600080fd5b50565b611a6a81611932565b8114611a7557600080fd5b50565b611a818161193c565b8114611a8c57600080fd5b50565b611a9881611949565b8114611aa357600080fd5b5056fea2646970667358221220660a0de0c9daba240b738a10a73fd48daca4eff3c8192ffc4b7bab9db48cdf2964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:626:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:77:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "100:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "147:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "105:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "105:48:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "93:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:61:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "93:61:7"
                }
              ]
            },
            "name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "71:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "78:3:7",
                "type": ""
              }
            ],
            "src": "7:153:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:135:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "285:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "297:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "293:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "293:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "285:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "376:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "400:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "385:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "385:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "321:54:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "321:82:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "321:82:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "247:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "259:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "270:4:7",
                "type": ""
              }
            ],
            "src": "166:244:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "461:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "471:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "482:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "471:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "443:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "453:7:7",
                "type": ""
              }
            ],
            "src": "416:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "570:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "580:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "611:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "593:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "593:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "580:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "550:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "560:9:7",
                "type": ""
              }
            ],
            "src": "499:124:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17392:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:7",
                "type": ""
              }
            ],
            "src": "152:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:100:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "379:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "448:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$591",
                      "nodeType": "YulIdentifier",
                      "src": "408:39:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:46:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:46:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:7",
                "type": ""
              }
            ],
            "src": "295:165:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "532:101:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "542:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "564:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "551:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "542:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "621:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$669",
                      "nodeType": "YulIdentifier",
                      "src": "580:40:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "580:47:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$669",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "510:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "518:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "526:5:7",
                "type": ""
              }
            ],
            "src": "466:167:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "701:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "711:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "726:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "720:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "711:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "768:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "742:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "742:32:7"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "679:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "687:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "695:5:7",
                "type": ""
              }
            ],
            "src": "639:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "838:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "848:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "870:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "857:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "848:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "913:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "886:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "886:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "816:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "824:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "832:5:7",
                "type": ""
              }
            ],
            "src": "786:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "994:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1004:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1019:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1004:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1062:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1035:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1035:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "972:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "980:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "988:5:7",
                "type": ""
              }
            ],
            "src": "931:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1142:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1152:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1161:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1152:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1209:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "1183:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:32:7"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1120:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1128:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1136:5:7",
                "type": ""
              }
            ],
            "src": "1080:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1288:78:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1313:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1307:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1307:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1298:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1354:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "1329:24:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1329:31:7"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1266:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1274:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1282:5:7",
                "type": ""
              }
            ],
            "src": "1227:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1438:196:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1484:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1493:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1496:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1486:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1486:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1486:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1459:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1468:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1455:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1455:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1480:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1451:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1451:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1448:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1510:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1525:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1529:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1554:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1589:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1600:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1585:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1585:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1609:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1564:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1564:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1554:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1408:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1419:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1431:6:7",
                "type": ""
              }
            ],
            "src": "1372:262:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1754:466:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1800:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1809:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1812:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1802:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1802:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1802:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1775:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1784:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1796:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1767:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1767:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1764:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1826:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1841:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1855:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1845:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1870:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1905:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1916:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1901:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1901:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1925:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1880:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1880:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1870:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1953:132:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1968:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1982:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1972:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1998:77:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2047:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2058:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2043:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2043:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2067:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$669",
                          "nodeType": "YulIdentifier",
                          "src": "2008:34:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2008:67:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1998:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2095:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2110:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2124:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2114:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2140:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2175:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2186:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2171:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2171:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2195:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2150:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2140:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$669t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1708:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1719:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1731:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1739:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1747:6:7",
                "type": ""
              }
            ],
            "src": "1640:580:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:595:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2404:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2413:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2416:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2406:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2406:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2406:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2378:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2387:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2374:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2374:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2399:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2370:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:33:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2367:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2430:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2445:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2459:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2449:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2474:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2509:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2520:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2505:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2505:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2529:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2484:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2484:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2474:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2557:132:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2572:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2586:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2576:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2602:77:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2651:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2662:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2647:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2647:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2671:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$669",
                          "nodeType": "YulIdentifier",
                          "src": "2612:34:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2612:67:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2602:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2699:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2714:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2728:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2718:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2744:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2779:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2790:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2775:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2775:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2799:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2754:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2754:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2744:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2827:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2842:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2856:2:7",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2846:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2872:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2907:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2918:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2903:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2903:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2927:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2882:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2882:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2872:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$669t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2303:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2314:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2326:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2334:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2342:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2350:6:7",
                "type": ""
              }
            ],
            "src": "2226:726:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3032:204:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3078:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3087:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3090:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3080:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3080:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3080:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3053:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3062:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3049:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3049:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3074:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3045:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3045:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3042:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3104:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3119:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3133:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3123:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3148:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3191:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3202:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3187:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3187:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3211:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3158:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3158:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3148:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3002:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3013:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3025:6:7",
                "type": ""
              }
            ],
            "src": "2958:278:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3321:209:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3367:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3376:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3379:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3369:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3369:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3369:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3342:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3351:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3363:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3334:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3334:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3331:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3393:130:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3408:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3422:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3412:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3437:76:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3485:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3496:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3481:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3481:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3505:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$591",
                          "nodeType": "YulIdentifier",
                          "src": "3447:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3447:66:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3437:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3291:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3302:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3314:6:7",
                "type": ""
              }
            ],
            "src": "3242:288:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3650:466:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3696:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3705:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3708:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3698:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3698:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3698:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3671:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3680:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3667:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3667:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3692:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3663:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3663:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3660:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3722:131:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3737:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3751:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3741:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3766:77:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3815:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3826:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3811:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3811:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3835:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$669",
                          "nodeType": "YulIdentifier",
                          "src": "3776:34:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:67:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3766:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3863:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3878:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3892:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3882:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3908:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3943:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3954:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3939:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3939:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3963:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3918:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3908:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3991:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4006:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4020:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4010:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4036:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4071:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4082:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4067:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4067:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4091:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4046:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4046:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4036:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$669t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3604:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3615:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3627:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3635:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3643:6:7",
                "type": ""
              }
            ],
            "src": "3536:580:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4199:207:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4245:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4254:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4257:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4247:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4247:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4247:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4220:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4229:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4216:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4216:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4241:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4212:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4212:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "4209:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4271:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4286:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4300:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4290:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4315:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4361:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4372:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4357:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4357:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4381:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4325:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4325:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4315:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4169:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4180:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4192:6:7",
                "type": ""
              }
            ],
            "src": "4122:284:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4554:762:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4601:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4610:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4613:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4603:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4603:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4603:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4575:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4584:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4571:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4571:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4596:3:7",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4567:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4567:33:7"
                  },
                  "nodeType": "YulIf",
                  "src": "4564:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4627:127:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4642:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4656:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4646:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4671:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4716:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4727:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4712:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4712:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4736:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4681:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4681:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4671:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4764:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4779:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4793:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4783:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4809:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4854:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4865:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4850:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4850:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4874:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4819:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4819:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4809:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4902:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4917:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4931:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4921:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4947:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4993:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5004:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4989:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4989:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5013:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4957:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4957:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4947:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5041:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5056:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5070:2:7",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5060:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5086:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5132:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5143:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5128:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5128:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5152:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5096:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5096:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5086:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5180:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5195:17:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5209:3:7",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5199:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5226:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5271:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5282:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5267:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5267:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5291:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5236:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5236:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "5226:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4492:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4503:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4515:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4523:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4531:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4539:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4547:6:7",
                "type": ""
              }
            ],
            "src": "4412:904:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5397:205:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5443:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5452:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5455:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5445:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5445:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5445:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5418:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5427:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5414:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5414:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5439:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5410:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5410:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "5407:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5469:126:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5484:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5498:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5488:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5513:72:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5557:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5568:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5553:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5553:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5577:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5523:29:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5523:62:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5513:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5367:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5378:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5390:6:7",
                "type": ""
              }
            ],
            "src": "5322:280:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5673:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5690:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5713:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5695:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5695:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5683:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5683:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5683:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5661:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5668:3:7",
                "type": ""
              }
            ],
            "src": "5608:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5811:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5828:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5878:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$669_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5833:44:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5833:51:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5821:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5821:64:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5821:64:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$669_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5799:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5806:3:7",
                "type": ""
              }
            ],
            "src": "5732:159:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6043:167:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6053:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6119:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6124:2:7",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6060:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6060:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6053:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6148:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6153:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6144:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6144:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6157:17:7",
                        "type": "",
                        "value": "amount too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6137:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6137:38:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6137:38:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6185:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6196:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6201:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6192:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6185:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6031:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6039:3:7",
                "type": ""
              }
            ],
            "src": "5897:313:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6362:172:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6372:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6438:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6443:2:7",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6379:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6372:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6467:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6472:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6463:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6463:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6476:22:7",
                        "type": "",
                        "value": "invalid block number"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6456:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6456:43:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6456:43:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6509:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6520:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6525:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6516:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6516:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6509:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6350:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6358:3:7",
                "type": ""
              }
            ],
            "src": "6216:318:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6605:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6622:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6645:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6627:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6627:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6615:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6615:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6615:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6593:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6600:3:7",
                "type": ""
              }
            ],
            "src": "6540:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6762:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6772:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6784:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6795:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6780:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6780:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6772:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6852:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6865:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6876:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6861:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6861:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6808:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6808:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6808:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6734:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6746:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6757:4:7",
                "type": ""
              }
            ],
            "src": "6664:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7046:288:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7056:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7068:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7079:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7064:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7064:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7056:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7136:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7149:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7160:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7145:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7145:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7092:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7092:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7092:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7217:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7230:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7241:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7226:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7226:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7173:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7173:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7173:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7299:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7312:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7323:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7308:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7308:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7255:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7255:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7255:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7002:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7014:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7022:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7030:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7041:4:7",
                "type": ""
              }
            ],
            "src": "6892:442:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7480:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7490:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7502:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7513:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7498:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7498:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7490:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7570:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7583:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7594:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7579:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7579:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7526:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7526:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7526:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7665:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7678:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7689:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7674:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7674:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$669_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7607:57:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7607:86:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7607:86:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_contract$_IERC20_$669__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7444:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7456:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7464:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7475:4:7",
                "type": ""
              }
            ],
            "src": "7340:360:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7874:302:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7884:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7896:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7907:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7892:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7892:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7884:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7964:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7977:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7988:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7973:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7973:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7920:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7920:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7920:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8059:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8072:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8083:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8068:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8068:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$669_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8001:57:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8001:86:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8001:86:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8141:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8154:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8165:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8150:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8150:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8097:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8097:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8097:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_contract$_IERC20_$669_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7830:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7842:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7850:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7858:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7869:4:7",
                "type": ""
              }
            ],
            "src": "7706:470:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8308:206:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8318:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8330:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8341:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8326:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8326:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8318:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8398:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8411:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8422:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8407:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8407:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8354:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8354:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8354:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8479:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8492:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8503:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8488:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8488:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8435:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8435:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8435:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8272:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8284:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8292:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8303:4:7",
                "type": ""
              }
            ],
            "src": "8182:332:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8691:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8701:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8713:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8724:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8709:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8709:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8701:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8748:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8759:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8744:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8744:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8767:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8773:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8763:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8763:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8737:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8737:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8737:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8793:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8927:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8801:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8801:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8793:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8671:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8686:4:7",
                "type": ""
              }
            ],
            "src": "8520:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9116:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9126:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9138:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9149:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9134:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9134:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9126:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9173:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9184:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9169:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9169:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9192:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9198:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9188:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9188:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9162:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9162:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9162:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9218:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9352:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9226:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9226:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9218:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9096:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9111:4:7",
                "type": ""
              }
            ],
            "src": "8945:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9468:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9478:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9490:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9501:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9486:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9486:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9478:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9558:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9571:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9582:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9567:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9567:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9514:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9514:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9514:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9440:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9452:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9463:4:7",
                "type": ""
              }
            ],
            "src": "9370:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9694:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9711:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9716:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9704:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9704:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9704:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9732:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9751:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9756:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9747:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9747:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9732:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9666:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9671:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9682:11:7",
                "type": ""
              }
            ],
            "src": "9598:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9817:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9827:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9850:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9832:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9832:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9827:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9861:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9884:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9866:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9866:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9861:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10024:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10026:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10026:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10026:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9945:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9952:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10020:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9948:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9948:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9942:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9942:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9939:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10056:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10067:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10070:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10063:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10063:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10056:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9804:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9807:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9813:3:7",
                "type": ""
              }
            ],
            "src": "9773:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10125:344:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10135:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10157:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "10140:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10140:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10135:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10168:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10190:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "10173:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10173:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10168:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10214:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10216:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10216:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10216:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10211:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10204:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10204:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10201:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10416:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10418:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10418:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10418:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10305:1:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10308:66:7",
                            "type": "",
                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10302:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10302:73:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10392:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10399:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10402:1:7",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10395:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10395:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10389:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10389:16:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10285:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10285:130:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10282:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10448:15:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10458:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10461:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sdiv",
                      "nodeType": "YulIdentifier",
                      "src": "10453:4:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10453:10:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10448:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10114:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10117:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10123:1:7",
                "type": ""
              }
            ],
            "src": "10084:385:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10517:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10527:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10550:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10532:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10532:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10527:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10561:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10584:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10566:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10566:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10561:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10608:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10610:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10610:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10610:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10605:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10598:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10598:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10595:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10640:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10649:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10652:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10645:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10645:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10640:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10506:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10509:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10515:1:7",
                "type": ""
              }
            ],
            "src": "10475:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10739:775:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10749:15:7",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "10758:6:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10749:5:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10773:14:7",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "10782:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "10773:4:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10831:677:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10919:22:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10921:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10921:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10921:18:7"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10897:4:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "10907:3:7"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "10912:4:7"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "10903:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10903:14:7"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10894:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10894:24:7"
                        },
                        "nodeType": "YulIf",
                        "src": "10891:2:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10986:419:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11366:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "11379:5:7"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11386:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11375:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11375:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11366:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10961:8:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10971:1:7",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10957:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10957:16:7"
                        },
                        "nodeType": "YulIf",
                        "src": "10954:2:7"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11418:23:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11430:4:7"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11436:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "11426:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11426:15:7"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11418:4:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11454:44:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11489:8:7"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "11466:22:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11466:32:7"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "11454:8:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10807:8:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10817:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10804:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10804:15:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10820:2:7",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10800:3:7",
                    "statements": []
                  },
                  "src": "10796:712:7"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "10694:6:7",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "10702:5:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10709:8:7",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "10719:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10727:5:7",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10734:4:7",
                "type": ""
              }
            ],
            "src": "10666:848:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11586:219:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11596:31:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11622:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11604:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11604:23:7"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11596:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11636:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11666:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11648:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11648:27:7"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "11636:8:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11685:113:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11715:4:7"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11721:8:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11731:66:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "11694:20:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11694:104:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11685:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11561:4:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11567:8:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11580:5:7",
                "type": ""
              }
            ],
            "src": "11520:285:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11871:1013:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12066:20:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12068:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12077:1:7",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12068:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12079:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12056:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12049:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12049:16:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12046:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12111:20:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12113:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12122:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12113:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12124:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12105:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12098:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12098:12:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12095:2:7"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12241:20:7",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12243:10:7",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12252:1:7",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12243:5:7"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12254:5:7"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12234:27:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12239:1:7",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12285:176:7",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12320:22:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12322:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12322:18:7"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12322:18:7"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12305:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12315:3:7",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12302:2:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12302:17:7"
                            },
                            "nodeType": "YulIf",
                            "src": "12299:2:7"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12355:25:7",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12368:1:7",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12371:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "12364:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12364:16:7"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12355:5:7"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12411:22:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12413:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12413:18:7"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12413:18:7"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12399:5:7"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "12406:3:7"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12396:2:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12396:14:7"
                            },
                            "nodeType": "YulIf",
                            "src": "12393:2:7"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12446:5:7"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12270:191:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12275:1:7",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "12191:4:7"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12184:277:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12593:123:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12607:28:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12620:4:7"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12626:8:7"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "12616:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12616:19:7"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12607:5:7"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12666:22:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "12668:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12668:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12668:18:7"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "12654:5:7"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "12661:3:7"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "12651:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12651:14:7"
                        },
                        "nodeType": "YulIf",
                        "src": "12648:2:7"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12701:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12496:4:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12502:2:7",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12493:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12493:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12510:8:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12520:2:7",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12507:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12507:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12489:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12489:35:7"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12545:4:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12551:3:7",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12542:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12542:13:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12560:8:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12570:2:7",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12557:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12557:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12538:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12538:36:7"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12473:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12473:111:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12470:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12726:57:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12760:1:7",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12763:4:7"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12769:8:7"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "12779:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "12741:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12741:42:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12726:5:7"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "12733:4:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12822:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12824:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12824:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12824:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "12799:5:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "12810:3:7"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "12815:4:7"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "12806:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12806:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12796:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12796:25:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12793:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12853:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "12866:5:7"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12873:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12862:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12862:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12853:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11841:4:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11847:8:7",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "11857:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11865:5:7",
                "type": ""
              }
            ],
            "src": "11811:1073:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12937:944:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12947:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12969:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "12952:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12952:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12947:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12980:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13002:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "12985:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12985:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12980:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13191:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13193:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13193:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13193:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13089:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13092:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "13085:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13085:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13100:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13103:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "13096:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13096:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13081:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13081:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13111:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13118:66:7",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13186:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13114:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13114:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13108:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13108:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13077:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13077:113:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13074:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13402:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13404:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13404:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13404:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13298:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13301:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "13294:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13294:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13309:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13312:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "13305:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13305:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13290:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13290:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13321:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13329:66:7",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13397:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "13324:4:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13324:75:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13317:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13317:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13286:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13286:115:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13283:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13613:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13615:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13615:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13615:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13509:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13512:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "13505:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13505:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13520:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13523:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "13516:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13516:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13501:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13501:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13532:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13540:66:7",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13608:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "13535:4:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13535:75:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13528:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13528:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13497:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13497:115:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13494:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13823:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13825:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13825:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13825:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13719:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13722:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "13715:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13715:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13730:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13733:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "13726:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13726:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13711:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13711:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13742:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13750:66:7",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13818:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "13745:4:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13745:75:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13738:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13738:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13707:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13707:115:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13704:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13855:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13870:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13873:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13866:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13866:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13855:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12920:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12923:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12929:7:7",
                "type": ""
              }
            ],
            "src": "12890:991:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13935:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13945:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13968:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13950:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13950:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13945:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13979:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14002:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13984:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13984:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13979:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14177:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14179:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14179:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14179:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14089:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14082:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14082:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14075:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14075:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14097:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14104:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14172:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14100:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14100:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14094:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14094:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14071:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14071:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14068:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14209:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14224:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14227:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14220:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14220:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14209:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13918:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13921:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13927:7:7",
                "type": ""
              }
            ],
            "src": "13887:348:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14286:146:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14296:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14319:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14301:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14301:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14296:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14330:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14353:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14335:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14335:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14330:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14377:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14379:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14379:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14379:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14371:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14374:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14368:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14368:8:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14365:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14409:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14421:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14424:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14417:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14417:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14409:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14272:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14275:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14281:4:7",
                "type": ""
              }
            ],
            "src": "14241:191:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14481:142:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14491:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14512:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "14496:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14496:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14491:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14523:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14544:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "14528:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14528:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14523:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14568:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14570:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14570:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14570:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14562:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14565:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14559:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14559:8:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14556:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14600:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14612:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14615:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14608:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14608:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14600:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14467:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14470:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14476:4:7",
                "type": ""
              }
            ],
            "src": "14438:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14674:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14684:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14713:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14695:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14695:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14684:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14656:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14666:7:7",
                "type": ""
              }
            ],
            "src": "14629:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14773:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14783:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14808:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14801:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14801:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14794:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14794:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14783:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14755:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14765:7:7",
                "type": ""
              }
            ],
            "src": "14731:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14885:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14895:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14924:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "14906:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14906:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14895:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14867:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14877:7:7",
                "type": ""
              }
            ],
            "src": "14827:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15001:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15011:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15040:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "15022:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15022:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15011:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$669",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14983:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14993:7:7",
                "type": ""
              }
            ],
            "src": "14942:110:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15102:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15112:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15123:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15112:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15084:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15094:7:7",
                "type": ""
              }
            ],
            "src": "15058:76:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15185:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15195:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15210:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15217:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15206:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15206:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15195:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15167:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15177:7:7",
                "type": ""
              }
            ],
            "src": "15140:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15317:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15327:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15338:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15327:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15299:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15309:7:7",
                "type": ""
              }
            ],
            "src": "15272:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15398:43:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15408:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15423:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15430:4:7",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15419:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15419:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15408:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15380:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15390:7:7",
                "type": ""
              }
            ],
            "src": "15355:86:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15491:61:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15501:45:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15516:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15523:22:7",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15512:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15512:34:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15501:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15473:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15483:7:7",
                "type": ""
              }
            ],
            "src": "15447:105:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15632:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15642:64:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15700:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$669_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15655:44:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15655:51:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15642:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$669_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15612:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15622:9:7",
                "type": ""
              }
            ],
            "src": "15558:154:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15792:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15802:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15833:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15815:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15815:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15802:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$669_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15772:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15782:9:7",
                "type": ""
              }
            ],
            "src": "15718:127:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15879:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15896:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15899:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15889:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15889:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15889:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15993:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15996:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15986:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15986:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15986:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16017:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16020:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16010:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16010:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16010:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15851:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16065:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16082:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16085:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16075:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16075:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16075:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16179:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16182:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16172:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16172:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16172:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16203:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16206:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16196:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16196:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16196:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "16037:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16274:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16284:34:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16309:1:7",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16312:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "16305:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16305:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "16284:8:7"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16255:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "16265:8:7",
                "type": ""
              }
            ],
            "src": "16223:102:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16374:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16431:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16440:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16443:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16433:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16433:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16433:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16397:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16422:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "16404:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16404:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16394:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16394:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16387:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16387:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16384:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16367:5:7",
                "type": ""
              }
            ],
            "src": "16331:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16499:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16553:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16562:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16565:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16555:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16555:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16555:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16522:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16544:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "16529:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16529:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16519:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16519:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16512:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16512:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16509:2:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16492:5:7",
                "type": ""
              }
            ],
            "src": "16459:116:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16637:92:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16707:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16716:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16719:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16709:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16709:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16709:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16660:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16698:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$591",
                              "nodeType": "YulIdentifier",
                              "src": "16667:30:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16667:37:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16657:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16657:48:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16650:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16650:56:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16647:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16630:5:7",
                "type": ""
              }
            ],
            "src": "16581:148:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16792:93:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16863:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16872:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16875:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16865:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16865:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16865:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16815:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16854:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$669",
                              "nodeType": "YulIdentifier",
                              "src": "16822:31:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16822:38:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16812:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16812:49:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16805:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16805:57:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16802:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$669",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16785:5:7",
                "type": ""
              }
            ],
            "src": "16735:150:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16933:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16989:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16998:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17001:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16991:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16991:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16991:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16956:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16980:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "16963:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16963:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16953:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16953:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16946:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16946:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16943:2:7"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16926:5:7",
                "type": ""
              }
            ],
            "src": "16891:120:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17060:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17117:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17126:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17129:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17119:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17119:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17119:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17083:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17108:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "17090:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17090:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17080:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17080:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17073:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17073:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "17070:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17053:5:7",
                "type": ""
              }
            ],
            "src": "17017:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17186:77:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17241:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17250:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17253:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17243:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17243:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17243:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17209:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17232:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "17216:15:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17216:22:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17206:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17206:33:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17199:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17199:41:7"
                  },
                  "nodeType": "YulIf",
                  "src": "17196:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17179:5:7",
                "type": ""
              }
            ],
            "src": "17145:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17311:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17367:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17376:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17379:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17369:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17369:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17369:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17334:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17358:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "17341:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17341:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17331:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17331:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17324:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17324:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "17321:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17304:5:7",
                "type": ""
              }
            ],
            "src": "17269:120:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$591(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC20_$591(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$669(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$669(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$669t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$669(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$669t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$669(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$591(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$591(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$669t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$669(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$669_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$669_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n\n        mstore(add(pos, 0), \"amount too high\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"invalid block number\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$669__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$669_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$669_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$669_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ERC20_$591(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$669(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$669_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$669_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$669_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$591(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$591(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$669(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$669(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "327:6807:6:-:0;;;364:1;348:17;;1055:115;;;;;;;;;;1119:4;1107:17;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1073:24;;:52;;;;;;;;;;;;;;;;;;1164:2;1152:9;;:14;;;;;;;;;;;;;;;;;;327:6807;;;;;;;;;;:::o;7:153:7:-;105:48;147:5;105:48;:::i;:::-;100:3;93:61;83:77;;:::o;166:244::-;;308:2;297:9;293:18;285:26;;321:82;400:1;389:9;385:17;376:6;321:82;:::i;:::-;275:135;;;;:::o;416:77::-;;482:5;471:16;;461:32;;;:::o;499:124::-;;593:24;611:5;593:24;:::i;:::-;580:37;;570:53;;;:::o;327:6807:6:-;;;;;;;",
  "deployedSourceMap": "327:6807:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4045:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4625:805;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6616:516;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5707:706;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1453:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1247:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4045:338;4116:8;812:1;799:15;;:1;:15;;;;791:24;;;;;;4131:13:::1;4147:9;:19;4157:8;4147:19;;;;;;;;;;;;;;;:26;;;4131:42;;4225:1;4216:5;:10;4212:168;;4262:1;4233:9;:19;4243:8;4233:19;;;;;;;;;;;;;;;:26;;:30;;;;4273:31;4288:8;4298:5;4273:31;;;;;;;:::i;:::-;;;;;;;;4309:24;;;;;;;;;;;:37;;;4347:10;4359:8;4369:5;4309:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4212:168;819:1;4045:338:::0;;:::o;4625:805::-;4729:6;739:1;734;:6;;726:15;;;;;;4762:5:::1;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::1;;4787:10:::2;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::2;;4839:16:::3;4858:9;:21;4868:10;4858:21;;;;;;;;;;;;;;;:37;4888:5;4858:37;;;;;;;;;;;;;;;4839:56;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;5036:1;5023:3;:10;;;:14;5019:63;;;5039:43;5054:10;5066;5078:3;5039:14;:43::i;:::-;5019:63;5173:6;5159:3;:10;;:20;;;;;;;:::i;:::-;;;;;;::::0;::::3;5201:12;5183:3;:15;;:30;;;::::0;::::3;5257:3;5217:9;:21;5227:10;5217:21;;;;;;;;;;;;;;;:37;5247:5;5217:37;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;5269:38;5281:10;5293:5;5300:6;5269:38;;;;;;;;:::i;:::-;;;;;;;;5373:5;:18;;;5392:10;5412:4;5419:6;5373:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;819:1;::::2;745::::1;4625:805:::0;;;;:::o;6616:516::-;6725:8;812:1;799:15;;:1;:15;;;;791:24;;;;;;6760:5:::1;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::1;;6785:10:::2;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::2;;6837:16:::3;6856:9;:19;6866:8;6856:19;;;;;;;;;;;;;;;:35;6884:5;6856:35;;;;;;;;;;;;;;;6837:54;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;6958:1;6945:3;:10;;;:14;6941:152;;;6966:41;6981:8;6991:10;7003:3;6966:14;:41::i;:::-;7030:12;7012:3;:15;;:30;;;::::0;::::3;7085:3;7047:9;:19;7057:8;7047:19;;;;;;;;;;;;;;;:35;7075:5;7047:35;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;6941:152;7101:27;7112:8;7122:5;7101:27;;;;;;;:::i;:::-;;;;;;;;819:1;::::2;::::1;6616:516:::0;;;;:::o;5707:706::-;5833:6;739:1;734;:6;;726:15;;;;;;5858:8:::1;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::1;;5893:5:::2;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::2;;5918:10:::3;812:1;799:15;;:1;:15;;;;791:24;;;::::0;::::3;;5970:16:::4;5989:9;:19;5999:8;5989:19;;;;;;;;;;;;;;;:35;6017:5;5989:35;;;;;;;;;;;;;;;5970:54;;;;;;;;;;;;;;;;;;;;;;;::::0;::::4;;;6085:6;6071:3;:10;;;:20;;6063:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;6177:1;6164:3;:10;;;:14;6160:61;;;6180:41;6195:8;6205:10;6217:3;6180:14;:41::i;:::-;6160:61;6240:6;6226:3;:10;;:20;;;;;;;:::i;:::-;;;;;;::::0;::::4;6268:12;6250:3;:15;;:30;;;::::0;::::4;6322:3;6284:9;:19;6294:8;6284:19;;;;;;;;;;;;;;;:35;6312:5;6284:35;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;6334:38;6348:8;6358:5;6365:6;6334:38;;;;;;;;:::i;:::-;;;;;;;;6377:5;:14;;;6392:8;6402:6;6377:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;819:1;::::3;::::2;745::::1;5707:706:::0;;;;;:::o;1453:142::-;1526:7;1547:9;:21;1557:10;1547:21;;;;;;;;;;;;;;;:37;1577:5;1547:37;;;;;;;;;;;;;;;:44;;;1540:51;;1453:142;;;:::o;1247:120::-;1297:7;1317:24;;;;;;;;;;;:34;;;1352:10;1317:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1310:53;;1247:120;:::o;3633:239::-;3769:13;3785:29;3798:3;3803:10;3785:12;:29::i;:::-;3769:45;;3830:1;3822:5;:9;3818:50;;;3863:5;3833:9;:19;3843:8;3833:19;;;;;;;;;;;;;;;:26;;;:35;;;;;;;:::i;:::-;;;;;;;;3818:50;3633:239;;;;:::o;2850:569::-;2939:7;2989:12;3033:10;3011:53;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2986:80;;;;;;3070:19;3114:10;3092:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3070:66;;3241:9;;;;;;;;;;;3224:26;;:13;:26;;;3220:142;;3356:5;3310:43;3321:5;3328:13;3343:9;;;;;;;;;;;3310:10;:43::i;:::-;:51;;;;:::i;:::-;3283:12;3291:3;3283:7;:12::i;:::-;3266:3;:10;;;:29;;;;:::i;:::-;:96;;;;:::i;:::-;3255:107;;;;;;3220:142;3409:5;3386:12;3394:3;3386:7;:12::i;:::-;3373:3;:10;;;:25;;;;:::i;:::-;:42;;;;:::i;:::-;3366:49;;;;2850:569;;;;;:::o;1677:493::-;1783:6;1955:9;1938:26;;:14;:26;;;1934:216;;;2018:14;2006:9;:26;;;;:::i;:::-;1998:35;;1994:2;:39;;;;:::i;:::-;1978:6;:56;;;;:::i;:::-;1971:63;;;;1934:216;2066:9;2049:26;;:14;:26;;;2045:105;;;2134:9;2117:14;:26;;;;:::i;:::-;2109:35;;2105:2;:39;;;;:::i;:::-;2089:6;:56;;;;:::i;:::-;2082:63;;;;2045:105;2160:6;2153:13;;1677:493;;;;;;:::o;2295:385::-;2353:7;2389:3;:15;;;2374:12;:30;2366:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2663:6;2641:5;;2622:3;:15;;;2607:12;:30;;;;:::i;:::-;2599:47;;;;:::i;:::-;2598:72;;;;:::i;:::-;2574:102;;2295:385;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:165::-;;392:6;379:20;370:29;;408:46;448:5;408:46;:::i;:::-;360:100;;;;:::o;466:167::-;;564:6;551:20;542:29;;580:47;621:5;580:47;:::i;:::-;532:101;;;;:::o;639:141::-;;726:6;720:13;711:22;;742:32;768:5;742:32;:::i;:::-;701:79;;;;:::o;786:139::-;;870:6;857:20;848:29;;886:33;913:5;886:33;:::i;:::-;838:87;;;;:::o;931:143::-;;1019:6;1013:13;1004:22;;1035:33;1062:5;1035:33;:::i;:::-;994:80;;;;:::o;1080:141::-;;1167:6;1161:13;1152:22;;1183:32;1209:5;1183:32;:::i;:::-;1142:79;;;;:::o;1227:139::-;;1313:6;1307:13;1298:22;;1329:31;1354:5;1329:31;:::i;:::-;1288:78;;;;:::o;1372:262::-;;1480:2;1468:9;1459:7;1455:23;1451:32;1448:2;;;1496:1;1493;1486:12;1448:2;1539:1;1564:53;1609:7;1600:6;1589:9;1585:22;1564:53;:::i;:::-;1554:63;;1510:117;1438:196;;;;:::o;1640:580::-;;;;1796:2;1784:9;1775:7;1771:23;1767:32;1764:2;;;1812:1;1809;1802:12;1764:2;1855:1;1880:53;1925:7;1916:6;1905:9;1901:22;1880:53;:::i;:::-;1870:63;;1826:117;1982:2;2008:67;2067:7;2058:6;2047:9;2043:22;2008:67;:::i;:::-;1998:77;;1953:132;2124:2;2150:53;2195:7;2186:6;2175:9;2171:22;2150:53;:::i;:::-;2140:63;;2095:118;1754:466;;;;;:::o;2226:726::-;;;;;2399:3;2387:9;2378:7;2374:23;2370:33;2367:2;;;2416:1;2413;2406:12;2367:2;2459:1;2484:53;2529:7;2520:6;2509:9;2505:22;2484:53;:::i;:::-;2474:63;;2430:117;2586:2;2612:67;2671:7;2662:6;2651:9;2647:22;2612:67;:::i;:::-;2602:77;;2557:132;2728:2;2754:53;2799:7;2790:6;2779:9;2775:22;2754:53;:::i;:::-;2744:63;;2699:118;2856:2;2882:53;2927:7;2918:6;2907:9;2903:22;2882:53;:::i;:::-;2872:63;;2827:118;2357:595;;;;;;;:::o;2958:278::-;;3074:2;3062:9;3053:7;3049:23;3045:32;3042:2;;;3090:1;3087;3080:12;3042:2;3133:1;3158:61;3211:7;3202:6;3191:9;3187:22;3158:61;:::i;:::-;3148:71;;3104:125;3032:204;;;;:::o;3242:288::-;;3363:2;3351:9;3342:7;3338:23;3334:32;3331:2;;;3379:1;3376;3369:12;3331:2;3422:1;3447:66;3505:7;3496:6;3485:9;3481:22;3447:66;:::i;:::-;3437:76;;3393:130;3321:209;;;;:::o;3536:580::-;;;;3692:2;3680:9;3671:7;3667:23;3663:32;3660:2;;;3708:1;3705;3698:12;3660:2;3751:1;3776:67;3835:7;3826:6;3815:9;3811:22;3776:67;:::i;:::-;3766:77;;3722:131;3892:2;3918:53;3963:7;3954:6;3943:9;3939:22;3918:53;:::i;:::-;3908:63;;3863:118;4020:2;4046:53;4091:7;4082:6;4071:9;4067:22;4046:53;:::i;:::-;4036:63;;3991:118;3650:466;;;;;:::o;4122:284::-;;4241:2;4229:9;4220:7;4216:23;4212:32;4209:2;;;4257:1;4254;4247:12;4209:2;4300:1;4325:64;4381:7;4372:6;4361:9;4357:22;4325:64;:::i;:::-;4315:74;;4271:128;4199:207;;;;:::o;4412:904::-;;;;;;4596:3;4584:9;4575:7;4571:23;4567:33;4564:2;;;4613:1;4610;4603:12;4564:2;4656:1;4681:63;4736:7;4727:6;4716:9;4712:22;4681:63;:::i;:::-;4671:73;;4627:127;4793:2;4819:63;4874:7;4865:6;4854:9;4850:22;4819:63;:::i;:::-;4809:73;;4764:128;4931:2;4957:64;5013:7;5004:6;4993:9;4989:22;4957:64;:::i;:::-;4947:74;;4902:129;5070:2;5096:64;5152:7;5143:6;5132:9;5128:22;5096:64;:::i;:::-;5086:74;;5041:129;5209:3;5236:63;5291:7;5282:6;5271:9;5267:22;5236:63;:::i;:::-;5226:73;;5180:129;4554:762;;;;;;;;:::o;5322:280::-;;5439:2;5427:9;5418:7;5414:23;5410:32;5407:2;;;5455:1;5452;5445:12;5407:2;5498:1;5523:62;5577:7;5568:6;5557:9;5553:22;5523:62;:::i;:::-;5513:72;;5469:126;5397:205;;;;:::o;5608:118::-;5695:24;5713:5;5695:24;:::i;:::-;5690:3;5683:37;5673:53;;:::o;5732:159::-;5833:51;5878:5;5833:51;:::i;:::-;5828:3;5821:64;5811:80;;:::o;5897:313::-;;6060:67;6124:2;6119:3;6060:67;:::i;:::-;6053:74;;6157:17;6153:1;6148:3;6144:11;6137:38;6201:2;6196:3;6192:12;6185:19;;6043:167;;;:::o;6216:318::-;;6379:67;6443:2;6438:3;6379:67;:::i;:::-;6372:74;;6476:22;6472:1;6467:3;6463:11;6456:43;6525:2;6520:3;6516:12;6509:19;;6362:172;;;:::o;6540:118::-;6627:24;6645:5;6627:24;:::i;:::-;6622:3;6615:37;6605:53;;:::o;6664:222::-;;6795:2;6784:9;6780:18;6772:26;;6808:71;6876:1;6865:9;6861:17;6852:6;6808:71;:::i;:::-;6762:124;;;;:::o;6892:442::-;;7079:2;7068:9;7064:18;7056:26;;7092:71;7160:1;7149:9;7145:17;7136:6;7092:71;:::i;:::-;7173:72;7241:2;7230:9;7226:18;7217:6;7173:72;:::i;:::-;7255;7323:2;7312:9;7308:18;7299:6;7255:72;:::i;:::-;7046:288;;;;;;:::o;7340:360::-;;7513:2;7502:9;7498:18;7490:26;;7526:71;7594:1;7583:9;7579:17;7570:6;7526:71;:::i;:::-;7607:86;7689:2;7678:9;7674:18;7665:6;7607:86;:::i;:::-;7480:220;;;;;:::o;7706:470::-;;7907:2;7896:9;7892:18;7884:26;;7920:71;7988:1;7977:9;7973:17;7964:6;7920:71;:::i;:::-;8001:86;8083:2;8072:9;8068:18;8059:6;8001:86;:::i;:::-;8097:72;8165:2;8154:9;8150:18;8141:6;8097:72;:::i;:::-;7874:302;;;;;;:::o;8182:332::-;;8341:2;8330:9;8326:18;8318:26;;8354:71;8422:1;8411:9;8407:17;8398:6;8354:71;:::i;:::-;8435:72;8503:2;8492:9;8488:18;8479:6;8435:72;:::i;:::-;8308:206;;;;;:::o;8520:419::-;;8724:2;8713:9;8709:18;8701:26;;8773:9;8767:4;8763:20;8759:1;8748:9;8744:17;8737:47;8801:131;8927:4;8801:131;:::i;:::-;8793:139;;8691:248;;;:::o;8945:419::-;;9149:2;9138:9;9134:18;9126:26;;9198:9;9192:4;9188:20;9184:1;9173:9;9169:17;9162:47;9226:131;9352:4;9226:131;:::i;:::-;9218:139;;9116:248;;;:::o;9370:222::-;;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9468:124;;;;:::o;9598:169::-;;9716:6;9711:3;9704:19;9756:4;9751:3;9747:14;9732:29;;9694:73;;;;:::o;9773:305::-;;9832:20;9850:1;9832:20;:::i;:::-;9827:25;;9866:20;9884:1;9866:20;:::i;:::-;9861:25;;10020:1;9952:66;9948:74;9945:1;9942:81;9939:2;;;10026:18;;:::i;:::-;9939:2;10070:1;10067;10063:9;10056:16;;9817:261;;;;:::o;10084:385::-;;10140:19;10157:1;10140:19;:::i;:::-;10135:24;;10173:19;10190:1;10173:19;:::i;:::-;10168:24;;10211:1;10201:2;;10216:18;;:::i;:::-;10201:2;10402:1;10399;10395:9;10392:1;10389:16;10308:66;10305:1;10302:73;10285:130;10282:2;;;10418:18;;:::i;:::-;10282:2;10461:1;10458;10453:10;10448:15;;10125:344;;;;:::o;10475:185::-;;10532:20;10550:1;10532:20;:::i;:::-;10527:25;;10566:20;10584:1;10566:20;:::i;:::-;10561:25;;10605:1;10595:2;;10610:18;;:::i;:::-;10595:2;10652:1;10649;10645:9;10640:14;;10517:143;;;;:::o;10666:848::-;;;10758:6;10749:15;;10782:5;10773:14;;10796:712;10817:1;10807:8;10804:15;10796:712;;;10912:4;10907:3;10903:14;10897:4;10894:24;10891:2;;;10921:18;;:::i;:::-;10891:2;10971:1;10961:8;10957:16;10954:2;;;11386:4;11379:5;11375:16;11366:25;;10954:2;11436:4;11430;11426:15;11418:23;;11466:32;11489:8;11466:32;:::i;:::-;11454:44;;10796:712;;;10739:775;;;;;;;:::o;11520:285::-;;11604:23;11622:4;11604:23;:::i;:::-;11596:31;;11648:27;11666:8;11648:27;:::i;:::-;11636:39;;11694:104;11731:66;11721:8;11715:4;11694:104;:::i;:::-;11685:113;;11586:219;;;;:::o;11811:1073::-;;12056:8;12046:2;;12077:1;12068:10;;12079:5;;12046:2;12105:4;12095:2;;12122:1;12113:10;;12124:5;;12095:2;12191:4;12239:1;12234:27;;;;12275:1;12270:191;;;;12184:277;;12234:27;12252:1;12243:10;;12254:5;;;12270:191;12315:3;12305:8;12302:17;12299:2;;;12322:18;;:::i;:::-;12299:2;12371:8;12368:1;12364:16;12355:25;;12406:3;12399:5;12396:14;12393:2;;;12413:18;;:::i;:::-;12393:2;12446:5;;;12184:277;;12570:2;12560:8;12557:16;12551:3;12545:4;12542:13;12538:36;12520:2;12510:8;12507:16;12502:2;12496:4;12493:12;12489:35;12473:111;12470:2;;;12626:8;12620:4;12616:19;12607:28;;12661:3;12654:5;12651:14;12648:2;;;12668:18;;:::i;:::-;12648:2;12701:5;;12470:2;12741:42;12779:3;12769:8;12763:4;12760:1;12741:42;:::i;:::-;12726:57;;;;12815:4;12810:3;12806:14;12799:5;12796:25;12793:2;;;12824:18;;:::i;:::-;12793:2;12873:4;12866:5;12862:16;12853:25;;11871:1013;;;;;;:::o;12890:991::-;;12952:19;12969:1;12952:19;:::i;:::-;12947:24;;12985:19;13002:1;12985:19;:::i;:::-;12980:24;;13186:1;13118:66;13114:74;13111:1;13108:81;13103:1;13100;13096:9;13092:1;13089;13085:9;13081:25;13077:113;13074:2;;;13193:18;;:::i;:::-;13074:2;13397:1;13329:66;13324:75;13321:1;13317:83;13312:1;13309;13305:9;13301:1;13298;13294:9;13290:25;13286:115;13283:2;;;13404:18;;:::i;:::-;13283:2;13608:1;13540:66;13535:75;13532:1;13528:83;13523:1;13520;13516:9;13512:1;13509;13505:9;13501:25;13497:115;13494:2;;;13615:18;;:::i;:::-;13494:2;13818:1;13750:66;13745:75;13742:1;13738:83;13733:1;13730;13726:9;13722:1;13719;13715:9;13711:25;13707:115;13704:2;;;13825:18;;:::i;:::-;13704:2;13873:1;13870;13866:9;13855:20;;12937:944;;;;:::o;13887:348::-;;13950:20;13968:1;13950:20;:::i;:::-;13945:25;;13984:20;14002:1;13984:20;:::i;:::-;13979:25;;14172:1;14104:66;14100:74;14097:1;14094:81;14089:1;14082:9;14075:17;14071:105;14068:2;;;14179:18;;:::i;:::-;14068:2;14227:1;14224;14220:9;14209:20;;13935:300;;;;:::o;14241:191::-;;14301:20;14319:1;14301:20;:::i;:::-;14296:25;;14335:20;14353:1;14335:20;:::i;:::-;14330:25;;14374:1;14371;14368:8;14365:2;;;14379:18;;:::i;:::-;14365:2;14424:1;14421;14417:9;14409:17;;14286:146;;;;:::o;14438:185::-;;14496:18;14512:1;14496:18;:::i;:::-;14491:23;;14528:18;14544:1;14528:18;:::i;:::-;14523:23;;14565:1;14562;14559:8;14556:2;;;14570:18;;:::i;:::-;14556:2;14615:1;14612;14608:9;14600:17;;14481:142;;;;:::o;14629:96::-;;14695:24;14713:5;14695:24;:::i;:::-;14684:35;;14674:51;;;:::o;14731:90::-;;14808:5;14801:13;14794:21;14783:32;;14773:48;;;:::o;14827:109::-;;14906:24;14924:5;14906:24;:::i;:::-;14895:35;;14885:51;;;:::o;14942:110::-;;15022:24;15040:5;15022:24;:::i;:::-;15011:35;;15001:51;;;:::o;15058:76::-;;15123:5;15112:16;;15102:32;;;:::o;15140:126::-;;15217:42;15210:5;15206:54;15195:65;;15185:81;;;:::o;15272:77::-;;15338:5;15327:16;;15317:32;;;:::o;15355:86::-;;15430:4;15423:5;15419:16;15408:27;;15398:43;;;:::o;15447:105::-;;15523:22;15516:5;15512:34;15501:45;;15491:61;;;:::o;15558:154::-;;15655:51;15700:5;15655:51;:::i;:::-;15642:64;;15632:80;;;:::o;15718:127::-;;15815:24;15833:5;15815:24;:::i;:::-;15802:37;;15792:53;;;:::o;15851:180::-;15899:77;15896:1;15889:88;15996:4;15993:1;15986:15;16020:4;16017:1;16010:15;16037:180;16085:77;16082:1;16075:88;16182:4;16179:1;16172:15;16206:4;16203:1;16196:15;16223:102;;16312:5;16309:1;16305:13;16284:34;;16274:51;;;:::o;16331:122::-;16404:24;16422:5;16404:24;:::i;:::-;16397:5;16394:35;16384:2;;16443:1;16440;16433:12;16384:2;16374:79;:::o;16459:116::-;16529:21;16544:5;16529:21;:::i;:::-;16522:5;16519:32;16509:2;;16565:1;16562;16555:12;16509:2;16499:76;:::o;16581:148::-;16667:37;16698:5;16667:37;:::i;:::-;16660:5;16657:48;16647:2;;16719:1;16716;16709:12;16647:2;16637:92;:::o;16735:150::-;16822:38;16854:5;16822:38;:::i;:::-;16815:5;16812:49;16802:2;;16875:1;16872;16865:12;16802:2;16792:93;:::o;16891:120::-;16963:23;16980:5;16963:23;:::i;:::-;16956:5;16953:34;16943:2;;17001:1;16998;16991:12;16943:2;16933:78;:::o;17017:122::-;17090:24;17108:5;17090:24;:::i;:::-;17083:5;17080:35;17070:2;;17129:1;17126;17119:12;17070:2;17060:79;:::o;17145:118::-;17216:22;17232:5;17216:22;:::i;:::-;17209:5;17206:33;17196:2;;17253:1;17250;17243:12;17196:2;17186:77;:::o;17269:120::-;17341:23;17358:5;17341:23;:::i;:::-;17334:5;17331:34;17321:2;;17379:1;17376;17369:12;17321:2;17311:78;:::o",
  "source": "// SPDX-License-Identifier:MIT\n\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./FBMoney.sol\";\n\nstruct Stake {\n\tuint256 dateOfValue;\n\tuint256 amount;\n}\nstruct Bonus {\n\tuint256 amount;\n\tuint256 dateOfValue;\n}\n\ncontract FBStaker {\n\tuint256 _Rate = 1;\n\tmapping(address => mapping(address => Stake)) stakeList; // Liste des stakes en cours\n\tmapping(address => Bonus) bonusList; // List des bonus par utilisateur\n\tmapping(address => uint256) tokenPool; // List des tokens récupérés\n\n\tuint8 _Decimals; // Decimals of our own Mondey\n\tIERC20 private _FrenchBorgTokenProvider;\n\n\tmodifier notNull256(uint256 v) {\n\t\trequire(v != 0);\n\t\t_;\n\t}\n\tmodifier notNullAddress(address v) {\n\t\trequire(v != address(0));\n\t\t_;\n\t}\n\n\tevent TokenStaked(address adr, IERC20 Tkn, uint256 amount);\n\tevent TokenUnstaked(address adr, IERC20 Tkn, uint256 amount);\n\tevent BonusRound(address Customer, IERC20 Token);\n\tevent BonusRetrieved(address adr, uint256 amount);\n\n\tconstructor() {\n\t\t_FrenchBorgTokenProvider = IERC20(new FBMoney(1000)); // Our home-made money\n\t\t_Decimals = 18;\n\t}\n\n\t/**\n\t * @dev Returns the balance of our home made token for bonuses\n\t */\n\tfunction getMoneyBalance() external view returns (uint256) {\n\t\treturn _FrenchBorgTokenProvider.balanceOf(msg.sender);\n\t}\n\n\t/**\n\t * @dev debugging purpose: Returns the amount of money staked per token\n\t */\n\tfunction getTokenStakedBalance(ERC20 Token)\n\t\texternal\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\treturn stakeList[msg.sender][address(Token)].amount;\n\t}\n\n\t/**\n\t * @dev Make money compatibles if they don't have the same Decimals\n\t */\n\tfunction scalePrice(\n\t\tint256 _price,\n\t\tuint8 _priceDecimals,\n\t\tuint8 _decimals\n\t) internal pure returns (int256) {\n\t\t// provient de https://docs.chain.link/docs/get-the-latest-price/\n\t\t// permet d'adapter les prix en fctn des decimales de chaque monnaie\n\t\tif (_priceDecimals < _decimals) {\n\t\t\treturn _price * int256(10**uint256(_decimals - _priceDecimals));\n\t\t} else if (_priceDecimals > _decimals) {\n\t\t\treturn _price / int256(10**uint256(_priceDecimals - _decimals));\n\t\t}\n\t\treturn _price;\n\t}\n\n\t/**\n\t * @dev Retourne le ratio temporel en utilisant le delta des blocks\n\t * @param Stk Current stake for customers\n\t */\n\tfunction getRate(Stake memory Stk) internal view returns (uint256) {\n\t\trequire(block.number > Stk.dateOfValue, \"invalid block number\");\n\t\t// _Rate vaut 1, parité avec ethereum\n\t\t// 199385 = 30j * 24h * 60mn * 60s / 13blk\n\t\t// return Delta Block * Taux par mois / BlockParMois\n\t\treturn\n\t\t\tuint256(\n\t\t\t\t((uint256(block.number - Stk.dateOfValue) * _Rate) /\n\t\t\t\t\tuint256(199385))\n\t\t\t);\n\t}\n\n\t/**\n\t * @dev Given a stake, returns the value of potential bonuses\n\t * @param Stk Current stake for customers\n\t * @param Aggregator used for getting Token value\n\t */\n\tfunction computeBonus(Stake memory Stk, address Aggregator)\n\t\tinternal\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\t// On récupere le prix en ETH\n\t\t(, int256 ratio, , , ) = AggregatorV3Interface(Aggregator)\n\t\t\t.latestRoundData();\n\t\tuint8 tokenDecimals = AggregatorV3Interface(Aggregator).decimals();\n\t\t// On remet a l'echelle en fonction des decimales de chaque monnaie si besoin\n\t\tif (tokenDecimals != _Decimals)\n\t\t\treturn\n\t\t\t\tStk.amount *\n\t\t\t\tgetRate(Stk) *\n\t\t\t\tuint256(scalePrice(ratio, tokenDecimals, _Decimals) * ratio);\n\t\treturn Stk.amount * getRate(Stk) * uint256(ratio);\n\t}\n\n\t/**\n\t * @dev Internal function for evaluating and aggregating Bonuses\n\t * @param customer for which customer ?\n\t * @param Stk Current stake for customers\n\t * @param Aggregator used for getting Token value\n\t */\n\tfunction aggregateBonus(\n\t\taddress customer,\n\t\taddress Aggregator,\n\t\tStake memory Stk\n\t) internal {\n\t\t// evaluate new potential bonus\n\t\tuint256 bonus = computeBonus(Stk, Aggregator);\n\t\tif (bonus > 0) bonusList[customer].amount += bonus;\n\t}\n\n\t/**\n\t * @dev Customer retrieves all his acquired bonuses - to be called by the owner of the contract\n\t * @param customer customer who wants to get the FBMoney back\n\t */\n\tfunction retrieveBonuses(address customer)\n\t\texternal\n\t\tnotNullAddress(customer)\n\t{\n\t\tuint256 bonus = bonusList[customer].amount;\n\n\t\t// Transfer Bonuses to customer\n\t\tif (bonus != 0) {\n\t\t\tbonusList[customer].amount = 0;\n\t\t\temit BonusRetrieved(customer, bonus);\n\t\t\t_FrenchBorgTokenProvider.transferFrom(msg.sender, customer, bonus);\n\t\t}\n\t}\n\n\t/**\n\t * @dev Stake swap some tokens for our money token - To be called by the customer\n\t * @param Token customer's Token\n\t * @param amount amount of customer's token to Stake\n\t * @param Aggregator Provided by JS for the correct PAIR\n\t */\n\tfunction StakeTokens(\n\t\tIERC20 Token,\n\t\tuint256 amount,\n\t\taddress Aggregator\n\t)\n\t\texternal\n\t\tnotNull256(amount)\n\t\tnotNullAddress(address(Token))\n\t\tnotNullAddress(Aggregator)\n\t{\n\t\t// Trouve la reference du client\n\t\tStake memory Stk = stakeList[msg.sender][address(Token)];\n\n\t\t// Compute and transfer Bonus\n\t\t//Le stake n'est peut etre pas vide, aussi on doit d'abord mettre a jour les bonuses\n\t\tif (Stk.amount > 0) aggregateBonus(msg.sender, Aggregator, Stk);\n\t\t// Met à jour maintenant, apres avoir aggrégé, la balance de tokens\n\t\tStk.amount += amount;\n\t\tStk.dateOfValue = block.number;\n\t\tstakeList[msg.sender][address(Token)] = Stk;\n\t\temit TokenStaked(msg.sender, Token, amount);\n\t\t// Transfer the tokens, supposing the approve has been done\n\t\tToken.transferFrom(msg.sender, address(this), amount);\n\t}\n\n\t/**\n\t * @dev Unstake the staked tokens - To be called by the owner of the contract\n\t * @param Customer Customer's address\n\t * @param Token customer's Token\n\t * @param amount amount of customer's token to Stake\n\t * @param Aggregator Provided by JS for the correct PAIR\n\t */\n\tfunction UnstakeTokens(\n\t\taddress Customer,\n\t\tIERC20 Token,\n\t\tuint256 amount,\n\t\taddress Aggregator\n\t)\n\t\texternal\n\t\tnotNull256(amount)\n\t\tnotNullAddress(Customer)\n\t\tnotNullAddress(address(Token))\n\t\tnotNullAddress(Aggregator)\n\t{\n\t\t// Trouve la reference du client\n\t\tStake memory Stk = stakeList[Customer][address(Token)];\n\t\t// On essai de retirer de trop ?\n\t\trequire(Stk.amount >= amount, \"amount too high\");\n\t\t// Compute and aggregate Bonus if required\n\t\tif (Stk.amount > 0) aggregateBonus(Customer, Aggregator, Stk);\n\n\t\tStk.amount -= amount;\n\t\tStk.dateOfValue = block.number;\n\t\tstakeList[Customer][address(Token)] = Stk;\n\t\temit TokenUnstaked(Customer, Token, amount);\n\n\t\tToken.transfer(Customer, amount);\n\t}\n\n\t/**\n\t * @dev Triggers bonus computation, for calling on timer\n\t * @param Customer Customer's address\n\t * @param Token customer's Token\n\t * @param Aggregator Provided by JS for calulating Parity\n\t */\n\tfunction bonusRound(\n\t\taddress Customer,\n\t\tIERC20 Token,\n\t\taddress Aggregator\n\t)\n\t\texternal\n\t\tnotNullAddress(Customer)\n\t\tnotNullAddress(address(Token))\n\t\tnotNullAddress(Aggregator)\n\t{\n\t\t// Trouve la reference du client\n\t\tStake memory Stk = stakeList[Customer][address(Token)];\n\t\t// Compute and aggregate Bonus if necessary\n\t\tif (Stk.amount > 0) {\n\t\t\taggregateBonus(Customer, Aggregator, Stk);\n\t\t\tStk.dateOfValue = block.number;\n\t\t\tstakeList[Customer][address(Token)] = Stk;\n\t\t}\n\t\temit BonusRound(Customer, Token);\n\t}\n}\n",
  "sourcePath": "/home/pec/Formation/Ethereum/Staking/contracts/FBStaker.sol",
  "ast": {
    "absolutePath": "project:/contracts/FBStaker.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Bonus": [
        762
      ],
      "Context": [
        716
      ],
      "ERC20": [
        591
      ],
      "FBMoney": [
        747
      ],
      "FBStaker": [
        1386
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "Stake": [
        757
      ]
    },
    "id": 1387,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 749,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 750,
        "nodeType": "ImportDirective",
        "scope": 1387,
        "sourceUnit": 592,
        "src": "56:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 1387,
        "sourceUnit": 46,
        "src": "112:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FBMoney.sol",
        "file": "./FBMoney.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 1387,
        "sourceUnit": 748,
        "src": "189:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Stake",
        "id": 757,
        "members": [
          {
            "constant": false,
            "id": 754,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "230:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 756,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "252:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "252:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Stake",
        "nodeType": "StructDefinition",
        "scope": 1387,
        "src": "214:55:6",
        "visibility": "public"
      },
      {
        "canonicalName": "Bonus",
        "id": 762,
        "members": [
          {
            "constant": false,
            "id": 759,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "286:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 758,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 761,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "303:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Bonus",
        "nodeType": "StructDefinition",
        "scope": 1387,
        "src": "270:55:6",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          747
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1386,
        "linearizedBaseContracts": [
          1386
        ],
        "name": "FBStaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 765,
            "mutability": "mutable",
            "name": "_Rate",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "348:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 772,
            "mutability": "mutable",
            "name": "stakeList",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "368:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Stake))"
            },
            "typeName": {
              "id": 771,
              "keyType": {
                "id": 766,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "376:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "368:45:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Stake))"
              },
              "valueType": {
                "id": 770,
                "keyType": {
                  "id": 767,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "387:25:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                  "typeString": "mapping(address => struct Stake)"
                },
                "valueType": {
                  "id": 769,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 768,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 757,
                    "src": "406:5:6"
                  },
                  "referencedDeclaration": 757,
                  "src": "406:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                    "typeString": "struct Stake"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 777,
            "mutability": "mutable",
            "name": "bonusList",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "455:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
              "typeString": "mapping(address => struct Bonus)"
            },
            "typeName": {
              "id": 776,
              "keyType": {
                "id": 773,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                "typeString": "mapping(address => struct Bonus)"
              },
              "valueType": {
                "id": 775,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 774,
                  "name": "Bonus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 762,
                  "src": "474:5:6"
                },
                "referencedDeclaration": 762,
                "src": "474:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bonus_$762_storage_ptr",
                  "typeString": "struct Bonus"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 781,
            "mutability": "mutable",
            "name": "tokenPool",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "527:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 780,
              "keyType": {
                "id": 778,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "535:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "527:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 779,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "546:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 783,
            "mutability": "mutable",
            "name": "_Decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "600:15:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 782,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "600:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 786,
            "mutability": "mutable",
            "name": "_FrenchBorgTokenProvider",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "648:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$669",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 785,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 784,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 669,
                "src": "648:6:6"
              },
              "referencedDeclaration": 669,
              "src": "648:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$669",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "722:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 791,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "734:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "739:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "734:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "726:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "726:15:6"
                },
                {
                  "id": 796,
                  "nodeType": "PlaceholderStatement",
                  "src": "745:1:6"
                }
              ]
            },
            "id": 798,
            "name": "notNull256",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "711:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:11:6"
            },
            "src": "691:59:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "787:37:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 803,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "799:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "812:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "804:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 804,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "804:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "804:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "799:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "791:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "791:24:6"
                },
                {
                  "id": 811,
                  "nodeType": "PlaceholderStatement",
                  "src": "819:1:6"
                }
              ]
            },
            "id": 813,
            "name": "notNullAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "776:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:11:6"
            },
            "src": "752:72:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 822,
            "name": "TokenStaked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "845:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Tkn",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "858:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 817,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 816,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "858:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "858:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "870:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "844:41:6"
            },
            "src": "827:59:6"
          },
          {
            "anonymous": false,
            "id": 831,
            "name": "TokenUnstaked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "908:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Tkn",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "921:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 826,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 825,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "921:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "921:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "933:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:41:6"
            },
            "src": "888:61:6"
          },
          {
            "anonymous": false,
            "id": 838,
            "name": "BonusRound",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "968:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "986:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 835,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 834,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "986:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "986:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:32:6"
            },
            "src": "951:49:6"
          },
          {
            "anonymous": false,
            "id": 844,
            "name": "BonusRetrieved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "1023:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "1036:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:29:6"
            },
            "src": "1002:50:6"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "1069:101:6",
              "statements": [
                {
                  "expression": {
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 847,
                      "name": "_FrenchBorgTokenProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "1073:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1119:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1107:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_FBMoney_$747_$",
                              "typeString": "function (uint256) returns (contract FBMoney)"
                            },
                            "typeName": {
                              "id": 850,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 849,
                                "name": "FBMoney",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "1111:7:6"
                              },
                              "referencedDeclaration": 747,
                              "src": "1111:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FBMoney_$747",
                                "typeString": "contract FBMoney"
                              }
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1107:17:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        ],
                        "id": 848,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "1100:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1100:25:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1073:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:52:6"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 857,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "1152:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3138",
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1164:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "1152:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:14:6"
                }
              ]
            },
            "id": 862,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:2:6"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:6"
            },
            "scope": 1386,
            "src": "1055:115:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "1306:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1352:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1352:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 868,
                        "name": "_FrenchBorgTokenProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "1317:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 608,
                      "src": "1317:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 867,
                  "id": 873,
                  "nodeType": "Return",
                  "src": "1310:53:6"
                }
              ]
            },
            "documentation": {
              "id": 863,
              "nodeType": "StructuredDocumentation",
              "src": "1173:72:6",
              "text": " @dev Returns the balance of our home made token for bonuses"
            },
            "functionSelector": "e2f59ec9",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMoneyBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:2:6"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "1297:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1296:9:6"
            },
            "scope": 1386,
            "src": "1247:120:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "1536:59:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 884,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "1547:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 887,
                        "indexExpression": {
                          "expression": {
                            "id": 885,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1557:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1557:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1547:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 892,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 890,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "1577:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1569:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 888,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1569:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1569:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1547:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 756,
                    "src": "1547:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "1540:51:6"
                }
              ]
            },
            "documentation": {
              "id": 876,
              "nodeType": "StructuredDocumentation",
              "src": "1370:81:6",
              "text": " @dev debugging purpose: Returns the amount of money staked per token"
            },
            "functionSelector": "b80f5f89",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStakedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1484:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$591",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 878,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 877,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "1484:5:6"
                    },
                    "referencedDeclaration": 591,
                    "src": "1484:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$591",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:13:6"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1526:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:9:6"
            },
            "scope": 1386,
            "src": "1453:142:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "1791:379:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 908,
                      "name": "_priceDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "1938:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 909,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "1955:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1938:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 926,
                        "name": "_priceDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "2049:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 927,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "2066:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2049:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 944,
                    "nodeType": "IfStatement",
                    "src": "2045:105:6",
                    "trueBody": {
                      "id": 943,
                      "nodeType": "Block",
                      "src": "2077:73:6",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 929,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "2089:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2105:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 937,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 935,
                                          "name": "_priceDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 901,
                                          "src": "2117:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 936,
                                          "name": "_decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 903,
                                          "src": "2134:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "2117:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 934,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2109:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 933,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2109:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 938,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2109:35:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2105:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2098:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 930,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2098:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2098:47:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "2089:56:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 907,
                          "id": 942,
                          "nodeType": "Return",
                          "src": "2082:63:6"
                        }
                      ]
                    }
                  },
                  "id": 945,
                  "nodeType": "IfStatement",
                  "src": "1934:216:6",
                  "trueBody": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "1966:73:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 911,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "1978:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1994:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 919,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 917,
                                        "name": "_decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 903,
                                        "src": "2006:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 918,
                                        "name": "_priceDecimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 901,
                                        "src": "2018:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "2006:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1998:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 915,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1998:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1998:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1994:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1987:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 912,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1987:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1987:47:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1978:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 907,
                        "id": 924,
                        "nodeType": "Return",
                        "src": "1971:63:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 946,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 899,
                    "src": "2160:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 907,
                  "id": 947,
                  "nodeType": "Return",
                  "src": "2153:13:6"
                }
              ]
            },
            "documentation": {
              "id": 897,
              "nodeType": "StructuredDocumentation",
              "src": "1598:77:6",
              "text": " @dev Make money compatibles if they don't have the same Decimals"
            },
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scalePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1700:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_priceDecimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1717:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1741:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:63:6"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1783:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:8:6"
            },
            "scope": 1386,
            "src": "1677:493:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "2362:318:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 959,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2374:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2374:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 961,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "2389:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dateOfValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 754,
                          "src": "2389:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2374:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420626c6f636b206e756d626572",
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2406:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        },
                        "value": "invalid block number"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        }
                      ],
                      "id": 958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2366:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 966,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:63:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 975,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 971,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "2607:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 972,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "src": "2607:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 973,
                                            "name": "Stk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "2622:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                              "typeString": "struct Stake memory"
                                            }
                                          },
                                          "id": 974,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "dateOfValue",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 754,
                                          "src": "2622:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2607:30:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 970,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2599:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 969,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2599:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2599:39:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 977,
                                    "name": "_Rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 765,
                                    "src": "2641:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2599:47:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 979,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2598:49:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "313939333835",
                                  "id": 982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2663:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_199385_by_1",
                                    "typeString": "int_const 199385"
                                  },
                                  "value": "199385"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_199385_by_1",
                                    "typeString": "int_const 199385"
                                  }
                                ],
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2655:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 980,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2655:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2655:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2598:72:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 985,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2597:74:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2584:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2584:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:92:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 957,
                  "id": 987,
                  "nodeType": "Return",
                  "src": "2574:102:6"
                }
              ]
            },
            "documentation": {
              "id": 950,
              "nodeType": "StructuredDocumentation",
              "src": "2173:120:6",
              "text": " @dev Retourne le ratio temporel en utilisant le delta des blocks\n @param Stk Current stake for customers"
            },
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "2312:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 951,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "2312:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "2312:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2311:18:6"
            },
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "2353:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2352:9:6"
            },
            "scope": 1386,
            "src": "2295:385:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "2949:470:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    1001,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1001,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "2989:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1000,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2989:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 1007,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1003,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "3033:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1002,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3011:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3011:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "3011:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3011:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2986:80:6"
                },
                {
                  "assignments": [
                    1009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1009,
                      "mutability": "mutable",
                      "name": "tokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "3070:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1008,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3070:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1015,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1011,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "3114:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1010,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3092:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3092:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "3092:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3070:66:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1016,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "3224:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1017,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "3241:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3224:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1037,
                  "nodeType": "IfStatement",
                  "src": "3220:142:6",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1019,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "3266:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 756,
                          "src": "3266:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1022,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "3291:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            ],
                            "id": 1021,
                            "name": "getRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "3283:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct Stake memory) view returns (uint256)"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3283:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3266:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1028,
                                  "name": "ratio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "3321:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                {
                                  "id": 1029,
                                  "name": "tokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "3328:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 1030,
                                  "name": "_Decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 783,
                                  "src": "3343:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1027,
                                "name": "scalePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 949,
                                "src": "3310:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                  "typeString": "function (int256,uint8,uint8) pure returns (int256)"
                                }
                              },
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3310:43:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1032,
                              "name": "ratio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "3356:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "3310:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3302:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1025,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3302:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3302:60:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3266:96:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 999,
                    "id": 1036,
                    "nodeType": "Return",
                    "src": "3255:107:6"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1038,
                          "name": "Stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "3373:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 756,
                        "src": "3373:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1041,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "3394:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          ],
                          "id": 1040,
                          "name": "getRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "3386:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct Stake memory) view returns (uint256)"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3386:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3373:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1046,
                          "name": "ratio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1001,
                          "src": "3409:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3401:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3401:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3401:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3373:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 999,
                  "id": 1049,
                  "nodeType": "Return",
                  "src": "3366:49:6"
                }
              ]
            },
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "2683:165:6",
              "text": " @dev Given a stake, returns the value of potential bonuses\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "2872:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 992,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 991,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "2872:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "2872:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 995,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "2890:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2890:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2871:38:6"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "2939:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2938:9:6"
            },
            "scope": 1386,
            "src": "2850:569:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "3731:141:6",
              "statements": [
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "3769:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1062,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3769:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1068,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1065,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3798:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      {
                        "id": 1066,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "3803:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1064,
                      "name": "computeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "3785:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (struct Stake memory,address) view returns (uint256)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3785:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3769:45:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1069,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "3822:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3830:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3822:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1079,
                  "nodeType": "IfStatement",
                  "src": "3818:50:6",
                  "trueBody": {
                    "expression": {
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 1072,
                            "name": "bonusList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "3833:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                              "typeString": "mapping(address => struct Bonus storage ref)"
                            }
                          },
                          "id": 1074,
                          "indexExpression": {
                            "id": 1073,
                            "name": "customer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1054,
                            "src": "3843:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3833:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bonus_$762_storage",
                            "typeString": "struct Bonus storage ref"
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 759,
                        "src": "3833:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 1076,
                        "name": "bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "3863:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3833:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1078,
                    "nodeType": "ExpressionStatement",
                    "src": "3833:35:6"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1052,
              "nodeType": "StructuredDocumentation",
              "src": "3422:209:6",
              "text": " @dev Internal function for evaluating and aggregating Bonuses\n @param customer for which customer ?\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "aggregateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "3660:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "3680:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3680:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "3702:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 1058,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1057,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "3702:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "3702:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3656:65:6"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:6"
            },
            "scope": 1386,
            "src": "3633:239:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "4127:256:6",
              "statements": [
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "4131:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4131:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1096,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1092,
                        "name": "bonusList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "4147:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                          "typeString": "mapping(address => struct Bonus storage ref)"
                        }
                      },
                      "id": 1094,
                      "indexExpression": {
                        "id": 1093,
                        "name": "customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "4157:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4147:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bonus_$762_storage",
                        "typeString": "struct Bonus storage ref"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 759,
                    "src": "4147:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4131:42:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1097,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1091,
                      "src": "4216:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4225:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4216:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1122,
                  "nodeType": "IfStatement",
                  "src": "4212:168:6",
                  "trueBody": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "4228:152:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1100,
                                "name": "bonusList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 777,
                                "src": "4233:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                                  "typeString": "mapping(address => struct Bonus storage ref)"
                                }
                              },
                              "id": 1102,
                              "indexExpression": {
                                "id": 1101,
                                "name": "customer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "4243:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4233:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bonus_$762_storage",
                                "typeString": "struct Bonus storage ref"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 759,
                            "src": "4233:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4262:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4233:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1106,
                        "nodeType": "ExpressionStatement",
                        "src": "4233:30:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1108,
                              "name": "customer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "4288:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1109,
                              "name": "bonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "4298:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1107,
                            "name": "BonusRetrieved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "4273:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4273:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1111,
                        "nodeType": "EmitStatement",
                        "src": "4268:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1115,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4347:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4347:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1117,
                              "name": "customer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "4359:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1118,
                              "name": "bonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "4369:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1112,
                              "name": "_FrenchBorgTokenProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "4309:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 650,
                            "src": "4309:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4309:66:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1120,
                        "nodeType": "ExpressionStatement",
                        "src": "4309:66:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1082,
              "nodeType": "StructuredDocumentation",
              "src": "3875:168:6",
              "text": " @dev Customer retrieves all his acquired bonuses - to be called by the owner of the contract\n @param customer customer who wants to get the FBMoney back"
            },
            "functionSelector": "093e5a1d",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1087,
                    "name": "customer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1084,
                    "src": "4116:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1088,
                "modifierName": {
                  "id": 1086,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "4101:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4101:24:6"
              }
            ],
            "name": "retrieveBonuses",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "4070:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4069:18:6"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4127:0:6"
            },
            "scope": 1386,
            "src": "4045:338:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1216,
              "nodeType": "Block",
              "src": "4800:630:6",
              "statements": [
                {
                  "assignments": [
                    1149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1149,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1216,
                      "src": "4839:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1147,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "4839:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "4839:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1159,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1150,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "4858:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1153,
                      "indexExpression": {
                        "expression": {
                          "id": 1151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4868:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4868:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4858:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1158,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1156,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "4888:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4880:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4880:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4880:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4858:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4839:56:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1160,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5023:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "5023:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5036:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5023:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1171,
                  "nodeType": "IfStatement",
                  "src": "5019:63:6",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1165,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5054:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5054:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1167,
                          "name": "Aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "5066:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1168,
                          "name": "Stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "5078:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        ],
                        "id": 1164,
                        "name": "aggregateBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "5039:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                          "typeString": "function (address,address,struct Stake memory)"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5039:43:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1170,
                    "nodeType": "ExpressionStatement",
                    "src": "5039:43:6"
                  }
                },
                {
                  "expression": {
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1172,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5159:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "5159:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1175,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "5173:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5159:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:20:6"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1178,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5183:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "5183:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1181,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5201:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5201:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:30:6"
                },
                {
                  "expression": {
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1185,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "5217:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 1192,
                        "indexExpression": {
                          "expression": {
                            "id": 1186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5227:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5227:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5217:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 1193,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1190,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "5247:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5239:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5239:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5239:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5217:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1194,
                      "name": "Stk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "5257:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake memory"
                      }
                    },
                    "src": "5217:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:43:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5281:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5281:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1200,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "5293:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 1201,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5300:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1197,
                      "name": "TokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "5269:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$669_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5269:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "EmitStatement",
                  "src": "5264:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1207,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5392:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5392:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1211,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5412:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FBStaker_$1386",
                              "typeString": "contract FBStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FBStaker_$1386",
                              "typeString": "contract FBStaker"
                            }
                          ],
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5404:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5404:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5404:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1213,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5419:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1204,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "5373:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "5373:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5373:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "5373:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1125,
              "nodeType": "StructuredDocumentation",
              "src": "4386:237:6",
              "text": " @dev Stake swap some tokens for our money token - To be called by the customer\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "35443571",
            "id": 1217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1135,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "4729:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1136,
                "modifierName": {
                  "id": 1134,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "4718:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4718:18:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1140,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "4762:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4754:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1138,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4754:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1142,
                "modifierName": {
                  "id": 1137,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "4739:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4739:30:6"
              },
              {
                "arguments": [
                  {
                    "id": 1144,
                    "name": "Aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1132,
                    "src": "4787:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1145,
                "modifierName": {
                  "id": 1143,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "4772:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4772:26:6"
              }
            ],
            "name": "StakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "4649:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1127,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1126,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "4649:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "4649:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "4665:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "4683:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4645:59:6"
            },
            "returnParameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4800:0:6"
            },
            "scope": 1386,
            "src": "4625:805:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "5931:482:6",
              "statements": [
                {
                  "assignments": [
                    1247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "5970:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1245,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "5970:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "5970:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1256,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1248,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "5989:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1250,
                      "indexExpression": {
                        "id": 1249,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "5999:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5989:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1255,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1253,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1223,
                          "src": "6017:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6009:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6009:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6009:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5989:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5970:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1258,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "6071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 756,
                          "src": "6071:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1260,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1225,
                          "src": "6085:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6071:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420746f6f2068696768",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6093:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        },
                        "value": "amount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        }
                      ],
                      "id": 1257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6063:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "6063:48:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1265,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "6164:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6164:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6177:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6164:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1275,
                  "nodeType": "IfStatement",
                  "src": "6160:61:6",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1270,
                          "name": "Customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "6195:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1271,
                          "name": "Aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "6205:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1272,
                          "name": "Stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1247,
                          "src": "6217:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        ],
                        "id": 1269,
                        "name": "aggregateBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "6180:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                          "typeString": "function (address,address,struct Stake memory)"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6180:41:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1274,
                    "nodeType": "ExpressionStatement",
                    "src": "6180:41:6"
                  }
                },
                {
                  "expression": {
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1276,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "6226:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6226:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1279,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "6240:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6226:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "6226:20:6"
                },
                {
                  "expression": {
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1282,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "6250:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "6250:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1285,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6268:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "6268:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6250:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "6250:30:6"
                },
                {
                  "expression": {
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1289,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "6284:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 1295,
                        "indexExpression": {
                          "id": 1290,
                          "name": "Customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "6294:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6284:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 1296,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1293,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "6312:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6304:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1291,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6304:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6304:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6284:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1297,
                      "name": "Stk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "6322:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake memory"
                      }
                    },
                    "src": "6284:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "6284:41:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1301,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "6348:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1302,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "6358:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 1303,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "6365:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1300,
                      "name": "TokenUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "6334:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$669_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6334:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "EmitStatement",
                  "src": "6329:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1309,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "6392:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1310,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "6402:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1306,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "6377:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 618,
                      "src": "6377:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6377:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1312,
                  "nodeType": "ExpressionStatement",
                  "src": "6377:32:6"
                }
              ]
            },
            "documentation": {
              "id": 1218,
              "nodeType": "StructuredDocumentation",
              "src": "5433:272:6",
              "text": " @dev Unstake the staked tokens - To be called by the owner of the contract\n @param Customer Customer's address\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "9da3f76d",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1230,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1225,
                    "src": "5833:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1231,
                "modifierName": {
                  "id": 1229,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "5822:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5822:18:6"
              },
              {
                "arguments": [
                  {
                    "id": 1233,
                    "name": "Customer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1220,
                    "src": "5858:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1234,
                "modifierName": {
                  "id": 1232,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "5843:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5843:24:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1238,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "5893:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5885:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1236,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5885:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1240,
                "modifierName": {
                  "id": 1235,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "5870:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5870:30:6"
              },
              {
                "arguments": [
                  {
                    "id": 1242,
                    "name": "Aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1227,
                    "src": "5918:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1243,
                "modifierName": {
                  "id": 1241,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "5903:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5903:26:6"
              }
            ],
            "name": "UnstakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "Customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5733:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5753:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1221,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "5753:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "5753:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5769:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5769:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5787:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5787:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5729:79:6"
            },
            "returnParameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5931:0:6"
            },
            "scope": 1386,
            "src": "5707:706:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1384,
              "nodeType": "Block",
              "src": "6798:334:6",
              "statements": [
                {
                  "assignments": [
                    1339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1339,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1384,
                      "src": "6837:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1338,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1337,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "6837:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "6837:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1348,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1340,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "6856:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1342,
                      "indexExpression": {
                        "id": 1341,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "6866:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6856:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1347,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1345,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "6884:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6876:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6876:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6876:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6856:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6837:54:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1349,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "6945:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6945:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6958:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6945:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1378,
                  "nodeType": "IfStatement",
                  "src": "6941:152:6",
                  "trueBody": {
                    "id": 1377,
                    "nodeType": "Block",
                    "src": "6961:132:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1354,
                              "name": "Customer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1317,
                              "src": "6981:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1355,
                              "name": "Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1322,
                              "src": "6991:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1356,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7003:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            ],
                            "id": 1353,
                            "name": "aggregateBonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "6966:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Stake memory)"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6966:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "6966:41:6"
                      },
                      {
                        "expression": {
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1359,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7012:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "dateOfValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 754,
                            "src": "7012:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1362,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "7030:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "7030:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7012:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1365,
                        "nodeType": "ExpressionStatement",
                        "src": "7012:30:6"
                      },
                      {
                        "expression": {
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1366,
                                "name": "stakeList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 772,
                                "src": "7047:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                                }
                              },
                              "id": 1372,
                              "indexExpression": {
                                "id": 1367,
                                "name": "Customer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1317,
                                "src": "7057:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7047:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                                "typeString": "mapping(address => struct Stake storage ref)"
                              }
                            },
                            "id": 1373,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1370,
                                  "name": "Token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1320,
                                  "src": "7075:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$669",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$669",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7067:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1368,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7067:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7067:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7047:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_storage",
                              "typeString": "struct Stake storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1374,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "7085:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "src": "7047:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_storage",
                            "typeString": "struct Stake storage ref"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "7047:41:6"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1380,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "7112:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1381,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "7122:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1379,
                      "name": "BonusRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "7101:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$669_$returns$__$",
                        "typeString": "function (address,contract IERC20)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7101:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "EmitStatement",
                  "src": "7096:32:6"
                }
              ]
            },
            "documentation": {
              "id": 1315,
              "nodeType": "StructuredDocumentation",
              "src": "6416:198:6",
              "text": " @dev Triggers bonus computation, for calling on timer\n @param Customer Customer's address\n @param Token customer's Token\n @param Aggregator Provided by JS for calulating Parity"
            },
            "functionSelector": "469c6754",
            "id": 1385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1325,
                    "name": "Customer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1317,
                    "src": "6725:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1326,
                "modifierName": {
                  "id": 1324,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "6710:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6710:24:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1330,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "6760:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6752:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1328,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6752:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6752:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1332,
                "modifierName": {
                  "id": 1327,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "6737:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6737:30:6"
              },
              {
                "arguments": [
                  {
                    "id": 1334,
                    "name": "Aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1322,
                    "src": "6785:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1335,
                "modifierName": {
                  "id": 1333,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "6770:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6770:26:6"
              }
            ],
            "name": "bonusRound",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "Customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "6639:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "6659:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1319,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1318,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "6659:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "6659:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "6675:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6675:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6635:61:6"
            },
            "returnParameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6798:0:6"
            },
            "scope": 1386,
            "src": "6616:516:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1387,
        "src": "327:6807:6"
      }
    ],
    "src": "32:7103:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FBStaker.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Bonus": [
        762
      ],
      "Context": [
        716
      ],
      "ERC20": [
        591
      ],
      "FBMoney": [
        747
      ],
      "FBStaker": [
        1386
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "Stake": [
        757
      ]
    },
    "id": 1387,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 749,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 750,
        "nodeType": "ImportDirective",
        "scope": 1387,
        "sourceUnit": 592,
        "src": "56:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 1387,
        "sourceUnit": 46,
        "src": "112:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FBMoney.sol",
        "file": "./FBMoney.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 1387,
        "sourceUnit": 748,
        "src": "189:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Stake",
        "id": 757,
        "members": [
          {
            "constant": false,
            "id": 754,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "230:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 756,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "252:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "252:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Stake",
        "nodeType": "StructDefinition",
        "scope": 1387,
        "src": "214:55:6",
        "visibility": "public"
      },
      {
        "canonicalName": "Bonus",
        "id": 762,
        "members": [
          {
            "constant": false,
            "id": 759,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "286:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 758,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 761,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "303:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Bonus",
        "nodeType": "StructDefinition",
        "scope": 1387,
        "src": "270:55:6",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          747
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1386,
        "linearizedBaseContracts": [
          1386
        ],
        "name": "FBStaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 765,
            "mutability": "mutable",
            "name": "_Rate",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "348:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 772,
            "mutability": "mutable",
            "name": "stakeList",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "368:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Stake))"
            },
            "typeName": {
              "id": 771,
              "keyType": {
                "id": 766,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "376:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "368:45:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Stake))"
              },
              "valueType": {
                "id": 770,
                "keyType": {
                  "id": 767,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "387:25:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                  "typeString": "mapping(address => struct Stake)"
                },
                "valueType": {
                  "id": 769,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 768,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 757,
                    "src": "406:5:6"
                  },
                  "referencedDeclaration": 757,
                  "src": "406:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                    "typeString": "struct Stake"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 777,
            "mutability": "mutable",
            "name": "bonusList",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "455:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
              "typeString": "mapping(address => struct Bonus)"
            },
            "typeName": {
              "id": 776,
              "keyType": {
                "id": 773,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                "typeString": "mapping(address => struct Bonus)"
              },
              "valueType": {
                "id": 775,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 774,
                  "name": "Bonus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 762,
                  "src": "474:5:6"
                },
                "referencedDeclaration": 762,
                "src": "474:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bonus_$762_storage_ptr",
                  "typeString": "struct Bonus"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 781,
            "mutability": "mutable",
            "name": "tokenPool",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "527:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 780,
              "keyType": {
                "id": 778,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "535:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "527:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 779,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "546:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 783,
            "mutability": "mutable",
            "name": "_Decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "600:15:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 782,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "600:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 786,
            "mutability": "mutable",
            "name": "_FrenchBorgTokenProvider",
            "nodeType": "VariableDeclaration",
            "scope": 1386,
            "src": "648:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$669",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 785,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 784,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 669,
                "src": "648:6:6"
              },
              "referencedDeclaration": 669,
              "src": "648:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$669",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "722:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 791,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "734:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "739:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "734:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "726:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "726:15:6"
                },
                {
                  "id": 796,
                  "nodeType": "PlaceholderStatement",
                  "src": "745:1:6"
                }
              ]
            },
            "id": 798,
            "name": "notNull256",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "711:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:11:6"
            },
            "src": "691:59:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "787:37:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 803,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "799:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "812:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "804:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 804,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "804:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "804:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "799:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "791:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "791:24:6"
                },
                {
                  "id": 811,
                  "nodeType": "PlaceholderStatement",
                  "src": "819:1:6"
                }
              ]
            },
            "id": 813,
            "name": "notNullAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "776:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:11:6"
            },
            "src": "752:72:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 822,
            "name": "TokenStaked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "845:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Tkn",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "858:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 817,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 816,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "858:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "858:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "870:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "844:41:6"
            },
            "src": "827:59:6"
          },
          {
            "anonymous": false,
            "id": 831,
            "name": "TokenUnstaked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "908:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Tkn",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "921:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 826,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 825,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "921:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "921:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "933:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:41:6"
            },
            "src": "888:61:6"
          },
          {
            "anonymous": false,
            "id": 838,
            "name": "BonusRound",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "968:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "986:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 835,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 834,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "986:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "986:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:32:6"
            },
            "src": "951:49:6"
          },
          {
            "anonymous": false,
            "id": 844,
            "name": "BonusRetrieved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "1023:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "1036:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:29:6"
            },
            "src": "1002:50:6"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "1069:101:6",
              "statements": [
                {
                  "expression": {
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 847,
                      "name": "_FrenchBorgTokenProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "1073:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1119:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1107:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_FBMoney_$747_$",
                              "typeString": "function (uint256) returns (contract FBMoney)"
                            },
                            "typeName": {
                              "id": 850,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 849,
                                "name": "FBMoney",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 747,
                                "src": "1111:7:6"
                              },
                              "referencedDeclaration": 747,
                              "src": "1111:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FBMoney_$747",
                                "typeString": "contract FBMoney"
                              }
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1107:17:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        ],
                        "id": 848,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "1100:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$669_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1100:25:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$669",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1073:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:52:6"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 857,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "1152:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3138",
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1164:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "1152:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:14:6"
                }
              ]
            },
            "id": 862,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:2:6"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:6"
            },
            "scope": 1386,
            "src": "1055:115:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "1306:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1352:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1352:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 868,
                        "name": "_FrenchBorgTokenProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "1317:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 608,
                      "src": "1317:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 867,
                  "id": 873,
                  "nodeType": "Return",
                  "src": "1310:53:6"
                }
              ]
            },
            "documentation": {
              "id": 863,
              "nodeType": "StructuredDocumentation",
              "src": "1173:72:6",
              "text": " @dev Returns the balance of our home made token for bonuses"
            },
            "functionSelector": "e2f59ec9",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMoneyBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:2:6"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "1297:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1296:9:6"
            },
            "scope": 1386,
            "src": "1247:120:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "1536:59:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 884,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "1547:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 887,
                        "indexExpression": {
                          "expression": {
                            "id": 885,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1557:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1557:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1547:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 892,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 890,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "1577:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1569:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 888,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1569:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1569:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1547:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 756,
                    "src": "1547:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "1540:51:6"
                }
              ]
            },
            "documentation": {
              "id": 876,
              "nodeType": "StructuredDocumentation",
              "src": "1370:81:6",
              "text": " @dev debugging purpose: Returns the amount of money staked per token"
            },
            "functionSelector": "b80f5f89",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStakedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1484:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$591",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 878,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 877,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "1484:5:6"
                    },
                    "referencedDeclaration": 591,
                    "src": "1484:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$591",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:13:6"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1526:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:9:6"
            },
            "scope": 1386,
            "src": "1453:142:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "1791:379:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 908,
                      "name": "_priceDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "1938:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 909,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "1955:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1938:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 926,
                        "name": "_priceDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "2049:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 927,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "2066:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2049:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 944,
                    "nodeType": "IfStatement",
                    "src": "2045:105:6",
                    "trueBody": {
                      "id": 943,
                      "nodeType": "Block",
                      "src": "2077:73:6",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 929,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "2089:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2105:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 937,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 935,
                                          "name": "_priceDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 901,
                                          "src": "2117:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 936,
                                          "name": "_decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 903,
                                          "src": "2134:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "2117:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 934,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2109:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 933,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2109:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 938,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2109:35:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2105:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2098:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 930,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2098:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2098:47:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "2089:56:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 907,
                          "id": 942,
                          "nodeType": "Return",
                          "src": "2082:63:6"
                        }
                      ]
                    }
                  },
                  "id": 945,
                  "nodeType": "IfStatement",
                  "src": "1934:216:6",
                  "trueBody": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "1966:73:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 911,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "1978:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1994:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 919,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 917,
                                        "name": "_decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 903,
                                        "src": "2006:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 918,
                                        "name": "_priceDecimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 901,
                                        "src": "2018:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "2006:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1998:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 915,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1998:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1998:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1994:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1987:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 912,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1987:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1987:47:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1978:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 907,
                        "id": 924,
                        "nodeType": "Return",
                        "src": "1971:63:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 946,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 899,
                    "src": "2160:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 907,
                  "id": 947,
                  "nodeType": "Return",
                  "src": "2153:13:6"
                }
              ]
            },
            "documentation": {
              "id": 897,
              "nodeType": "StructuredDocumentation",
              "src": "1598:77:6",
              "text": " @dev Make money compatibles if they don't have the same Decimals"
            },
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scalePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1700:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_priceDecimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1717:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1741:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:63:6"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1783:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:8:6"
            },
            "scope": 1386,
            "src": "1677:493:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "2362:318:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 959,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2374:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2374:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 961,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "2389:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dateOfValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 754,
                          "src": "2389:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2374:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420626c6f636b206e756d626572",
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2406:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        },
                        "value": "invalid block number"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        }
                      ],
                      "id": 958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2366:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 966,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:63:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 975,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 971,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "2607:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 972,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "src": "2607:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 973,
                                            "name": "Stk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "2622:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                              "typeString": "struct Stake memory"
                                            }
                                          },
                                          "id": 974,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "dateOfValue",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 754,
                                          "src": "2622:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2607:30:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 970,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2599:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 969,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2599:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2599:39:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 977,
                                    "name": "_Rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 765,
                                    "src": "2641:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2599:47:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 979,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2598:49:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "313939333835",
                                  "id": 982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2663:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_199385_by_1",
                                    "typeString": "int_const 199385"
                                  },
                                  "value": "199385"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_199385_by_1",
                                    "typeString": "int_const 199385"
                                  }
                                ],
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2655:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 980,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2655:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2655:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2598:72:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 985,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2597:74:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2584:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2584:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:92:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 957,
                  "id": 987,
                  "nodeType": "Return",
                  "src": "2574:102:6"
                }
              ]
            },
            "documentation": {
              "id": 950,
              "nodeType": "StructuredDocumentation",
              "src": "2173:120:6",
              "text": " @dev Retourne le ratio temporel en utilisant le delta des blocks\n @param Stk Current stake for customers"
            },
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "2312:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 951,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "2312:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "2312:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2311:18:6"
            },
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "2353:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2352:9:6"
            },
            "scope": 1386,
            "src": "2295:385:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "2949:470:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    1001,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1001,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "2989:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1000,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2989:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 1007,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1003,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "3033:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1002,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3011:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3011:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "3011:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3011:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2986:80:6"
                },
                {
                  "assignments": [
                    1009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1009,
                      "mutability": "mutable",
                      "name": "tokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "3070:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1008,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3070:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1015,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1011,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "3114:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1010,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3092:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3092:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "3092:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3070:66:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1016,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "3224:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1017,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "3241:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3224:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1037,
                  "nodeType": "IfStatement",
                  "src": "3220:142:6",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1019,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "3266:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 756,
                          "src": "3266:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1022,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "3291:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            ],
                            "id": 1021,
                            "name": "getRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "3283:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct Stake memory) view returns (uint256)"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3283:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3266:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1028,
                                  "name": "ratio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "3321:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                {
                                  "id": 1029,
                                  "name": "tokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "3328:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 1030,
                                  "name": "_Decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 783,
                                  "src": "3343:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1027,
                                "name": "scalePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 949,
                                "src": "3310:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                  "typeString": "function (int256,uint8,uint8) pure returns (int256)"
                                }
                              },
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3310:43:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1032,
                              "name": "ratio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "3356:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "3310:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3302:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1025,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3302:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3302:60:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3266:96:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 999,
                    "id": 1036,
                    "nodeType": "Return",
                    "src": "3255:107:6"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1038,
                          "name": "Stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "3373:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 756,
                        "src": "3373:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1041,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "3394:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          ],
                          "id": 1040,
                          "name": "getRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "3386:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct Stake memory) view returns (uint256)"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3386:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3373:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1046,
                          "name": "ratio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1001,
                          "src": "3409:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3401:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3401:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3401:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3373:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 999,
                  "id": 1049,
                  "nodeType": "Return",
                  "src": "3366:49:6"
                }
              ]
            },
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "2683:165:6",
              "text": " @dev Given a stake, returns the value of potential bonuses\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "2872:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 992,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 991,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "2872:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "2872:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 995,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "2890:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2890:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2871:38:6"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "2939:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2938:9:6"
            },
            "scope": 1386,
            "src": "2850:569:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "3731:141:6",
              "statements": [
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "3769:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1062,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3769:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1068,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1065,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3798:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      {
                        "id": 1066,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "3803:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1064,
                      "name": "computeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "3785:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (struct Stake memory,address) view returns (uint256)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3785:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3769:45:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1069,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "3822:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3830:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3822:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1079,
                  "nodeType": "IfStatement",
                  "src": "3818:50:6",
                  "trueBody": {
                    "expression": {
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 1072,
                            "name": "bonusList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "3833:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                              "typeString": "mapping(address => struct Bonus storage ref)"
                            }
                          },
                          "id": 1074,
                          "indexExpression": {
                            "id": 1073,
                            "name": "customer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1054,
                            "src": "3843:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3833:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bonus_$762_storage",
                            "typeString": "struct Bonus storage ref"
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 759,
                        "src": "3833:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 1076,
                        "name": "bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "3863:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3833:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1078,
                    "nodeType": "ExpressionStatement",
                    "src": "3833:35:6"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1052,
              "nodeType": "StructuredDocumentation",
              "src": "3422:209:6",
              "text": " @dev Internal function for evaluating and aggregating Bonuses\n @param customer for which customer ?\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "aggregateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "3660:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "3680:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3680:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "3702:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 1058,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1057,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "3702:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "3702:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3656:65:6"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:6"
            },
            "scope": 1386,
            "src": "3633:239:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "4127:256:6",
              "statements": [
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "4131:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4131:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1096,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1092,
                        "name": "bonusList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "4147:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                          "typeString": "mapping(address => struct Bonus storage ref)"
                        }
                      },
                      "id": 1094,
                      "indexExpression": {
                        "id": 1093,
                        "name": "customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "4157:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4147:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bonus_$762_storage",
                        "typeString": "struct Bonus storage ref"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 759,
                    "src": "4147:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4131:42:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1097,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1091,
                      "src": "4216:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4225:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4216:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1122,
                  "nodeType": "IfStatement",
                  "src": "4212:168:6",
                  "trueBody": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "4228:152:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1100,
                                "name": "bonusList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 777,
                                "src": "4233:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                                  "typeString": "mapping(address => struct Bonus storage ref)"
                                }
                              },
                              "id": 1102,
                              "indexExpression": {
                                "id": 1101,
                                "name": "customer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "4243:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4233:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bonus_$762_storage",
                                "typeString": "struct Bonus storage ref"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 759,
                            "src": "4233:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4262:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4233:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1106,
                        "nodeType": "ExpressionStatement",
                        "src": "4233:30:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1108,
                              "name": "customer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "4288:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1109,
                              "name": "bonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "4298:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1107,
                            "name": "BonusRetrieved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "4273:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4273:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1111,
                        "nodeType": "EmitStatement",
                        "src": "4268:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1115,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4347:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4347:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1117,
                              "name": "customer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "4359:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1118,
                              "name": "bonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "4369:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1112,
                              "name": "_FrenchBorgTokenProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "4309:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 650,
                            "src": "4309:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4309:66:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1120,
                        "nodeType": "ExpressionStatement",
                        "src": "4309:66:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1082,
              "nodeType": "StructuredDocumentation",
              "src": "3875:168:6",
              "text": " @dev Customer retrieves all his acquired bonuses - to be called by the owner of the contract\n @param customer customer who wants to get the FBMoney back"
            },
            "functionSelector": "093e5a1d",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1087,
                    "name": "customer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1084,
                    "src": "4116:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1088,
                "modifierName": {
                  "id": 1086,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "4101:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4101:24:6"
              }
            ],
            "name": "retrieveBonuses",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "4070:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4069:18:6"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4127:0:6"
            },
            "scope": 1386,
            "src": "4045:338:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1216,
              "nodeType": "Block",
              "src": "4800:630:6",
              "statements": [
                {
                  "assignments": [
                    1149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1149,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1216,
                      "src": "4839:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1147,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "4839:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "4839:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1159,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1150,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "4858:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1153,
                      "indexExpression": {
                        "expression": {
                          "id": 1151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4868:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4868:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4858:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1158,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1156,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "4888:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4880:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4880:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4880:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4858:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4839:56:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1160,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5023:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "5023:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5036:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5023:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1171,
                  "nodeType": "IfStatement",
                  "src": "5019:63:6",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1165,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5054:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5054:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1167,
                          "name": "Aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "5066:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1168,
                          "name": "Stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "5078:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        ],
                        "id": 1164,
                        "name": "aggregateBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "5039:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                          "typeString": "function (address,address,struct Stake memory)"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5039:43:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1170,
                    "nodeType": "ExpressionStatement",
                    "src": "5039:43:6"
                  }
                },
                {
                  "expression": {
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1172,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5159:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "5159:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1175,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "5173:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5159:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:20:6"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1178,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5183:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "5183:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1181,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5201:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5201:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:30:6"
                },
                {
                  "expression": {
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1185,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "5217:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 1192,
                        "indexExpression": {
                          "expression": {
                            "id": 1186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5227:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5227:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5217:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 1193,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1190,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "5247:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5239:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5239:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5239:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5217:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1194,
                      "name": "Stk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "5257:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake memory"
                      }
                    },
                    "src": "5217:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:43:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5281:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5281:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1200,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "5293:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 1201,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5300:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1197,
                      "name": "TokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "5269:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$669_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5269:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "EmitStatement",
                  "src": "5264:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1207,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5392:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5392:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1211,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5412:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FBStaker_$1386",
                              "typeString": "contract FBStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FBStaker_$1386",
                              "typeString": "contract FBStaker"
                            }
                          ],
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5404:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5404:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5404:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1213,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5419:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1204,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "5373:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "5373:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5373:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "5373:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1125,
              "nodeType": "StructuredDocumentation",
              "src": "4386:237:6",
              "text": " @dev Stake swap some tokens for our money token - To be called by the customer\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "35443571",
            "id": 1217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1135,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "4729:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1136,
                "modifierName": {
                  "id": 1134,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "4718:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4718:18:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1140,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "4762:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4754:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1138,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4754:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1142,
                "modifierName": {
                  "id": 1137,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "4739:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4739:30:6"
              },
              {
                "arguments": [
                  {
                    "id": 1144,
                    "name": "Aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1132,
                    "src": "4787:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1145,
                "modifierName": {
                  "id": 1143,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "4772:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4772:26:6"
              }
            ],
            "name": "StakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "4649:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1127,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1126,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "4649:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "4649:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "4665:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "4683:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4645:59:6"
            },
            "returnParameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4800:0:6"
            },
            "scope": 1386,
            "src": "4625:805:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "5931:482:6",
              "statements": [
                {
                  "assignments": [
                    1247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "5970:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1245,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "5970:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "5970:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1256,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1248,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "5989:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1250,
                      "indexExpression": {
                        "id": 1249,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "5999:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5989:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1255,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1253,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1223,
                          "src": "6017:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6009:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6009:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6009:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5989:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5970:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1258,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "6071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 756,
                          "src": "6071:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1260,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1225,
                          "src": "6085:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6071:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420746f6f2068696768",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6093:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        },
                        "value": "amount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        }
                      ],
                      "id": 1257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6063:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "6063:48:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1265,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "6164:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6164:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6177:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6164:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1275,
                  "nodeType": "IfStatement",
                  "src": "6160:61:6",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1270,
                          "name": "Customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "6195:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1271,
                          "name": "Aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "6205:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1272,
                          "name": "Stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1247,
                          "src": "6217:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                            "typeString": "struct Stake memory"
                          }
                        ],
                        "id": 1269,
                        "name": "aggregateBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "6180:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                          "typeString": "function (address,address,struct Stake memory)"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6180:41:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1274,
                    "nodeType": "ExpressionStatement",
                    "src": "6180:41:6"
                  }
                },
                {
                  "expression": {
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1276,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "6226:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6226:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1279,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "6240:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6226:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "6226:20:6"
                },
                {
                  "expression": {
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1282,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "6250:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "6250:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1285,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6268:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "6268:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6250:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "6250:30:6"
                },
                {
                  "expression": {
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1289,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "6284:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 1295,
                        "indexExpression": {
                          "id": 1290,
                          "name": "Customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "6294:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6284:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 1296,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1293,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "6312:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6304:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1291,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6304:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6304:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6284:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1297,
                      "name": "Stk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "6322:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake memory"
                      }
                    },
                    "src": "6284:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "6284:41:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1301,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "6348:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1302,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "6358:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 1303,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "6365:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1300,
                      "name": "TokenUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "6334:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$669_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6334:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "EmitStatement",
                  "src": "6329:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1309,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "6392:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1310,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "6402:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1306,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "6377:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 618,
                      "src": "6377:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6377:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1312,
                  "nodeType": "ExpressionStatement",
                  "src": "6377:32:6"
                }
              ]
            },
            "documentation": {
              "id": 1218,
              "nodeType": "StructuredDocumentation",
              "src": "5433:272:6",
              "text": " @dev Unstake the staked tokens - To be called by the owner of the contract\n @param Customer Customer's address\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "9da3f76d",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1230,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1225,
                    "src": "5833:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1231,
                "modifierName": {
                  "id": 1229,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "5822:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5822:18:6"
              },
              {
                "arguments": [
                  {
                    "id": 1233,
                    "name": "Customer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1220,
                    "src": "5858:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1234,
                "modifierName": {
                  "id": 1232,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "5843:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5843:24:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1238,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "5893:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5885:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1236,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5885:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1240,
                "modifierName": {
                  "id": 1235,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "5870:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5870:30:6"
              },
              {
                "arguments": [
                  {
                    "id": 1242,
                    "name": "Aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1227,
                    "src": "5918:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1243,
                "modifierName": {
                  "id": 1241,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "5903:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5903:26:6"
              }
            ],
            "name": "UnstakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "Customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5733:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5753:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1221,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "5753:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "5753:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5769:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5769:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "5787:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5787:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5729:79:6"
            },
            "returnParameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5931:0:6"
            },
            "scope": 1386,
            "src": "5707:706:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1384,
              "nodeType": "Block",
              "src": "6798:334:6",
              "statements": [
                {
                  "assignments": [
                    1339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1339,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1384,
                      "src": "6837:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1338,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1337,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "6837:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "6837:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1348,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1340,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "6856:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1342,
                      "indexExpression": {
                        "id": 1341,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "6866:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6856:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1347,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1345,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "6884:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6876:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6876:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6876:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6856:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6837:54:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1349,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "6945:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6945:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6958:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6945:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1378,
                  "nodeType": "IfStatement",
                  "src": "6941:152:6",
                  "trueBody": {
                    "id": 1377,
                    "nodeType": "Block",
                    "src": "6961:132:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1354,
                              "name": "Customer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1317,
                              "src": "6981:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1355,
                              "name": "Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1322,
                              "src": "6991:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1356,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7003:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            ],
                            "id": 1353,
                            "name": "aggregateBonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "6966:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Stake memory)"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6966:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "6966:41:6"
                      },
                      {
                        "expression": {
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1359,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7012:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "dateOfValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 754,
                            "src": "7012:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1362,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "7030:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "7030:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7012:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1365,
                        "nodeType": "ExpressionStatement",
                        "src": "7012:30:6"
                      },
                      {
                        "expression": {
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1366,
                                "name": "stakeList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 772,
                                "src": "7047:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                                }
                              },
                              "id": 1372,
                              "indexExpression": {
                                "id": 1367,
                                "name": "Customer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1317,
                                "src": "7057:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7047:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                                "typeString": "mapping(address => struct Stake storage ref)"
                              }
                            },
                            "id": 1373,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1370,
                                  "name": "Token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1320,
                                  "src": "7075:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$669",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$669",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7067:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1368,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7067:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7067:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7047:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_storage",
                              "typeString": "struct Stake storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1374,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "7085:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "src": "7047:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$757_storage",
                            "typeString": "struct Stake storage ref"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "7047:41:6"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1380,
                        "name": "Customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "7112:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1381,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "7122:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1379,
                      "name": "BonusRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "7101:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$669_$returns$__$",
                        "typeString": "function (address,contract IERC20)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7101:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "EmitStatement",
                  "src": "7096:32:6"
                }
              ]
            },
            "documentation": {
              "id": 1315,
              "nodeType": "StructuredDocumentation",
              "src": "6416:198:6",
              "text": " @dev Triggers bonus computation, for calling on timer\n @param Customer Customer's address\n @param Token customer's Token\n @param Aggregator Provided by JS for calulating Parity"
            },
            "functionSelector": "469c6754",
            "id": 1385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1325,
                    "name": "Customer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1317,
                    "src": "6725:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1326,
                "modifierName": {
                  "id": 1324,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "6710:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6710:24:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1330,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "6760:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6752:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1328,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6752:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6752:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1332,
                "modifierName": {
                  "id": 1327,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "6737:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6737:30:6"
              },
              {
                "arguments": [
                  {
                    "id": 1334,
                    "name": "Aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1322,
                    "src": "6785:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1335,
                "modifierName": {
                  "id": 1333,
                  "name": "notNullAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 813,
                  "src": "6770:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6770:26:6"
              }
            ],
            "name": "bonusRound",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "Customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "6639:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "6659:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1319,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1318,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "6659:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "6659:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "6675:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6675:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6635:61:6"
            },
            "returnParameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6798:0:6"
            },
            "scope": 1386,
            "src": "6616:516:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1387,
        "src": "327:6807:6"
      }
    ],
    "src": "32:7103:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x9e657b65aa8c41c00ae8d4100329965794deeed7dbffd9d12c1cdf27680dcc69": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BomusRetrieved",
          "type": "event"
        },
        "0x17a90bf25d618e67de9bc66de5762d97787b11707d112164ab54c37111467f2b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "Tkn",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokenStaked",
          "type": "event"
        },
        "0x4c5a68df1e54dd796657dc5832c88515a36dc92548af9951a0ef38dd61a3322e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "Tkn",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokenUnstaked",
          "type": "event"
        },
        "0x03d0edaee35df77920681c2dbc0bdb40062585adafef0b3547bd994c9de2668c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BonusRetrieved",
          "type": "event"
        },
        "0x543e2a778776598bebee5d88699813b2a595a90ce0382574f046ce60b29085b3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "Customer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "Token",
              "type": "address"
            }
          ],
          "name": "BonusRound",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x30D8972eb095A76F99a1796Dcd16a46C8353c24C",
      "transactionHash": "0xa114aa1bc8dc03a1beee9c68b955f61d3dea7bddd75877f7867d861ebeff76ea"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0xb9C39B28a96e851C666764f05C832fb500bA54B3",
      "transactionHash": "0x0623288c6eb36c5754c7dedbb653f6df4e78c622dca8ff0d79635fd118803fff"
    },
    "5777": {
      "events": {
        "0x9e657b65aa8c41c00ae8d4100329965794deeed7dbffd9d12c1cdf27680dcc69": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BomusRetrieved",
          "type": "event"
        },
        "0x17a90bf25d618e67de9bc66de5762d97787b11707d112164ab54c37111467f2b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "Tkn",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokenStaked",
          "type": "event"
        },
        "0x4c5a68df1e54dd796657dc5832c88515a36dc92548af9951a0ef38dd61a3322e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "adr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "Tkn",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokenUnstaked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x85a9e375bAf2A9a9992DdcD6A95a68b3d0a213dF",
      "transactionHash": "0x7656a5719ab67c1c430dc7ed44453c9e3975235c5612df48c888a2589a8b04ac"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-08T08:07:40.493Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "StakeTokens(address,uint256,address)": {
        "details": "Stake swap some tokens for our money token - To be called by the customer",
        "params": {
          "Aggregator": "Provided by JS for the correct PAIR",
          "Token": "customer's Token",
          "amount": "amount of customer's token to Stake"
        }
      },
      "UnstakeTokens(address,address,uint256,address)": {
        "details": "Unstake the staked tokens - To be called by the owner of the contract",
        "params": {
          "Aggregator": "Provided by JS for the correct PAIR",
          "Customer": "Customer's address",
          "Token": "customer's Token",
          "amount": "amount of customer's token to Stake"
        }
      },
      "bonusRound(address,address,address)": {
        "details": "Triggers bonus computation, for calling on timer",
        "params": {
          "Aggregator": "Provided by JS for calulating Parity",
          "Customer": "Customer's address",
          "Token": "customer's Token"
        }
      },
      "getMoneyBalance()": {
        "details": "Returns the balance of our home made token for bonuses"
      },
      "getTokenStakedBalance(address)": {
        "details": "debugging purpose: Returns the amount of money staked per token"
      },
      "retrieveBonuses(address)": {
        "details": "Customer retrieves all his acquired bonuses - to be called by the owner of the contract",
        "params": {
          "customer": "customer who wants to get the FBMoney back"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}