{
  "contractName": "FBStaker",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getMoneyBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "getTokenStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "Aggregator",
          "type": "address"
        }
      ],
      "name": "evaluateBonus",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "Aggregator",
          "type": "address"
        }
      ],
      "name": "StakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "Aggregator",
          "type": "address"
        }
      ],
      "name": "UnstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Aggregator\",\"type\":\"address\"}],\"name\":\"StakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Aggregator\",\"type\":\"address\"}],\"name\":\"UnstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Aggregator\",\"type\":\"address\"}],\"name\":\"evaluateBonus\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMoneyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"getTokenStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"StakeTokens(address,uint256,address)\":{\"details\":\"Stake swap some tokens for our money token\",\"params\":{\"Aggregator\":\"Provided by JS for the correct PAIR\",\"Token\":\"customer's Token\",\"amount\":\"amount of customer's token to Stake\"}},\"UnstakeTokens(address,uint256,address)\":{\"details\":\"Unstake the staked tokens\",\"params\":{\"Aggregator\":\"Provided by JS for the correct PAIR\",\"Token\":\"customer's Token\",\"amount\":\"amount of customer's token to Stake\"}},\"evaluateBonus(address,address)\":{\"details\":\"Querying current status of staking - external funk\",\"params\":{\"Aggregator\":\"Provided by JS for evaluating values\",\"Token\":\"Token staked by customers\"}},\"getMoneyBalance()\":{\"details\":\"Returns the balance of our home made token for bonuses\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FBStaker.sol\":\"FBStaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47\",\"dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/FBMoney.sol\":{\"keccak256\":\"0x41ca5f725ee1b6f938ca0b0638f870113f4f611c84431fc6fbe127e073dc5569\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bc3870d4253f4a678f71d87e94497c19a4cbb4e08fbab8bb94dce1c68e72433\",\"dweb:/ipfs/QmSyDkVRMD3W6ijnpDtCTgfGzJ5sb8LQgR9PCUhrCLED8r\"]},\"project:/contracts/FBStaker.sol\":{\"keccak256\":\"0x0f9de0bfe49e6a5064aee5cbd43e40ab602f967459b6ddb81408b9e2c3cc55d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e3e8a2bee50ebe4605a4403b7d07cceb02d14b4810518b776b889df26f74ee\",\"dweb:/ipfs/Qmc6mEyvGRMLMqvJjtiGaSwt6zs3a1EZacFjySgN9nFMG6\"]}},\"version\":1}",
  "bytecode": "0x6080604052600180553480156200001557600080fd5b506103e8604051620000279062000152565b620000339190620001b4565b604051809103906000f08015801562000050573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f757600080fd5b505afa1580156200010c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000132919062000177565b600260006101000a81548160ff021916908360ff16021790555062000216565b61190680620018ac83390190565b6000815190506200017181620001fc565b92915050565b6000602082840312156200018a57600080fd5b60006200019a8482850162000160565b91505092915050565b620001ae81620001e8565b82525050565b6000602082019050620001cb6000830184620001a3565b92915050565b6000819050919050565b600060ff82169050919050565b6000620001f582620001d1565b9050919050565b6200020781620001db565b81146200021357600080fd5b50565b61168680620002266000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063354435711461005c578063b80f5f8914610078578063dbc9eda3146100a8578063e2f59ec9146100d8578063ef9c337d146100f6575b600080fd5b61007660048036038101906100719190610d92565b610112565b005b610092600480360381019061008d9190610d2d565b610415565b60405161009f919061102d565b60405180910390f35b6100c260048036038101906100bd9190610d56565b61049e565b6040516100cf9190610fd2565b60405180910390f35b6100e0610551565b6040516100ed919061102d565b60405180910390f35b610110600480360381019061010b9190610d92565b610602565b005b81600081141561012157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610185577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905083600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d79190611059565b925050819055506102e88382610825565b83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546103779190611059565b925050819055508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016103bb93929190610f72565b602060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610d04565b505050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905061054881846109a7565b91505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105ad9190610f57565b60206040518083038186803b1580156105c557600080fd5b505afa1580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610de1565b905090565b81600081141561061157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561064b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561068557600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050838160200151101561076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290610fed565b60405180910390fd5b6107758382610825565b8381602001818151610787919061142c565b915081815250508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3033876040518463ffffffff1660e01b81526004016107cb93929190610f72565b602060405180830381600087803b1580156107e557600080fd5b505af11580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610d04565b505050505050565b600061083182846109a7565b9050600081121561084157600090505b43600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555043826000018181525050600081146109a25780600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546108ec9190611059565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161094e929190610fa9565b602060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190610d04565b505b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f057600080fd5b505afa158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190610e0a565b50505091505060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7657600080fd5b505afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190610e81565b9050600260009054906101000a900460ff1660ff168160ff1614610b1c57610ae68282600260009054906101000a900460ff16610b4a565b82610af087610bcd565b8760200151610aff91906113d2565b610b0991906112bb565b610b1391906112bb565b92505050610b44565b81610b2686610bcd565b8660200151610b3591906113d2565b610b3f91906112bb565b925050505b92915050565b60008160ff168360ff161015610b87578282610b669190611460565b60ff16600a610b75919061119d565b84610b8091906112bb565b9050610bc6565b8160ff168360ff161115610bc2578183610ba19190611460565b60ff16600a610bb0919061119d565b84610bbb91906110af565b9050610bc6565b8390505b9392505050565b600081600001514311610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c9061100d565b60405180910390fd5b62025396600154836000015143610c2c919061142c565b610c3691906113d2565b610c409190611119565b9050919050565b600081359050610c5681611598565b92915050565b600081519050610c6b816115af565b92915050565b600081359050610c80816115c6565b92915050565b600081359050610c95816115dd565b92915050565b600081519050610caa816115f4565b92915050565b600081359050610cbf8161160b565b92915050565b600081519050610cd48161160b565b92915050565b600081519050610ce981611639565b92915050565b600081519050610cfe81611622565b92915050565b600060208284031215610d1657600080fd5b6000610d2484828501610c5c565b91505092915050565b600060208284031215610d3f57600080fd5b6000610d4d84828501610c71565b91505092915050565b60008060408385031215610d6957600080fd5b6000610d7785828601610c86565b9250506020610d8885828601610c47565b9150509250929050565b600080600060608486031215610da757600080fd5b6000610db586828701610c86565b9350506020610dc686828701610cb0565b9250506040610dd786828701610c47565b9150509250925092565b600060208284031215610df357600080fd5b6000610e0184828501610cc5565b91505092915050565b600080600080600060a08688031215610e2257600080fd5b6000610e3088828901610cda565b9550506020610e4188828901610c9b565b9450506040610e5288828901610cc5565b9350506060610e6388828901610cc5565b9250506080610e7488828901610cda565b9150509295509295909350565b600060208284031215610e9357600080fd5b6000610ea184828501610cef565b91505092915050565b610eb381611494565b82525050565b610ec2816114d6565b82525050565b6000610ed5600f83611048565b91507f616d6f756e7420746f6f206869676800000000000000000000000000000000006000830152602082019050919050565b6000610f15601483611048565b91507f696e76616c696420626c6f636b206e756d6265720000000000000000000000006000830152602082019050919050565b610f5181611500565b82525050565b6000602082019050610f6c6000830184610eaa565b92915050565b6000606082019050610f876000830186610eaa565b610f946020830185610eaa565b610fa16040830184610f48565b949350505050565b6000604082019050610fbe6000830185610eaa565b610fcb6020830184610f48565b9392505050565b6000602082019050610fe76000830184610eb9565b92915050565b6000602082019050818103600083015261100681610ec8565b9050919050565b6000602082019050818103600083015261102681610f08565b9050919050565b60006020820190506110426000830184610f48565b92915050565b600082825260208201905092915050565b600061106482611500565b915061106f83611500565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110a4576110a361152d565b5b828201905092915050565b60006110ba826114d6565b91506110c5836114d6565b9250826110d5576110d461155c565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561110e5761110d61152d565b5b828205905092915050565b600061112482611500565b915061112f83611500565b92508261113f5761113e61155c565b5b828204905092915050565b6000808291508390505b6001851115611194578086048111156111705761116f61152d565b5b600185161561117f5780820291505b808102905061118d8561158b565b9450611154565b94509492505050565b60006111a882611500565b91506111b383611500565b92506111e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111e8565b905092915050565b6000826111f857600190506112b4565b8161120657600090506112b4565b816001811461121c576002811461122657611255565b60019150506112b4565b60ff8411156112385761123761152d565b5b8360020a91508482111561124f5761124e61152d565b5b506112b4565b5060208310610133831016604e8410600b841016171561128a5782820a9050838111156112855761128461152d565b5b6112b4565b611297848484600161114a565b925090508184048111156112ae576112ad61152d565b5b81810290505b9392505050565b60006112c6826114d6565b91506112d1836114d6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156113105761130f61152d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561134d5761134c61152d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561138a5761138961152d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156113c7576113c661152d565b5b828202905092915050565b60006113dd82611500565b91506113e883611500565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114215761142061152d565b5b828202905092915050565b600061143782611500565b915061144283611500565b9250828210156114555761145461152d565b5b828203905092915050565b600061146b8261150a565b91506114768361150a565b9250828210156114895761148861152d565b5b828203905092915050565b600061149f826114e0565b9050919050565b60008115159050919050565b60006114bd82611494565b9050919050565b60006114cf82611494565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b6115a181611494565b81146115ac57600080fd5b50565b6115b8816114a6565b81146115c357600080fd5b50565b6115cf816114b2565b81146115da57600080fd5b50565b6115e6816114c4565b81146115f157600080fd5b50565b6115fd816114d6565b811461160857600080fd5b50565b61161481611500565b811461161f57600080fd5b50565b61162b8161150a565b811461163657600080fd5b50565b61164281611517565b811461164d57600080fd5b5056fea264697066735822122044968833a13daaf334207720e18b4957787e8f34d6020ad9c0d3b9b1e8a9670564736f6c6343000800003360806040523480156200001157600080fd5b506040516200190638038062001906833981810160405281019062000037919062000370565b6040518060400160405280600f81526020017f4672616e6365426f72674d6f6e657900000000000000000000000000000000008152506040518060400160405280600381526020017f46424d00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620002a9565b508060049080519060200190620000d4929190620002a9565b5050506200011633620000ec6200011d60201b60201c565b60ff16600a84620000fe91906200049c565b6200010a91906200049c565b6200012660201b60201c565b50620005b5565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000199576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019090620003ef565b60405180910390fd5b620001ad600083836200029f60201b60201c565b8060026000828254620001c191906200043f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200021891906200043f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027f919062000411565b60405180910390a36200029b60008383620002a460201b60201c565b5050565b505050565b505050565b828054620002b79062000507565b90600052602060002090601f016020900481019282620002db576000855562000327565b82601f10620002f657805160ff191683800117855562000327565b8280016001018555821562000327579182015b828111156200032657825182559160200191906001019062000309565b5b5090506200033691906200033a565b5090565b5b80821115620003555760008160009055506001016200033b565b5090565b6000815190506200036a816200059b565b92915050565b6000602082840312156200038357600080fd5b6000620003938482850162000359565b91505092915050565b6000620003ab601f836200042e565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620003e981620004fd565b82525050565b600060208201905081810360008301526200040a816200039c565b9050919050565b6000602082019050620004286000830184620003de565b92915050565b600082825260208201905092915050565b60006200044c82620004fd565b91506200045983620004fd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200049157620004906200053d565b5b828201905092915050565b6000620004a982620004fd565b9150620004b683620004fd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620004f257620004f16200053d565b5b828202905092915050565b6000819050919050565b600060028204905060018216806200052057607f821691505b602082108114156200053757620005366200056c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620005a681620004fd565b8114620005b257600080fd5b50565b61134180620005c56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c3919061100a565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610fef565b60405180910390f35b610104610326565b604051610111919061110c565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610fef565b60405180910390f35b610152610428565b60405161015f9190611127565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610fef565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf919061110c565b60405180910390f35b6101d0610525565b6040516101dd919061100a565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610fef565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610fef565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d919061110c565b60405180910390f35b6060600380546102859061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061123c565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061108c565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce919061115e565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105349061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546105609061123c565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a906110ec565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906110cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108269061104c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d919061110c565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610981906110ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f19061102c565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a829061106c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e919061115e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b82919061110c565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb4816112dd565b92915050565b600081359050610bc9816112f4565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc8816111c6565b82525050565b6000610cd982611142565b610ce3818561114d565b9350610cf3818560208601611209565b610cfc816112cc565b840191505092915050565b6000610d1460238361114d565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d7a60228361114d565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610de060268361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e4660288361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610eac60258361114d565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f1260248361114d565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7860258361114d565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610fda816111f2565b82525050565b610fe9816111fc565b82525050565b60006020820190506110046000830184610cbf565b92915050565b600060208201905081810360008301526110248184610cce565b905092915050565b6000602082019050818103600083015261104581610d07565b9050919050565b6000602082019050818103600083015261106581610d6d565b9050919050565b6000602082019050818103600083015261108581610dd3565b9050919050565b600060208201905081810360008301526110a581610e39565b9050919050565b600060208201905081810360008301526110c581610e9f565b9050919050565b600060208201905081810360008301526110e581610f05565b9050919050565b6000602082019050818103600083015261110581610f6b565b9050919050565b60006020820190506111216000830184610fd1565b92915050565b600060208201905061113c6000830184610fe0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611169826111f2565b9150611174836111f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111a9576111a861126e565b5b828201905092915050565b60006111bf826111d2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561122757808201518184015260208101905061120c565b83811115611236576000848401525b50505050565b6000600282049050600182168061125457607f821691505b602082108114156112685761126761129d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6112e6816111b4565b81146112f157600080fd5b50565b6112fd816111f2565b811461130857600080fd5b5056fea26469706673582212205ff218eba45edf4e70356b06066e1af0aea0d449ea5c48f133f4cfd1fe11718364736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063354435711461005c578063b80f5f8914610078578063dbc9eda3146100a8578063e2f59ec9146100d8578063ef9c337d146100f6575b600080fd5b61007660048036038101906100719190610d92565b610112565b005b610092600480360381019061008d9190610d2d565b610415565b60405161009f919061102d565b60405180910390f35b6100c260048036038101906100bd9190610d56565b61049e565b6040516100cf9190610fd2565b60405180910390f35b6100e0610551565b6040516100ed919061102d565b60405180910390f35b610110600480360381019061010b9190610d92565b610602565b005b81600081141561012157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610185577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905083600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d79190611059565b925050819055506102e88382610825565b83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546103779190611059565b925050819055508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016103bb93929190610f72565b602060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610d04565b505050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905061054881846109a7565b91505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105ad9190610f57565b60206040518083038186803b1580156105c557600080fd5b505afa1580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610de1565b905090565b81600081141561061157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561064b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561068557600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050838160200151101561076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290610fed565b60405180910390fd5b6107758382610825565b8381602001818151610787919061142c565b915081815250508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3033876040518463ffffffff1660e01b81526004016107cb93929190610f72565b602060405180830381600087803b1580156107e557600080fd5b505af11580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610d04565b505050505050565b600061083182846109a7565b9050600081121561084157600090505b43600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555043826000018181525050600081146109a25780600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546108ec9190611059565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161094e929190610fa9565b602060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190610d04565b505b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f057600080fd5b505afa158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190610e0a565b50505091505060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7657600080fd5b505afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190610e81565b9050600260009054906101000a900460ff1660ff168160ff1614610b1c57610ae68282600260009054906101000a900460ff16610b4a565b82610af087610bcd565b8760200151610aff91906113d2565b610b0991906112bb565b610b1391906112bb565b92505050610b44565b81610b2686610bcd565b8660200151610b3591906113d2565b610b3f91906112bb565b925050505b92915050565b60008160ff168360ff161015610b87578282610b669190611460565b60ff16600a610b75919061119d565b84610b8091906112bb565b9050610bc6565b8160ff168360ff161115610bc2578183610ba19190611460565b60ff16600a610bb0919061119d565b84610bbb91906110af565b9050610bc6565b8390505b9392505050565b600081600001514311610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c9061100d565b60405180910390fd5b62025396600154836000015143610c2c919061142c565b610c3691906113d2565b610c409190611119565b9050919050565b600081359050610c5681611598565b92915050565b600081519050610c6b816115af565b92915050565b600081359050610c80816115c6565b92915050565b600081359050610c95816115dd565b92915050565b600081519050610caa816115f4565b92915050565b600081359050610cbf8161160b565b92915050565b600081519050610cd48161160b565b92915050565b600081519050610ce981611639565b92915050565b600081519050610cfe81611622565b92915050565b600060208284031215610d1657600080fd5b6000610d2484828501610c5c565b91505092915050565b600060208284031215610d3f57600080fd5b6000610d4d84828501610c71565b91505092915050565b60008060408385031215610d6957600080fd5b6000610d7785828601610c86565b9250506020610d8885828601610c47565b9150509250929050565b600080600060608486031215610da757600080fd5b6000610db586828701610c86565b9350506020610dc686828701610cb0565b9250506040610dd786828701610c47565b9150509250925092565b600060208284031215610df357600080fd5b6000610e0184828501610cc5565b91505092915050565b600080600080600060a08688031215610e2257600080fd5b6000610e3088828901610cda565b9550506020610e4188828901610c9b565b9450506040610e5288828901610cc5565b9350506060610e6388828901610cc5565b9250506080610e7488828901610cda565b9150509295509295909350565b600060208284031215610e9357600080fd5b6000610ea184828501610cef565b91505092915050565b610eb381611494565b82525050565b610ec2816114d6565b82525050565b6000610ed5600f83611048565b91507f616d6f756e7420746f6f206869676800000000000000000000000000000000006000830152602082019050919050565b6000610f15601483611048565b91507f696e76616c696420626c6f636b206e756d6265720000000000000000000000006000830152602082019050919050565b610f5181611500565b82525050565b6000602082019050610f6c6000830184610eaa565b92915050565b6000606082019050610f876000830186610eaa565b610f946020830185610eaa565b610fa16040830184610f48565b949350505050565b6000604082019050610fbe6000830185610eaa565b610fcb6020830184610f48565b9392505050565b6000602082019050610fe76000830184610eb9565b92915050565b6000602082019050818103600083015261100681610ec8565b9050919050565b6000602082019050818103600083015261102681610f08565b9050919050565b60006020820190506110426000830184610f48565b92915050565b600082825260208201905092915050565b600061106482611500565b915061106f83611500565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110a4576110a361152d565b5b828201905092915050565b60006110ba826114d6565b91506110c5836114d6565b9250826110d5576110d461155c565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561110e5761110d61152d565b5b828205905092915050565b600061112482611500565b915061112f83611500565b92508261113f5761113e61155c565b5b828204905092915050565b6000808291508390505b6001851115611194578086048111156111705761116f61152d565b5b600185161561117f5780820291505b808102905061118d8561158b565b9450611154565b94509492505050565b60006111a882611500565b91506111b383611500565b92506111e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111e8565b905092915050565b6000826111f857600190506112b4565b8161120657600090506112b4565b816001811461121c576002811461122657611255565b60019150506112b4565b60ff8411156112385761123761152d565b5b8360020a91508482111561124f5761124e61152d565b5b506112b4565b5060208310610133831016604e8410600b841016171561128a5782820a9050838111156112855761128461152d565b5b6112b4565b611297848484600161114a565b925090508184048111156112ae576112ad61152d565b5b81810290505b9392505050565b60006112c6826114d6565b91506112d1836114d6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156113105761130f61152d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561134d5761134c61152d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561138a5761138961152d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156113c7576113c661152d565b5b828202905092915050565b60006113dd82611500565b91506113e883611500565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114215761142061152d565b5b828202905092915050565b600061143782611500565b915061144283611500565b9250828210156114555761145461152d565b5b828203905092915050565b600061146b8261150a565b91506114768361150a565b9250828210156114895761148861152d565b5b828203905092915050565b600061149f826114e0565b9050919050565b60008115159050919050565b60006114bd82611494565b9050919050565b60006114cf82611494565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b6115a181611494565b81146115ac57600080fd5b50565b6115b8816114a6565b81146115c357600080fd5b50565b6115cf816114b2565b81146115da57600080fd5b50565b6115e6816114c4565b81146115f157600080fd5b50565b6115fd816114d6565b811461160857600080fd5b50565b61161481611500565b811461161f57600080fd5b50565b61162b8161150a565b811461163657600080fd5b50565b61164281611517565b811461164d57600080fd5b5056fea264697066735822122044968833a13daaf334207720e18b4957787e8f34d6020ad9c0d3b9b1e8a9670564736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1273:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "68:78:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "78:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "93:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "78:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "109:24:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "109:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "109:31:7"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "46:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "54:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "62:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "227:205:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "273:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "282:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "285:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "275:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "275:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "275:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "248:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "257:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "244:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "244:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "269:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "240:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "240:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "237:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "299:126:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "314:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "328:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "318:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "343:72:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "387:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "398:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "383:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "383:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "407:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "353:29:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "353:62:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "343:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "197:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "208:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "220:6:7",
                "type": ""
              }
            ],
            "src": "152:280:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "514:77:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "531:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "578:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "536:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:48:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "524:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:61:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "524:61:7"
                }
              ]
            },
            "name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "509:3:7",
                "type": ""
              }
            ],
            "src": "438:153:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "706:135:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "716:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "728:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "739:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "724:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "716:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "807:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "820:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "831:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "816:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "816:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "752:54:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:82:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "752:82:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "678:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "690:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "701:4:7",
                "type": ""
              }
            ],
            "src": "597:244:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "902:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "913:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "902:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "874:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "884:7:7",
                "type": ""
              }
            ],
            "src": "847:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "973:43:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "983:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "998:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1005:4:7",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "994:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "983:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "955:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "965:7:7",
                "type": ""
              }
            ],
            "src": "930:86:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1093:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1103:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1116:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1116:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1103:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1073:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1083:9:7",
                "type": ""
              }
            ],
            "src": "1022:124:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:77:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1248:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1257:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1260:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1250:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1250:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1250:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1216:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1239:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "1223:15:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1223:22:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1213:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1213:33:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1206:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:41:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1203:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1186:5:7",
                "type": ""
              }
            ],
            "src": "1152:118:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15292:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:7",
                "type": ""
              }
            ],
            "src": "152:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:100:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "379:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "448:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$591",
                      "nodeType": "YulIdentifier",
                      "src": "408:39:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:46:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:46:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:7",
                "type": ""
              }
            ],
            "src": "295:165:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "532:101:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "542:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "564:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "551:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "542:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "621:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$669",
                      "nodeType": "YulIdentifier",
                      "src": "580:40:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "580:47:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$669",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "510:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "518:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "526:5:7",
                "type": ""
              }
            ],
            "src": "466:167:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "701:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "711:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "726:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "720:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "711:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "768:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "742:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "742:32:7"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "679:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "687:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "695:5:7",
                "type": ""
              }
            ],
            "src": "639:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "838:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "848:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "870:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "857:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "848:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "913:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "886:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "886:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "816:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "824:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "832:5:7",
                "type": ""
              }
            ],
            "src": "786:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "994:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1004:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1019:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1004:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1062:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1035:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1035:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "972:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "980:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "988:5:7",
                "type": ""
              }
            ],
            "src": "931:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1142:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1152:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1161:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1152:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1209:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "1183:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:32:7"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1120:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1128:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1136:5:7",
                "type": ""
              }
            ],
            "src": "1080:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1288:78:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1313:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1307:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1307:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1298:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1354:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "1329:24:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1329:31:7"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1266:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1274:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1282:5:7",
                "type": ""
              }
            ],
            "src": "1227:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1446:204:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1492:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1501:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1504:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1494:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1494:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1494:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1467:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1476:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1463:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1463:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1488:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1459:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1459:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1456:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1518:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1533:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1547:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1537:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1562:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1616:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1572:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1562:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1416:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1427:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1439:6:7",
                "type": ""
              }
            ],
            "src": "1372:278:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1735:209:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1781:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1790:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1793:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1783:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1783:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1783:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1756:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1765:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1752:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1752:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1777:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1748:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1745:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1807:130:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1822:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1836:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1826:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1851:76:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1899:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1910:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1895:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1895:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1919:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$591",
                          "nodeType": "YulIdentifier",
                          "src": "1861:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1861:66:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1851:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1705:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1716:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1728:6:7",
                "type": ""
              }
            ],
            "src": "1656:288:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2047:338:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2093:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2102:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2105:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2095:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2095:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2095:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2068:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2077:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2064:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2064:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2089:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2060:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2060:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2057:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2119:131:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2134:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2148:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2138:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2163:77:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2212:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2223:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2208:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2208:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2232:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$669",
                          "nodeType": "YulIdentifier",
                          "src": "2173:34:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2173:67:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2163:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2260:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2275:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2279:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2305:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2340:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2351:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2336:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2336:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2360:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2315:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2305:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$669t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2009:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2020:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2032:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2040:6:7",
                "type": ""
              }
            ],
            "src": "1950:435:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2505:466:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2551:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2560:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2563:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2553:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2553:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2553:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2526:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2535:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2522:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2522:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2547:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2518:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2515:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2577:131:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2592:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2606:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2596:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2621:77:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2670:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2681:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2666:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2666:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2690:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$669",
                          "nodeType": "YulIdentifier",
                          "src": "2631:34:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2631:67:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2621:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2718:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2733:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2747:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2737:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2763:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2798:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2809:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2794:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2794:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2818:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2773:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2763:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2846:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2861:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2875:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2865:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2891:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2926:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2937:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2922:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2922:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2946:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2901:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2901:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2891:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$669t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2459:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2470:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2482:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2490:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2498:6:7",
                "type": ""
              }
            ],
            "src": "2391:580:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3054:207:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3100:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3109:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3112:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3102:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3102:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3102:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3075:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3084:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3071:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3071:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3096:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3067:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3067:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3064:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3126:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3141:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3155:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3145:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3170:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3216:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3227:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3212:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3212:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3236:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3180:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3180:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3170:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3024:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3035:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3047:6:7",
                "type": ""
              }
            ],
            "src": "2977:284:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3409:762:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3456:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3465:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3468:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3458:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3458:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3458:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3430:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3439:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3426:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3426:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3451:3:7",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3422:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:33:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3419:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3482:127:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3497:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3501:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3526:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3571:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3582:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3567:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3567:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3591:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3536:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3536:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3526:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3619:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3634:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3648:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3638:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3664:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3709:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3720:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3705:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3705:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3729:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3674:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3674:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3664:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3757:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3772:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3786:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3776:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3802:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3848:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3859:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3844:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3844:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3868:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3812:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3812:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3802:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3896:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3911:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3925:2:7",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3915:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3941:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3987:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3998:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3983:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3983:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4007:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3951:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3941:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4035:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4050:17:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4064:3:7",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4054:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4081:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4126:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4137:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4122:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4122:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4146:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4091:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4091:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4081:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3347:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3358:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3370:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3378:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3386:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3394:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3402:6:7",
                "type": ""
              }
            ],
            "src": "3267:904:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4252:205:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4298:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4307:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4310:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4300:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4300:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4300:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4273:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4282:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4269:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4269:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4294:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4265:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "4262:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4324:126:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4339:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4353:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4343:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4368:72:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4412:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4423:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4408:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4408:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4432:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4378:29:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4378:62:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4368:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4222:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4233:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4245:6:7",
                "type": ""
              }
            ],
            "src": "4177:280:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4528:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4545:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4568:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4550:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4538:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4516:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4523:3:7",
                "type": ""
              }
            ],
            "src": "4463:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4650:52:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4667:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4689:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "4672:16:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4672:23:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4660:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4660:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4660:36:7"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4638:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4645:3:7",
                "type": ""
              }
            ],
            "src": "4587:115:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4854:167:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4864:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4930:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4935:2:7",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4871:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4864:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4959:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4964:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4955:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4955:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4968:17:7",
                        "type": "",
                        "value": "amount too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4948:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4948:38:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4948:38:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4996:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5007:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5012:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5003:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5003:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4996:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4842:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4850:3:7",
                "type": ""
              }
            ],
            "src": "4708:313:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5173:172:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5183:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5249:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5254:2:7",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5190:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5190:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5183:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5278:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5283:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5274:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5274:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5287:22:7",
                        "type": "",
                        "value": "invalid block number"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5267:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5267:43:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5267:43:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5320:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5331:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5327:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5327:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5320:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5161:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5169:3:7",
                "type": ""
              }
            ],
            "src": "5027:318:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5416:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5433:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5456:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5438:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5438:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5426:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5426:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5426:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5404:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5411:3:7",
                "type": ""
              }
            ],
            "src": "5351:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5573:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5583:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5595:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5606:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5591:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5591:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5583:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5663:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5676:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5687:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5672:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5672:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5619:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5619:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5619:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5545:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5557:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5568:4:7",
                "type": ""
              }
            ],
            "src": "5475:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5857:288:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5867:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5879:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5890:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5875:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5875:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5867:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5947:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5960:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5971:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5956:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5956:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5903:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5903:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5903:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6028:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6041:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6052:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6037:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6037:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5984:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5984:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5984:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6110:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6123:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6134:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6119:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6119:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6066:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6066:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5813:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5825:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5833:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5841:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5852:4:7",
                "type": ""
              }
            ],
            "src": "5703:442:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6277:206:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6287:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6299:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6310:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6295:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6295:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6287:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6367:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6380:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6391:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6376:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6376:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6323:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6323:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6448:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6461:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6472:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6457:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6457:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6404:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6404:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6404:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6241:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6253:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6261:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6272:4:7",
                "type": ""
              }
            ],
            "src": "6151:332:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6585:122:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6595:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6607:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6618:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6603:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6595:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6673:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6686:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6697:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6682:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6682:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6631:41:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:69:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6631:69:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6557:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6569:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6580:4:7",
                "type": ""
              }
            ],
            "src": "6489:218:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6884:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6894:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6906:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6917:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6902:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6894:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6941:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6952:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6937:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6937:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6960:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6966:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6956:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6956:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6930:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6930:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6930:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6986:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7120:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6994:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6994:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6986:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6864:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6879:4:7",
                "type": ""
              }
            ],
            "src": "6713:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7309:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7319:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7331:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7342:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7327:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7327:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7319:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7366:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7377:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7362:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7362:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7385:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7391:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7381:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7381:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7355:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7355:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7355:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7411:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7545:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7419:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7419:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7411:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7289:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7304:4:7",
                "type": ""
              }
            ],
            "src": "7138:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7661:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7671:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7683:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7694:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7679:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7679:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7671:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7751:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7764:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7775:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7760:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7760:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7707:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7707:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7707:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7633:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7645:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7656:4:7",
                "type": ""
              }
            ],
            "src": "7563:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7887:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7904:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7909:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7897:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7897:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7925:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7944:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7949:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7940:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7940:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7925:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7859:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7864:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7875:11:7",
                "type": ""
              }
            ],
            "src": "7791:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8010:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8020:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8043:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8025:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8025:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8020:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8054:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8077:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8059:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8059:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8054:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8217:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8219:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8219:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8219:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8138:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8145:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8213:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8141:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8141:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8135:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8135:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8132:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8249:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8260:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8263:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8256:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8256:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8249:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7997:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8000:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8006:3:7",
                "type": ""
              }
            ],
            "src": "7966:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8318:344:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8328:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8350:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "8333:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8333:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8328:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8361:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8383:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "8366:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8366:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8361:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8407:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "8409:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8409:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8409:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8404:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8397:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8397:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8394:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8609:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8611:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8611:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8611:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "8498:1:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8501:66:7",
                            "type": "",
                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8495:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8495:73:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8585:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8592:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8595:1:7",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8588:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8588:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8582:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8582:16:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8478:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8478:130:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8475:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8641:15:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8651:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8654:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sdiv",
                      "nodeType": "YulIdentifier",
                      "src": "8646:4:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8646:10:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8641:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8307:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8310:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8316:1:7",
                "type": ""
              }
            ],
            "src": "8277:385:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8710:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8720:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8743:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8725:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8725:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8720:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8754:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8777:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8759:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8759:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8754:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8801:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "8803:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8803:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8803:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8798:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8791:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8791:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8788:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8833:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8842:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8845:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8838:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8838:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8833:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8699:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8702:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8708:1:7",
                "type": ""
              }
            ],
            "src": "8668:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8932:775:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8942:15:7",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "8951:6:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "8942:5:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8966:14:7",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "8975:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "8966:4:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9024:677:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9112:22:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9114:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9114:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9114:18:7"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9090:4:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "9100:3:7"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "9105:4:7"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "9096:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9096:14:7"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "9087:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9087:24:7"
                        },
                        "nodeType": "YulIf",
                        "src": "9084:2:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9179:419:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9559:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "9572:5:7"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "9579:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "9568:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9568:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9559:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9154:8:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9164:1:7",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9150:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9150:16:7"
                        },
                        "nodeType": "YulIf",
                        "src": "9147:2:7"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9611:23:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9623:4:7"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9629:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "9619:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9619:15:7"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9611:4:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9647:44:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9682:8:7"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "9659:22:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9659:32:7"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "9647:8:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9000:8:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9010:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8997:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8997:15:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9013:2:7",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8993:3:7",
                    "statements": []
                  },
                  "src": "8989:712:7"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "8887:6:7",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "8895:5:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "8902:8:7",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "8912:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "8920:5:7",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "8927:4:7",
                "type": ""
              }
            ],
            "src": "8859:848:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9779:219:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9789:31:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9815:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9797:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:23:7"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9789:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9829:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9859:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9841:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9841:27:7"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "9829:8:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9878:113:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9908:4:7"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9914:8:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9924:66:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "9887:20:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9887:104:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9878:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9754:4:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9760:8:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9773:5:7",
                "type": ""
              }
            ],
            "src": "9713:285:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10064:1013:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10259:20:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10261:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10270:1:7",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10261:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10272:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10249:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10242:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10242:16:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10239:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10304:20:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10306:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10315:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10306:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10317:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10298:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10291:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10291:12:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10288:2:7"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10434:20:7",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10436:10:7",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10445:1:7",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10436:5:7"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10447:5:7"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10427:27:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10432:1:7",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10478:176:7",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10513:22:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10515:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10515:18:7"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10515:18:7"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10498:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10508:3:7",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10495:2:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10495:17:7"
                            },
                            "nodeType": "YulIf",
                            "src": "10492:2:7"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "10548:25:7",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10561:1:7",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10564:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "10557:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10557:16:7"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10548:5:7"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10604:22:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10606:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10606:18:7"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10606:18:7"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "10592:5:7"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "10599:3:7"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10589:2:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10589:14:7"
                            },
                            "nodeType": "YulIf",
                            "src": "10586:2:7"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10639:5:7"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10463:191:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10468:1:7",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10384:4:7"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10377:277:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10786:123:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10800:28:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10813:4:7"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10819:8:7"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "10809:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10809:19:7"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10800:5:7"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10859:22:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10861:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10861:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10861:18:7"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "10847:5:7"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "10854:3:7"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10844:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10844:14:7"
                        },
                        "nodeType": "YulIf",
                        "src": "10841:2:7"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10894:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10689:4:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10695:2:7",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10686:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10686:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "10703:8:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10713:2:7",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10700:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10700:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10682:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10682:35:7"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10738:4:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10744:3:7",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10735:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10735:13:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "10753:8:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10763:2:7",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10750:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10750:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10731:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10731:36:7"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10666:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10666:111:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10663:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10919:57:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10953:1:7",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10956:4:7"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10962:8:7"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "10972:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "10934:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10934:42:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10919:5:7"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "10926:4:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11015:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11017:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11017:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11017:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "10992:5:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "11003:3:7"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11008:4:7"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "10999:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10999:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10989:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10989:25:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10986:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11046:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "11059:5:7"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11066:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11055:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11055:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11046:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10034:4:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10040:8:7",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "10050:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10058:5:7",
                "type": ""
              }
            ],
            "src": "10004:1073:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11130:944:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11140:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11162:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "11145:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11145:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11140:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11173:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11195:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "11178:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11178:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11173:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11384:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11386:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11386:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11386:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11282:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11285:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "11278:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11278:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11293:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11296:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "11289:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11289:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11274:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11274:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "11304:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11311:66:7",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11379:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11307:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11307:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11301:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11301:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11270:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11270:113:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11267:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11595:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11597:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11597:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11597:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11491:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11494:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "11487:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11487:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11502:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11505:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11498:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11498:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11483:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11483:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11514:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11522:66:7",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11590:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "11517:4:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11517:75:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11510:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11510:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11479:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11479:115:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11476:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11806:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11808:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11808:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11808:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11702:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11705:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11698:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11698:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11713:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11716:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "11709:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11709:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11694:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11694:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "11725:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11733:66:7",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11801:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "11728:4:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11728:75:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11721:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11721:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11690:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11690:115:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11687:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12016:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12018:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12018:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12018:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11912:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11915:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11908:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11908:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11923:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11926:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11919:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11919:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11904:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11904:25:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "11935:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11943:66:7",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12011:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "11938:4:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11938:75:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11931:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11931:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11900:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11900:115:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11897:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12048:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12063:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12066:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12059:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12059:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12048:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11113:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11116:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11122:7:7",
                "type": ""
              }
            ],
            "src": "11083:991:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12128:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12138:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12161:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12143:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12143:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12138:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12172:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12195:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12177:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12177:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12172:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12370:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12372:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12372:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12372:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12282:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12275:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12275:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12268:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12268:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12290:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12297:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12365:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12293:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12293:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12287:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12287:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12264:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12264:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12261:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12402:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12417:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12420:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12413:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12413:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12402:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12111:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12114:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12120:7:7",
                "type": ""
              }
            ],
            "src": "12080:348:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12479:146:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12489:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12512:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12494:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12494:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12489:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12523:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12546:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12528:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12528:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12523:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12570:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12572:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12572:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12572:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12564:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12567:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12561:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12561:8:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12558:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12602:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12614:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12617:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12610:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12610:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12602:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12465:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12468:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12474:4:7",
                "type": ""
              }
            ],
            "src": "12434:191:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12674:142:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12684:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12705:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "12689:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12689:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12684:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12716:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12737:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "12721:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12721:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12716:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12761:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12763:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12763:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12763:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12755:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12758:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12752:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12752:8:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12749:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12793:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12805:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12808:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12801:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12801:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12793:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12660:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12663:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12669:4:7",
                "type": ""
              }
            ],
            "src": "12631:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12867:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12877:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12906:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12888:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12888:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12877:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12849:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12859:7:7",
                "type": ""
              }
            ],
            "src": "12822:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12966:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12976:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13001:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12994:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12994:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12987:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12987:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12976:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12948:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12958:7:7",
                "type": ""
              }
            ],
            "src": "12924:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13078:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13088:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13117:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "13099:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13099:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13088:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13060:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13070:7:7",
                "type": ""
              }
            ],
            "src": "13020:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13194:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13204:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13233:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "13215:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13215:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13204:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$669",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13176:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13186:7:7",
                "type": ""
              }
            ],
            "src": "13135:110:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13295:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13305:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13316:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13305:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13277:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13287:7:7",
                "type": ""
              }
            ],
            "src": "13251:76:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13378:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13388:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13403:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13410:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13399:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13399:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13388:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13360:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13370:7:7",
                "type": ""
              }
            ],
            "src": "13333:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13510:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13520:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13531:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13520:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13492:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13502:7:7",
                "type": ""
              }
            ],
            "src": "13465:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13591:43:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13601:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13616:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13623:4:7",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13612:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13612:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13601:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13573:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13583:7:7",
                "type": ""
              }
            ],
            "src": "13548:86:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13684:61:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13694:45:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13709:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13716:22:7",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13705:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13705:34:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13694:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13666:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13676:7:7",
                "type": ""
              }
            ],
            "src": "13640:105:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13779:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13796:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13799:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13789:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13789:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13789:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13893:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13896:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13886:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13886:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13886:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13917:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13920:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13910:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13910:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13910:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13751:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13965:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13982:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13985:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13975:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13975:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13975:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14079:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14082:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14072:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14072:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14072:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14103:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14106:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14096:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14096:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14096:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "13937:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14174:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14184:34:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14209:1:7",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14212:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "14205:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14205:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "14184:8:7"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14155:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "14165:8:7",
                "type": ""
              }
            ],
            "src": "14123:102:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14274:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14331:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14340:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14343:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14333:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14333:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14333:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14297:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14322:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "14304:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14304:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14294:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14294:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14287:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14287:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14284:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14267:5:7",
                "type": ""
              }
            ],
            "src": "14231:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14399:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14453:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14462:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14465:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14455:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14455:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14455:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14422:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14444:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14429:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14429:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14419:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14419:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14412:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14412:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14409:2:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14392:5:7",
                "type": ""
              }
            ],
            "src": "14359:116:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14537:92:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14607:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14616:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14619:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14609:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14609:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14609:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14560:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14598:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$591",
                              "nodeType": "YulIdentifier",
                              "src": "14567:30:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14567:37:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14557:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14557:48:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14550:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14550:56:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14547:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$591",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14530:5:7",
                "type": ""
              }
            ],
            "src": "14481:148:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14692:93:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14763:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14772:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14775:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14765:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14765:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14765:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14715:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14754:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$669",
                              "nodeType": "YulIdentifier",
                              "src": "14722:31:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14722:38:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14712:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14712:49:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14705:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14705:57:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14702:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$669",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14685:5:7",
                "type": ""
              }
            ],
            "src": "14635:150:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14833:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14889:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14898:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14901:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14891:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14891:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14891:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14856:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14880:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "14863:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14863:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14853:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14853:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14846:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14846:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14843:2:7"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14826:5:7",
                "type": ""
              }
            ],
            "src": "14791:120:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14960:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15017:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15026:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15029:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15019:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15019:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15019:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14983:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15008:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "14990:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14990:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14980:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14980:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14973:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14973:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14970:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14953:5:7",
                "type": ""
              }
            ],
            "src": "14917:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15086:77:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15141:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15150:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15153:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15143:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15143:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15143:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15109:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15132:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "15116:15:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15116:22:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15106:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15106:33:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15099:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15099:41:7"
                  },
                  "nodeType": "YulIf",
                  "src": "15096:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15079:5:7",
                "type": ""
              }
            ],
            "src": "15045:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15211:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15267:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15276:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15279:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15269:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15269:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15269:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15234:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15258:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "15241:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15241:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15231:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15231:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15224:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15224:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "15221:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15204:5:7",
                "type": ""
              }
            ],
            "src": "15169:120:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$591(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC20_$591(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$669(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$669(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$591(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$591(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$669t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$669(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$669t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$669(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n\n        mstore(add(pos, 0), \"amount too high\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"invalid block number\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ERC20_$591(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$669(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$591(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$591(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$669(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$669(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "327:5361:6:-:0;;;407:1;391:17;;724:117;;;;;;;;;;781:4;769:17;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;742:24;;:44;;;;;;;;;;;;;;;;;;802:24;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;790:9;;:47;;;;;;;;;;;;;;;;;;327:5361;;;;;;;;;;:::o;7:139:7:-;;93:6;87:13;78:22;;109:31;134:5;109:31;:::i;:::-;68:78;;;;:::o;152:280::-;;269:2;257:9;248:7;244:23;240:32;237:2;;;285:1;282;275:12;237:2;328:1;353:62;407:7;398:6;387:9;383:22;353:62;:::i;:::-;343:72;;299:126;227:205;;;;:::o;438:153::-;536:48;578:5;536:48;:::i;:::-;531:3;524:61;514:77;;:::o;597:244::-;;739:2;728:9;724:18;716:26;;752:82;831:1;820:9;816:17;807:6;752:82;:::i;:::-;706:135;;;;:::o;847:77::-;;913:5;902:16;;892:32;;;:::o;930:86::-;;1005:4;998:5;994:16;983:27;;973:43;;;:::o;1022:124::-;;1116:24;1134:5;1116:24;:::i;:::-;1103:37;;1093:53;;;:::o;1152:118::-;1223:22;1239:5;1223:22;:::i;:::-;1216:5;1213:33;1203:2;;1260:1;1257;1250:12;1203:2;1193:77;:::o;327:5361:6:-;;;;;;;",
  "deployedSourceMap": "327:5361:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4227:733;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1041:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3179:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;918:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5154:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4227:733;4327:6;710:1;705;:6;;697:15;;;;;;4372:1:::1;4346:28;;4354:5;4346:28;;;;4339:36;;;;;;;;;;;;4417:1;4386:33;;4394:10;4386:33;;;;4379:41;;;;;;;;;;;;4459:16;4478:9;:21;4488:10;4478:21;;;;;;;;;;;;;;;:37;4508:5;4478:37;;;;;;;;;;;;;;;4459:56;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4619:6;4590:9;:25;4608:5;4590:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;4749:30;4763:10;4775:3;4749:13;:30::i;:::-;4831:6;4783:9;:21;4793:10;4783:21;;;;;;;;;;;;;;;:37;4813:5;4783:37;;;;;;;;;;;;;;;:44;;;:54;;;;;;;:::i;:::-;;;;;;;;4903:5;:18;;;4922:10;4942:4;4949:6;4903:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;716:1;4227:733:::0;;;;:::o;1041:142::-;1114:7;1135:9;:21;1145:10;1135:21;;;;;;;;;;;;;;;:37;1165:5;1135:37;;;;;;;;;;;;;;;:44;;;1128:51;;1041:142;;;:::o;3179:199::-;3265:6;3278:16;3297:9;:21;3307:10;3297:21;;;;;;;;;;;;;;;:37;3327:5;3297:37;;;;;;;;;;;;;;;3278:56;;;;;;;;;;;;;;;;;;;;;;;;;;;3345:29;3358:3;3363:10;3345:12;:29::i;:::-;3338:36;;;3179:199;;;;:::o;918:120::-;968:7;988:24;;;;;;;;;;;:34;;;1023:10;988:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:53;;918:120;:::o;5154:532::-;5256:6;710:1;705;:6;;697:15;;;;;;5302:1:::1;5276:28;;5284:5;5276:28;;;;5268:37;;;::::0;::::1;;5348:1;5317:33;;5325:10;5317:33;;;;5309:42;;;::::0;::::1;;5391:16;5410:9;:21;5420:10;5410:21;;;;;;;;;;;;;;;:37;5440:5;5410:37;;;;;;;;;;;;;;;5391:56;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;5508:6;5494:3;:10;;;:20;;5486:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5571:30;5585:10;5597:3;5571:13;:30::i;:::-;5619:6;5605:3;:10;;:20;;;;;;;:::i;:::-;;;;;;::::0;::::1;5629:5;:18;;;5656:4;5663:10;5675:6;5629:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;716:1;5154:532:::0;;;;:::o;3550:466::-;3624:12;3639:29;3652:3;3657:10;3639:12;:29::i;:::-;3624:44;;3684:1;3676:5;:9;3672:24;;;3695:1;3687:9;;3672:24;3790:12;3754:9;:21;3764:10;3754:21;;;;;;;;;;;;;;;:33;;:48;;;;3824:12;3806:3;:15;;:30;;;;;3888:1;3879:5;:10;3875:138;;3936:5;3896:9;:21;3906:10;3896:21;;;;;;;;;;;;;;;:28;;;:46;;;;;;;:::i;:::-;;;;;;;;3947:24;;;;;;;;;;:33;;;3981:10;4001:5;3947:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3875:138;3550:466;;;:::o;2430:574::-;2519:6;2568:12;2612:10;2590:53;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2565:80;;;;;;2649:19;2693:10;2671:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2649:66;;2820:9;;;;;;;;;;;2803:26;;:13;:26;;;2799:149;;2904:43;2915:5;2922:13;2937:9;;;;;;;;;;;2904:10;:43::i;:::-;2885:5;2865:12;2873:3;2865:7;:12::i;:::-;2852:3;:10;;;:25;;;;:::i;:::-;2845:45;;;;:::i;:::-;:103;;;;:::i;:::-;2834:114;;;;;;2799:149;2995:5;2979:12;2987:3;2979:7;:12::i;:::-;2966:3;:10;;;:25;;;;:::i;:::-;2959:41;;;;:::i;:::-;2952:48;;;;2430:574;;;;;:::o;1265:493::-;1371:6;1543:9;1526:26;;:14;:26;;;1522:216;;;1606:14;1594:9;:26;;;;:::i;:::-;1586:35;;1582:2;:39;;;;:::i;:::-;1566:6;:56;;;;:::i;:::-;1559:63;;;;1522:216;1654:9;1637:26;;:14;:26;;;1633:105;;;1722:9;1705:14;:26;;;;:::i;:::-;1697:35;;1693:2;:39;;;;:::i;:::-;1677:6;:56;;;;:::i;:::-;1670:63;;;;1633:105;1748:6;1741:13;;1265:493;;;;;;:::o;1883:377::-;1941:7;1977:3;:15;;;1962:12;:30;1954:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2243:6;2221:5;;2202:3;:15;;;2187:12;:30;;;;:::i;:::-;2179:47;;;;:::i;:::-;2178:72;;;;:::i;:::-;2154:102;;1883:377;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:165::-;;392:6;379:20;370:29;;408:46;448:5;408:46;:::i;:::-;360:100;;;;:::o;466:167::-;;564:6;551:20;542:29;;580:47;621:5;580:47;:::i;:::-;532:101;;;;:::o;639:141::-;;726:6;720:13;711:22;;742:32;768:5;742:32;:::i;:::-;701:79;;;;:::o;786:139::-;;870:6;857:20;848:29;;886:33;913:5;886:33;:::i;:::-;838:87;;;;:::o;931:143::-;;1019:6;1013:13;1004:22;;1035:33;1062:5;1035:33;:::i;:::-;994:80;;;;:::o;1080:141::-;;1167:6;1161:13;1152:22;;1183:32;1209:5;1183:32;:::i;:::-;1142:79;;;;:::o;1227:139::-;;1313:6;1307:13;1298:22;;1329:31;1354:5;1329:31;:::i;:::-;1288:78;;;;:::o;1372:278::-;;1488:2;1476:9;1467:7;1463:23;1459:32;1456:2;;;1504:1;1501;1494:12;1456:2;1547:1;1572:61;1625:7;1616:6;1605:9;1601:22;1572:61;:::i;:::-;1562:71;;1518:125;1446:204;;;;:::o;1656:288::-;;1777:2;1765:9;1756:7;1752:23;1748:32;1745:2;;;1793:1;1790;1783:12;1745:2;1836:1;1861:66;1919:7;1910:6;1899:9;1895:22;1861:66;:::i;:::-;1851:76;;1807:130;1735:209;;;;:::o;1950:435::-;;;2089:2;2077:9;2068:7;2064:23;2060:32;2057:2;;;2105:1;2102;2095:12;2057:2;2148:1;2173:67;2232:7;2223:6;2212:9;2208:22;2173:67;:::i;:::-;2163:77;;2119:131;2289:2;2315:53;2360:7;2351:6;2340:9;2336:22;2315:53;:::i;:::-;2305:63;;2260:118;2047:338;;;;;:::o;2391:580::-;;;;2547:2;2535:9;2526:7;2522:23;2518:32;2515:2;;;2563:1;2560;2553:12;2515:2;2606:1;2631:67;2690:7;2681:6;2670:9;2666:22;2631:67;:::i;:::-;2621:77;;2577:131;2747:2;2773:53;2818:7;2809:6;2798:9;2794:22;2773:53;:::i;:::-;2763:63;;2718:118;2875:2;2901:53;2946:7;2937:6;2926:9;2922:22;2901:53;:::i;:::-;2891:63;;2846:118;2505:466;;;;;:::o;2977:284::-;;3096:2;3084:9;3075:7;3071:23;3067:32;3064:2;;;3112:1;3109;3102:12;3064:2;3155:1;3180:64;3236:7;3227:6;3216:9;3212:22;3180:64;:::i;:::-;3170:74;;3126:128;3054:207;;;;:::o;3267:904::-;;;;;;3451:3;3439:9;3430:7;3426:23;3422:33;3419:2;;;3468:1;3465;3458:12;3419:2;3511:1;3536:63;3591:7;3582:6;3571:9;3567:22;3536:63;:::i;:::-;3526:73;;3482:127;3648:2;3674:63;3729:7;3720:6;3709:9;3705:22;3674:63;:::i;:::-;3664:73;;3619:128;3786:2;3812:64;3868:7;3859:6;3848:9;3844:22;3812:64;:::i;:::-;3802:74;;3757:129;3925:2;3951:64;4007:7;3998:6;3987:9;3983:22;3951:64;:::i;:::-;3941:74;;3896:129;4064:3;4091:63;4146:7;4137:6;4126:9;4122:22;4091:63;:::i;:::-;4081:73;;4035:129;3409:762;;;;;;;;:::o;4177:280::-;;4294:2;4282:9;4273:7;4269:23;4265:32;4262:2;;;4310:1;4307;4300:12;4262:2;4353:1;4378:62;4432:7;4423:6;4412:9;4408:22;4378:62;:::i;:::-;4368:72;;4324:126;4252:205;;;;:::o;4463:118::-;4550:24;4568:5;4550:24;:::i;:::-;4545:3;4538:37;4528:53;;:::o;4587:115::-;4672:23;4689:5;4672:23;:::i;:::-;4667:3;4660:36;4650:52;;:::o;4708:313::-;;4871:67;4935:2;4930:3;4871:67;:::i;:::-;4864:74;;4968:17;4964:1;4959:3;4955:11;4948:38;5012:2;5007:3;5003:12;4996:19;;4854:167;;;:::o;5027:318::-;;5190:67;5254:2;5249:3;5190:67;:::i;:::-;5183:74;;5287:22;5283:1;5278:3;5274:11;5267:43;5336:2;5331:3;5327:12;5320:19;;5173:172;;;:::o;5351:118::-;5438:24;5456:5;5438:24;:::i;:::-;5433:3;5426:37;5416:53;;:::o;5475:222::-;;5606:2;5595:9;5591:18;5583:26;;5619:71;5687:1;5676:9;5672:17;5663:6;5619:71;:::i;:::-;5573:124;;;;:::o;5703:442::-;;5890:2;5879:9;5875:18;5867:26;;5903:71;5971:1;5960:9;5956:17;5947:6;5903:71;:::i;:::-;5984:72;6052:2;6041:9;6037:18;6028:6;5984:72;:::i;:::-;6066;6134:2;6123:9;6119:18;6110:6;6066:72;:::i;:::-;5857:288;;;;;;:::o;6151:332::-;;6310:2;6299:9;6295:18;6287:26;;6323:71;6391:1;6380:9;6376:17;6367:6;6323:71;:::i;:::-;6404:72;6472:2;6461:9;6457:18;6448:6;6404:72;:::i;:::-;6277:206;;;;;:::o;6489:218::-;;6618:2;6607:9;6603:18;6595:26;;6631:69;6697:1;6686:9;6682:17;6673:6;6631:69;:::i;:::-;6585:122;;;;:::o;6713:419::-;;6917:2;6906:9;6902:18;6894:26;;6966:9;6960:4;6956:20;6952:1;6941:9;6937:17;6930:47;6994:131;7120:4;6994:131;:::i;:::-;6986:139;;6884:248;;;:::o;7138:419::-;;7342:2;7331:9;7327:18;7319:26;;7391:9;7385:4;7381:20;7377:1;7366:9;7362:17;7355:47;7419:131;7545:4;7419:131;:::i;:::-;7411:139;;7309:248;;;:::o;7563:222::-;;7694:2;7683:9;7679:18;7671:26;;7707:71;7775:1;7764:9;7760:17;7751:6;7707:71;:::i;:::-;7661:124;;;;:::o;7791:169::-;;7909:6;7904:3;7897:19;7949:4;7944:3;7940:14;7925:29;;7887:73;;;;:::o;7966:305::-;;8025:20;8043:1;8025:20;:::i;:::-;8020:25;;8059:20;8077:1;8059:20;:::i;:::-;8054:25;;8213:1;8145:66;8141:74;8138:1;8135:81;8132:2;;;8219:18;;:::i;:::-;8132:2;8263:1;8260;8256:9;8249:16;;8010:261;;;;:::o;8277:385::-;;8333:19;8350:1;8333:19;:::i;:::-;8328:24;;8366:19;8383:1;8366:19;:::i;:::-;8361:24;;8404:1;8394:2;;8409:18;;:::i;:::-;8394:2;8595:1;8592;8588:9;8585:1;8582:16;8501:66;8498:1;8495:73;8478:130;8475:2;;;8611:18;;:::i;:::-;8475:2;8654:1;8651;8646:10;8641:15;;8318:344;;;;:::o;8668:185::-;;8725:20;8743:1;8725:20;:::i;:::-;8720:25;;8759:20;8777:1;8759:20;:::i;:::-;8754:25;;8798:1;8788:2;;8803:18;;:::i;:::-;8788:2;8845:1;8842;8838:9;8833:14;;8710:143;;;;:::o;8859:848::-;;;8951:6;8942:15;;8975:5;8966:14;;8989:712;9010:1;9000:8;8997:15;8989:712;;;9105:4;9100:3;9096:14;9090:4;9087:24;9084:2;;;9114:18;;:::i;:::-;9084:2;9164:1;9154:8;9150:16;9147:2;;;9579:4;9572:5;9568:16;9559:25;;9147:2;9629:4;9623;9619:15;9611:23;;9659:32;9682:8;9659:32;:::i;:::-;9647:44;;8989:712;;;8932:775;;;;;;;:::o;9713:285::-;;9797:23;9815:4;9797:23;:::i;:::-;9789:31;;9841:27;9859:8;9841:27;:::i;:::-;9829:39;;9887:104;9924:66;9914:8;9908:4;9887:104;:::i;:::-;9878:113;;9779:219;;;;:::o;10004:1073::-;;10249:8;10239:2;;10270:1;10261:10;;10272:5;;10239:2;10298:4;10288:2;;10315:1;10306:10;;10317:5;;10288:2;10384:4;10432:1;10427:27;;;;10468:1;10463:191;;;;10377:277;;10427:27;10445:1;10436:10;;10447:5;;;10463:191;10508:3;10498:8;10495:17;10492:2;;;10515:18;;:::i;:::-;10492:2;10564:8;10561:1;10557:16;10548:25;;10599:3;10592:5;10589:14;10586:2;;;10606:18;;:::i;:::-;10586:2;10639:5;;;10377:277;;10763:2;10753:8;10750:16;10744:3;10738:4;10735:13;10731:36;10713:2;10703:8;10700:16;10695:2;10689:4;10686:12;10682:35;10666:111;10663:2;;;10819:8;10813:4;10809:19;10800:28;;10854:3;10847:5;10844:14;10841:2;;;10861:18;;:::i;:::-;10841:2;10894:5;;10663:2;10934:42;10972:3;10962:8;10956:4;10953:1;10934:42;:::i;:::-;10919:57;;;;11008:4;11003:3;10999:14;10992:5;10989:25;10986:2;;;11017:18;;:::i;:::-;10986:2;11066:4;11059:5;11055:16;11046:25;;10064:1013;;;;;;:::o;11083:991::-;;11145:19;11162:1;11145:19;:::i;:::-;11140:24;;11178:19;11195:1;11178:19;:::i;:::-;11173:24;;11379:1;11311:66;11307:74;11304:1;11301:81;11296:1;11293;11289:9;11285:1;11282;11278:9;11274:25;11270:113;11267:2;;;11386:18;;:::i;:::-;11267:2;11590:1;11522:66;11517:75;11514:1;11510:83;11505:1;11502;11498:9;11494:1;11491;11487:9;11483:25;11479:115;11476:2;;;11597:18;;:::i;:::-;11476:2;11801:1;11733:66;11728:75;11725:1;11721:83;11716:1;11713;11709:9;11705:1;11702;11698:9;11694:25;11690:115;11687:2;;;11808:18;;:::i;:::-;11687:2;12011:1;11943:66;11938:75;11935:1;11931:83;11926:1;11923;11919:9;11915:1;11912;11908:9;11904:25;11900:115;11897:2;;;12018:18;;:::i;:::-;11897:2;12066:1;12063;12059:9;12048:20;;11130:944;;;;:::o;12080:348::-;;12143:20;12161:1;12143:20;:::i;:::-;12138:25;;12177:20;12195:1;12177:20;:::i;:::-;12172:25;;12365:1;12297:66;12293:74;12290:1;12287:81;12282:1;12275:9;12268:17;12264:105;12261:2;;;12372:18;;:::i;:::-;12261:2;12420:1;12417;12413:9;12402:20;;12128:300;;;;:::o;12434:191::-;;12494:20;12512:1;12494:20;:::i;:::-;12489:25;;12528:20;12546:1;12528:20;:::i;:::-;12523:25;;12567:1;12564;12561:8;12558:2;;;12572:18;;:::i;:::-;12558:2;12617:1;12614;12610:9;12602:17;;12479:146;;;;:::o;12631:185::-;;12689:18;12705:1;12689:18;:::i;:::-;12684:23;;12721:18;12737:1;12721:18;:::i;:::-;12716:23;;12758:1;12755;12752:8;12749:2;;;12763:18;;:::i;:::-;12749:2;12808:1;12805;12801:9;12793:17;;12674:142;;;;:::o;12822:96::-;;12888:24;12906:5;12888:24;:::i;:::-;12877:35;;12867:51;;;:::o;12924:90::-;;13001:5;12994:13;12987:21;12976:32;;12966:48;;;:::o;13020:109::-;;13099:24;13117:5;13099:24;:::i;:::-;13088:35;;13078:51;;;:::o;13135:110::-;;13215:24;13233:5;13215:24;:::i;:::-;13204:35;;13194:51;;;:::o;13251:76::-;;13316:5;13305:16;;13295:32;;;:::o;13333:126::-;;13410:42;13403:5;13399:54;13388:65;;13378:81;;;:::o;13465:77::-;;13531:5;13520:16;;13510:32;;;:::o;13548:86::-;;13623:4;13616:5;13612:16;13601:27;;13591:43;;;:::o;13640:105::-;;13716:22;13709:5;13705:34;13694:45;;13684:61;;;:::o;13751:180::-;13799:77;13796:1;13789:88;13896:4;13893:1;13886:15;13920:4;13917:1;13910:15;13937:180;13985:77;13982:1;13975:88;14082:4;14079:1;14072:15;14106:4;14103:1;14096:15;14123:102;;14212:5;14209:1;14205:13;14184:34;;14174:51;;;:::o;14231:122::-;14304:24;14322:5;14304:24;:::i;:::-;14297:5;14294:35;14284:2;;14343:1;14340;14333:12;14284:2;14274:79;:::o;14359:116::-;14429:21;14444:5;14429:21;:::i;:::-;14422:5;14419:32;14409:2;;14465:1;14462;14455:12;14409:2;14399:76;:::o;14481:148::-;14567:37;14598:5;14567:37;:::i;:::-;14560:5;14557:48;14547:2;;14619:1;14616;14609:12;14547:2;14537:92;:::o;14635:150::-;14722:38;14754:5;14722:38;:::i;:::-;14715:5;14712:49;14702:2;;14775:1;14772;14765:12;14702:2;14692:93;:::o;14791:120::-;14863:23;14880:5;14863:23;:::i;:::-;14856:5;14853:34;14843:2;;14901:1;14898;14891:12;14843:2;14833:78;:::o;14917:122::-;14990:24;15008:5;14990:24;:::i;:::-;14983:5;14980:35;14970:2;;15029:1;15026;15019:12;14970:2;14960:79;:::o;15045:118::-;15116:22;15132:5;15116:22;:::i;:::-;15109:5;15106:33;15096:2;;15153:1;15150;15143:12;15096:2;15086:77;:::o;15169:120::-;15241:23;15258:5;15241:23;:::i;:::-;15234:5;15231:34;15221:2;;15279:1;15276;15269:12;15221:2;15211:78;:::o",
  "source": "// SPDX-License-Identifier:MIT\n\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./FBMoney.sol\";\n\nstruct Stake {\n\tuint256 dateOfValue;\n\tuint256 amount;\n}\nstruct Bonus {\n\tuint256 amount;\n\tuint256 dateOfValue;\n}\n\ncontract FBStaker {\n\tFBMoney private _FrenchBorgTokenProvider;\n\tuint256 _Rate = 1;\n\tuint8 _Decimals;\n\n\tmapping(address => mapping(address => Stake)) stakeList; // Liste des stakes en cours\n\tmapping(address => Bonus) bonusList; // List des bonus par utilisateur\n\tmapping(address => uint256) tokenPool; // List des tokens récupérés\n\n\tmodifier notNull256(uint256 v) {\n\t\trequire(v != 0);\n\t\t_;\n\t}\n\n\tconstructor() {\n\t\t_FrenchBorgTokenProvider = new FBMoney(1000);\n\t\t_Decimals = _FrenchBorgTokenProvider.decimals();\n\t}\n\n\t/**\n\t * @dev Returns the balance of our home made token for bonuses\n\t */\n\tfunction getMoneyBalance() external view returns (uint256) {\n\t\treturn _FrenchBorgTokenProvider.balanceOf(msg.sender);\n\t}\n\n\tfunction getTokenStakedBalance(ERC20 Token)\n\t\texternal\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\treturn stakeList[msg.sender][address(Token)].amount;\n\t}\n\n\t/**\n\t * @dev Make money compatibles if they don't have the same Decimals\n\t */\n\tfunction scalePrice(\n\t\tint256 _price,\n\t\tuint8 _priceDecimals,\n\t\tuint8 _decimals\n\t) internal pure returns (int256) {\n\t\t// provient de https://docs.chain.link/docs/get-the-latest-price/\n\t\t// permet d'adapter les prix en fctn des decimales de chaque monnaie\n\t\tif (_priceDecimals < _decimals) {\n\t\t\treturn _price * int256(10**uint256(_decimals - _priceDecimals));\n\t\t} else if (_priceDecimals > _decimals) {\n\t\t\treturn _price / int256(10**uint256(_priceDecimals - _decimals));\n\t\t}\n\t\treturn _price;\n\t}\n\n\t/**\n\t * @dev Retourne le ratio temporel en utilisant le delta des blocks\n\t * @param Stk Current stake for customers\n\t */\n\tfunction getRate(Stake memory Stk) internal view returns (uint256) {\n\t\trequire(block.number > Stk.dateOfValue, \"invalid block number\");\n\t\t// _Rate vaut 1, parité avec ethereum\n\t\t// 152470 = 30 * 24 * 60 * 60 / 17\n\t\t// return Delta Block * Taux par mois / BlockParMois\n\t\treturn\n\t\t\tuint256(\n\t\t\t\t((uint256(block.number - Stk.dateOfValue) * _Rate) /\n\t\t\t\t\tuint256(152470))\n\t\t\t);\n\t}\n\n\t/**\n\t * @dev Given a stake, returns the value of potential bonuses\n\t * @param Stk Current stake for customers\n\t * @param Aggregator used for getting Token value\n\t */\n\tfunction computeBonus(Stake memory Stk, address Aggregator)\n\t\tinternal\n\t\tview\n\t\treturns (int256)\n\t{\n\t\t// On récupere le prix en ETH\n\t\t(, int256 ratio, , , ) = AggregatorV3Interface(Aggregator)\n\t\t\t.latestRoundData();\n\t\tuint8 tokenDecimals = AggregatorV3Interface(Aggregator).decimals();\n\t\t// On remet a l'echelle en fonction des decimales de chaque monnaie si besoin\n\t\tif (tokenDecimals != _Decimals)\n\t\t\treturn\n\t\t\t\tint256(Stk.amount * getRate(Stk)) *\n\t\t\t\tratio *\n\t\t\t\tint256(scalePrice(ratio, tokenDecimals, _Decimals));\n\t\treturn int256(Stk.amount * getRate(Stk)) * ratio;\n\t}\n\n\t/**\n\t * @dev Querying current status of staking - external funk\n\t * @param Token Token staked by customers\n\t * @param Aggregator Provided by JS for evaluating values\n\t */\n\tfunction evaluateBonus(IERC20 Token, address Aggregator)\n\t\texternal\n\t\tview\n\t\treturns (int256)\n\t{\n\t\tStake memory Stk = stakeList[msg.sender][address(Token)];\n\t\treturn computeBonus(Stk, Aggregator);\n\t}\n\n\t/**\n\t * @dev Internal function for evaluating and retrieving Bonuses\n\t * @param Stk Current stake for customers\n\t * @param Aggregator used for getting Token value\n\t */\n\tfunction retrieveBonus(address Aggregator, Stake memory Stk) internal {\n\t\tint256 bonus = computeBonus(Stk, Aggregator);\n\t\tif (bonus < 0) bonus = 0;\n\n\t\t// Remember we are retrieving, for next evaluation\n\t\tbonusList[msg.sender].dateOfValue = block.number;\n\t\tStk.dateOfValue = block.number;\n\n\t\t// Transfer Bonuses to customer\n\t\tif (bonus != 0) {\n\t\t\tbonusList[msg.sender].amount += uint256(bonus);\n\t\t\t_FrenchBorgTokenProvider.transfer(msg.sender, uint256(bonus));\n\t\t}\n\t}\n\n\t/**\n\t * @dev Stake swap some tokens for our money token\n\t * @param Token customer's Token\n\t * @param amount amount of customer's token to Stake\n\t * @param Aggregator Provided by JS for the correct PAIR\n\t */\n\tfunction StakeTokens(\n\t\tIERC20 Token,\n\t\tuint256 amount,\n\t\taddress Aggregator\n\t) external notNull256(amount) {\n\t\tassert(address(Token) != address(0));\n\t\tassert(address(Aggregator) != address(0));\n\t\t// Trouve la reference du client\n\t\tStake memory Stk = stakeList[msg.sender][address(Token)];\n\n\t\t// On mémorise la quantité par token, pour utilisation eventuelle\n\t\ttokenPool[address(Token)] += amount;\n\n\t\t// Compute and transfer Bonus\n\t\t//Le stake n'est peut etre pas vide, aussi on doit d'abord mettre a jour les bonuses\n\t\tretrieveBonus(Aggregator, Stk);\n\t\tstakeList[msg.sender][address(Token)].amount += amount;\n\t\t// Transfer the tokens, supposing the approve has been done\n\t\tToken.transferFrom(msg.sender, address(this), amount);\n\t}\n\n\t/**\n\t * @dev Unstake the staked tokens\n\t * @param Token customer's Token\n\t * @param amount amount of customer's token to Stake\n\t * @param Aggregator Provided by JS for the correct PAIR\n\t */\n\tfunction UnstakeTokens(\n\t\tIERC20 Token,\n\t\tuint256 amount,\n\t\taddress Aggregator\n\t) external notNull256(amount) {\n\t\trequire(address(Token) != address(0));\n\t\trequire(address(Aggregator) != address(0));\n\n\t\t// Trouve la reference du client\n\t\tStake memory Stk = stakeList[msg.sender][address(Token)];\n\t\t// On essai de retirer de trop ?\n\t\trequire(Stk.amount >= amount, \"amount too high\");\n\n\t\t// Compute and transfer Bonus\n\t\tretrieveBonus(Aggregator, Stk);\n\t\tStk.amount -= amount;\n\t\tToken.transferFrom(address(this), msg.sender, amount);\n\t}\n}\n",
  "sourcePath": "/home/pec/Formation/Ethereum/Staking/contracts/FBStaker.sol",
  "ast": {
    "absolutePath": "project:/contracts/FBStaker.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Bonus": [
        762
      ],
      "Context": [
        716
      ],
      "ERC20": [
        591
      ],
      "FBMoney": [
        747
      ],
      "FBStaker": [
        1280
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "Stake": [
        757
      ]
    },
    "id": 1281,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 749,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 750,
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 592,
        "src": "56:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 46,
        "src": "112:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FBMoney.sol",
        "file": "./FBMoney.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 748,
        "src": "189:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Stake",
        "id": 757,
        "members": [
          {
            "constant": false,
            "id": 754,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "230:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 756,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "252:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "252:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Stake",
        "nodeType": "StructDefinition",
        "scope": 1281,
        "src": "214:55:6",
        "visibility": "public"
      },
      {
        "canonicalName": "Bonus",
        "id": 762,
        "members": [
          {
            "constant": false,
            "id": 759,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "286:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 758,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 761,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "303:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Bonus",
        "nodeType": "StructDefinition",
        "scope": 1281,
        "src": "270:55:6",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          747
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1280,
        "linearizedBaseContracts": [
          1280
        ],
        "name": "FBStaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 765,
            "mutability": "mutable",
            "name": "_FrenchBorgTokenProvider",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "348:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FBMoney_$747",
              "typeString": "contract FBMoney"
            },
            "typeName": {
              "id": 764,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 763,
                "name": "FBMoney",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 747,
                "src": "348:7:6"
              },
              "referencedDeclaration": 747,
              "src": "348:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FBMoney_$747",
                "typeString": "contract FBMoney"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 768,
            "mutability": "mutable",
            "name": "_Rate",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "391:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 766,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "391:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 767,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "407:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 770,
            "mutability": "mutable",
            "name": "_Decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "411:15:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 769,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "411:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 777,
            "mutability": "mutable",
            "name": "stakeList",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "430:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Stake))"
            },
            "typeName": {
              "id": 776,
              "keyType": {
                "id": 771,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "438:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "430:45:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Stake))"
              },
              "valueType": {
                "id": 775,
                "keyType": {
                  "id": 772,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "457:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "449:25:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                  "typeString": "mapping(address => struct Stake)"
                },
                "valueType": {
                  "id": 774,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 773,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 757,
                    "src": "468:5:6"
                  },
                  "referencedDeclaration": 757,
                  "src": "468:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                    "typeString": "struct Stake"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 782,
            "mutability": "mutable",
            "name": "bonusList",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "517:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
              "typeString": "mapping(address => struct Bonus)"
            },
            "typeName": {
              "id": 781,
              "keyType": {
                "id": 778,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "525:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "517:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                "typeString": "mapping(address => struct Bonus)"
              },
              "valueType": {
                "id": 780,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 779,
                  "name": "Bonus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 762,
                  "src": "536:5:6"
                },
                "referencedDeclaration": 762,
                "src": "536:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bonus_$762_storage_ptr",
                  "typeString": "struct Bonus"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 786,
            "mutability": "mutable",
            "name": "tokenPool",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "589:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 785,
              "keyType": {
                "id": 783,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "597:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "589:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 784,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "608:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "693:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 791,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "705:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "710:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "705:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "697:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "697:15:6"
                },
                {
                  "id": 796,
                  "nodeType": "PlaceholderStatement",
                  "src": "716:1:6"
                }
              ]
            },
            "id": 798,
            "name": "notNull256",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "682:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:11:6"
            },
            "src": "662:59:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "738:103:6",
              "statements": [
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 801,
                      "name": "_FrenchBorgTokenProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "742:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FBMoney_$747",
                        "typeString": "contract FBMoney"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31303030",
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "781:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "769:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_FBMoney_$747_$",
                          "typeString": "function (uint256) returns (contract FBMoney)"
                        },
                        "typeName": {
                          "id": 803,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 802,
                            "name": "FBMoney",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 747,
                            "src": "773:7:6"
                          },
                          "referencedDeclaration": 747,
                          "src": "773:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        }
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "769:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FBMoney_$747",
                        "typeString": "contract FBMoney"
                      }
                    },
                    "src": "742:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FBMoney_$747",
                      "typeString": "contract FBMoney"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "742:44:6"
                },
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 809,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "790:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 810,
                          "name": "_FrenchBorgTokenProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "802:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "802:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "802:35:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "790:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "790:47:6"
                }
              ]
            },
            "id": 816,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:2:6"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:6"
            },
            "scope": 1280,
            "src": "724:117:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "977:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 824,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1023:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1023:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 822,
                        "name": "_FrenchBorgTokenProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "988:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FBMoney_$747",
                          "typeString": "contract FBMoney"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "988:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 821,
                  "id": 827,
                  "nodeType": "Return",
                  "src": "981:53:6"
                }
              ]
            },
            "documentation": {
              "id": 817,
              "nodeType": "StructuredDocumentation",
              "src": "844:72:6",
              "text": " @dev Returns the balance of our home made token for bonuses"
            },
            "functionSelector": "e2f59ec9",
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMoneyBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:2:6"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "968:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:9:6"
            },
            "scope": 1280,
            "src": "918:120:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "1124:59:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 837,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1135:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 840,
                        "indexExpression": {
                          "expression": {
                            "id": 838,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1145:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1135:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 845,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 843,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "1165:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1157:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1157:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1157:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1135:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 756,
                    "src": "1135:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 836,
                  "id": 847,
                  "nodeType": "Return",
                  "src": "1128:51:6"
                }
              ]
            },
            "functionSelector": "b80f5f89",
            "id": 849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStakedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "1072:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$591",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 831,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 830,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "1072:5:6"
                    },
                    "referencedDeclaration": 591,
                    "src": "1072:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$591",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1071:13:6"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "1114:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:9:6"
            },
            "scope": 1280,
            "src": "1041:142:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "1379:379:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 861,
                      "name": "_priceDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "1526:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 862,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "1543:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1526:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 879,
                        "name": "_priceDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "1637:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 880,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "1654:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "1637:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 897,
                    "nodeType": "IfStatement",
                    "src": "1633:105:6",
                    "trueBody": {
                      "id": 896,
                      "nodeType": "Block",
                      "src": "1665:73:6",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 882,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "1677:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 892,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 885,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1693:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 890,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 888,
                                          "name": "_priceDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 854,
                                          "src": "1705:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 889,
                                          "name": "_decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 856,
                                          "src": "1722:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "1705:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 887,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1697:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 886,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1697:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1697:35:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1693:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1686:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 883,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1686:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1686:47:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "1677:56:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 860,
                          "id": 895,
                          "nodeType": "Return",
                          "src": "1670:63:6"
                        }
                      ]
                    }
                  },
                  "id": 898,
                  "nodeType": "IfStatement",
                  "src": "1522:216:6",
                  "trueBody": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "1554:73:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 864,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 852,
                            "src": "1566:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 867,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1582:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 870,
                                        "name": "_decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 856,
                                        "src": "1594:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 871,
                                        "name": "_priceDecimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 854,
                                        "src": "1606:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "1594:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1586:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 868,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1586:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1586:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1582:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1575:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 865,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1575:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1575:47:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1566:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 860,
                        "id": 877,
                        "nodeType": "Return",
                        "src": "1559:63:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 899,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 852,
                    "src": "1748:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 860,
                  "id": 900,
                  "nodeType": "Return",
                  "src": "1741:13:6"
                }
              ]
            },
            "documentation": {
              "id": 850,
              "nodeType": "StructuredDocumentation",
              "src": "1186:77:6",
              "text": " @dev Make money compatibles if they don't have the same Decimals"
            },
            "id": 902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scalePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1288:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "_priceDecimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1305:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1329:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1284:63:6"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1371:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:8:6"
            },
            "scope": 1280,
            "src": "1265:493:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 941,
              "nodeType": "Block",
              "src": "1950:310:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 912,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1962:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1962:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 914,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1977:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dateOfValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 754,
                          "src": "1977:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1962:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420626c6f636b206e756d626572",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1994:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        },
                        "value": "invalid block number"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1954:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:63:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 928,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 924,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "2187:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "src": "2187:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 926,
                                            "name": "Stk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 906,
                                            "src": "2202:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                              "typeString": "struct Stake memory"
                                            }
                                          },
                                          "id": 927,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "dateOfValue",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 754,
                                          "src": "2202:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2187:30:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 923,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2179:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 922,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2179:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 929,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2179:39:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 930,
                                    "name": "_Rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "2221:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2179:47:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 932,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2178:49:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "313532343730",
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2243:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_152470_by_1",
                                    "typeString": "int_const 152470"
                                  },
                                  "value": "152470"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_152470_by_1",
                                    "typeString": "int_const 152470"
                                  }
                                ],
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2235:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 933,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2235:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2235:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2178:72:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 938,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2177:74:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2164:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2164:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:92:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 910,
                  "id": 940,
                  "nodeType": "Return",
                  "src": "2154:102:6"
                }
              ]
            },
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "1761:120:6",
              "text": " @dev Retourne le ratio temporel en utilisant le delta des blocks\n @param Stk Current stake for customers"
            },
            "id": 942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1900:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "1900:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "1900:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1899:18:6"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1941:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:9:6"
            },
            "scope": 1280,
            "src": "1883:377:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1006,
              "nodeType": "Block",
              "src": "2528:476:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    954,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "2568:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 960,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 956,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "2612:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 955,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2590:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2590:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:80:6"
                },
                {
                  "assignments": [
                    962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 962,
                      "mutability": "mutable",
                      "name": "tokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "2649:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 961,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2649:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 968,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 964,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "2693:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 963,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2671:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2671:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "2671:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2649:66:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 969,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 962,
                      "src": "2803:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 970,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "2820:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2803:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 993,
                  "nodeType": "IfStatement",
                  "src": "2799:149:6",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 974,
                                  "name": "Stk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "2852:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                    "typeString": "struct Stake memory"
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 756,
                                "src": "2852:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 977,
                                    "name": "Stk",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 946,
                                    "src": "2873:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                      "typeString": "struct Stake memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                      "typeString": "struct Stake memory"
                                    }
                                  ],
                                  "id": 976,
                                  "name": "getRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 942,
                                  "src": "2865:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Stake memory) view returns (uint256)"
                                  }
                                },
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2865:12:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2852:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2845:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 972,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2845:6:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 981,
                          "name": "ratio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "2885:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "2845:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 986,
                                "name": "ratio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 954,
                                "src": "2915:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 987,
                                "name": "tokenDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 962,
                                "src": "2922:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "id": 988,
                                "name": "_Decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 770,
                                "src": "2937:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 985,
                              "name": "scalePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 902,
                              "src": "2904:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                "typeString": "function (int256,uint8,uint8) pure returns (int256)"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2904:43:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2897:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 983,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2897:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2897:51:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "2845:103:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "functionReturnParameters": 952,
                    "id": 992,
                    "nodeType": "Return",
                    "src": "2834:114:6"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 996,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "2966:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 756,
                            "src": "2966:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 999,
                                "name": "Stk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "2987:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                  "typeString": "struct Stake memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                  "typeString": "struct Stake memory"
                                }
                              ],
                              "id": 998,
                              "name": "getRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "2979:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct Stake memory) view returns (uint256)"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2979:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2966:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2959:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2959:6:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2959:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1003,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "2995:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "2959:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 952,
                  "id": 1005,
                  "nodeType": "Return",
                  "src": "2952:48:6"
                }
              ]
            },
            "documentation": {
              "id": 943,
              "nodeType": "StructuredDocumentation",
              "src": "2263:165:6",
              "text": " @dev Given a stake, returns the value of potential bonuses\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "2452:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 944,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "2452:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "2452:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "2470:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2451:38:6"
            },
            "returnParameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "2519:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:8:6"
            },
            "scope": 1280,
            "src": "2430:574:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1036,
              "nodeType": "Block",
              "src": "3274:104:6",
              "statements": [
                {
                  "assignments": [
                    1020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1020,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1036,
                      "src": "3278:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1019,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1018,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "3278:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "3278:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1030,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1021,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "3297:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1024,
                      "indexExpression": {
                        "expression": {
                          "id": 1022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3307:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3307:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3297:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1029,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1027,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "3327:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3319:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3319:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3319:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3297:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3278:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1032,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "3358:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      {
                        "id": 1033,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "3363:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1031,
                      "name": "computeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "3345:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$_t_address_$returns$_t_int256_$",
                        "typeString": "function (struct Stake memory,address) view returns (int256)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3345:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 1017,
                  "id": 1035,
                  "nodeType": "Return",
                  "src": "3338:36:6"
                }
              ]
            },
            "documentation": {
              "id": 1008,
              "nodeType": "StructuredDocumentation",
              "src": "3007:170:6",
              "text": " @dev Querying current status of staking - external funk\n @param Token Token staked by customers\n @param Aggregator Provided by JS for evaluating values"
            },
            "functionSelector": "dbc9eda3",
            "id": 1037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evaluateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "3202:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1009,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "3202:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "3202:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "3216:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3216:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:34:6"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "3265:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3264:8:6"
            },
            "scope": 1280,
            "src": "3179:199:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "3620:396:6",
              "statements": [
                {
                  "assignments": [
                    1047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1047,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "3624:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1046,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3624:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1049,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "3652:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      {
                        "id": 1050,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1040,
                        "src": "3657:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1048,
                      "name": "computeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "3639:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$_t_address_$returns$_t_int256_$",
                        "typeString": "function (struct Stake memory,address) view returns (int256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3639:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3624:44:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1053,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "3676:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3684:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3676:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1060,
                  "nodeType": "IfStatement",
                  "src": "3672:24:6",
                  "trueBody": {
                    "expression": {
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1056,
                        "name": "bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "3687:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3695:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3687:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 1059,
                    "nodeType": "ExpressionStatement",
                    "src": "3687:9:6"
                  }
                },
                {
                  "expression": {
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1061,
                          "name": "bonusList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 782,
                          "src": "3754:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                            "typeString": "mapping(address => struct Bonus storage ref)"
                          }
                        },
                        "id": 1064,
                        "indexExpression": {
                          "expression": {
                            "id": 1062,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3764:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3764:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3754:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bonus_$762_storage",
                          "typeString": "struct Bonus storage ref"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "3754:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1066,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3790:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3790:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3754:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "3754:48:6"
                },
                {
                  "expression": {
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1070,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "3806:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "3806:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1073,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3824:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3824:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3806:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:30:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1077,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "3879:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3888:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3879:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1103,
                  "nodeType": "IfStatement",
                  "src": "3875:138:6",
                  "trueBody": {
                    "id": 1102,
                    "nodeType": "Block",
                    "src": "3891:122:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1080,
                                "name": "bonusList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "3896:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                                  "typeString": "mapping(address => struct Bonus storage ref)"
                                }
                              },
                              "id": 1083,
                              "indexExpression": {
                                "expression": {
                                  "id": 1081,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3906:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3906:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3896:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bonus_$762_storage",
                                "typeString": "struct Bonus storage ref"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 759,
                            "src": "3896:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1087,
                                "name": "bonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "3936:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3928:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1085,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3928:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3928:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3896:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1090,
                        "nodeType": "ExpressionStatement",
                        "src": "3896:46:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1094,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3981:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3981:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1098,
                                  "name": "bonus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1047,
                                  "src": "4001:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3993:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1096,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3993:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3993:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1091,
                              "name": "_FrenchBorgTokenProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "3947:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FBMoney_$747",
                                "typeString": "contract FBMoney"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 165,
                            "src": "3947:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3947:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1101,
                        "nodeType": "ExpressionStatement",
                        "src": "3947:61:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1038,
              "nodeType": "StructuredDocumentation",
              "src": "3381:167:6",
              "text": " @dev Internal function for evaluating and retrieving Bonuses\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "3573:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "3593:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 1042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1041,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "3593:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "3593:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3572:38:6"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3620:0:6"
            },
            "scope": 1280,
            "src": "3550:466:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "4335:625:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1122,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "4354:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4346:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1120,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4346:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4346:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4372:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4364:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4364:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4364:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4346:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1119,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "4339:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1134,
                              "name": "Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1113,
                              "src": "4394:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4386:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4386:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4386:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4417:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4409:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1136,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4409:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4409:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4386:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1131,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "4379:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4379:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:41:6"
                },
                {
                  "assignments": [
                    1145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "4459:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1143,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "4459:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "4459:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1155,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1146,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "4478:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1149,
                      "indexExpression": {
                        "expression": {
                          "id": 1147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4488:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4488:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4478:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1154,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1152,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "4508:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4500:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4500:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4500:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4478:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4459:56:6"
                },
                {
                  "expression": {
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "4590:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1161,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1159,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "4608:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4600:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4600:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4600:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4590:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1162,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "4619:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4590:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "4590:35:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1166,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "4763:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1167,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "4775:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      ],
                      "id": 1165,
                      "name": "retrieveBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "4749:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct Stake memory)"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4749:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "4749:30:6"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1170,
                            "name": "stakeList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "4783:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                            }
                          },
                          "id": 1177,
                          "indexExpression": {
                            "expression": {
                              "id": 1171,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4793:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4793:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4783:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                            "typeString": "mapping(address => struct Stake storage ref)"
                          }
                        },
                        "id": 1178,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1175,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "4813:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4805:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1173,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4805:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4805:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4783:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage",
                          "typeString": "struct Stake storage ref"
                        }
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "4783:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1180,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "4831:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4783:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "4783:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4922:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4922:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1190,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4942:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          ],
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4934:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4934:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4934:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1192,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "4949:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1183,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "4903:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "4903:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1194,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "4019:206:6",
              "text": " @dev Stake swap some tokens for our money token\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "35443571",
            "id": 1196,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1116,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1111,
                    "src": "4327:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1117,
                "modifierName": {
                  "id": 1115,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "4316:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4316:18:6"
              }
            ],
            "name": "StakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "4251:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1107,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "4251:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "4251:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "4267:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "4285:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4247:59:6"
            },
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4335:0:6"
            },
            "scope": 1280,
            "src": "4227:733:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "5264:422:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "5284:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5276:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5276:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5276:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5302:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5294:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1215,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5294:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5294:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5276:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5268:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5268:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "5268:37:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1225,
                              "name": "Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1204,
                              "src": "5325:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5317:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5317:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5317:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5348:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5340:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5340:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5340:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5317:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5309:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:42:6"
                },
                {
                  "assignments": [
                    1236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1236,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "5391:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1235,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1234,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "5391:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "5391:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1246,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1237,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "5410:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1240,
                      "indexExpression": {
                        "expression": {
                          "id": 1238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5420:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5420:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5410:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1245,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1243,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "5440:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5432:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5432:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5410:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5391:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1248,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1236,
                            "src": "5494:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 756,
                          "src": "5494:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1250,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "5508:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5494:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420746f6f2068696768",
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5516:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        },
                        "value": "amount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        }
                      ],
                      "id": 1247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5486:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5486:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "5486:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1256,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "5585:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1257,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "5597:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      ],
                      "id": 1255,
                      "name": "retrieveBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "5571:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct Stake memory)"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "5571:30:6"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1260,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "5605:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "5605:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1263,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "5619:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5605:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1271,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5656:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          ],
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5648:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5648:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5648:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5663:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5663:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1275,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "5675:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1266,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "5629:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "5629:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5629:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "5629:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1197,
              "nodeType": "StructuredDocumentation",
              "src": "4963:189:6",
              "text": " @dev Unstake the staked tokens\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "ef9c337d",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1207,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1202,
                    "src": "5256:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1208,
                "modifierName": {
                  "id": 1206,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "5245:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5245:18:6"
              }
            ],
            "name": "UnstakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5180:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1199,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1198,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "5180:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "5180:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5196:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5196:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5214:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5214:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:59:6"
            },
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5264:0:6"
            },
            "scope": 1280,
            "src": "5154:532:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1281,
        "src": "327:5361:6"
      }
    ],
    "src": "32:5657:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FBStaker.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Bonus": [
        762
      ],
      "Context": [
        716
      ],
      "ERC20": [
        591
      ],
      "FBMoney": [
        747
      ],
      "FBStaker": [
        1280
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "Stake": [
        757
      ]
    },
    "id": 1281,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 749,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 750,
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 592,
        "src": "56:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 46,
        "src": "112:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FBMoney.sol",
        "file": "./FBMoney.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 748,
        "src": "189:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Stake",
        "id": 757,
        "members": [
          {
            "constant": false,
            "id": 754,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "230:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 756,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "252:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "252:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Stake",
        "nodeType": "StructDefinition",
        "scope": 1281,
        "src": "214:55:6",
        "visibility": "public"
      },
      {
        "canonicalName": "Bonus",
        "id": 762,
        "members": [
          {
            "constant": false,
            "id": 759,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "286:14:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 758,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 761,
            "mutability": "mutable",
            "name": "dateOfValue",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "303:19:6",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Bonus",
        "nodeType": "StructDefinition",
        "scope": 1281,
        "src": "270:55:6",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          747
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1280,
        "linearizedBaseContracts": [
          1280
        ],
        "name": "FBStaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 765,
            "mutability": "mutable",
            "name": "_FrenchBorgTokenProvider",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "348:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FBMoney_$747",
              "typeString": "contract FBMoney"
            },
            "typeName": {
              "id": 764,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 763,
                "name": "FBMoney",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 747,
                "src": "348:7:6"
              },
              "referencedDeclaration": 747,
              "src": "348:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FBMoney_$747",
                "typeString": "contract FBMoney"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 768,
            "mutability": "mutable",
            "name": "_Rate",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "391:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 766,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "391:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 767,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "407:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 770,
            "mutability": "mutable",
            "name": "_Decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "411:15:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 769,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "411:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 777,
            "mutability": "mutable",
            "name": "stakeList",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "430:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Stake))"
            },
            "typeName": {
              "id": 776,
              "keyType": {
                "id": 771,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "438:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "430:45:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Stake))"
              },
              "valueType": {
                "id": 775,
                "keyType": {
                  "id": 772,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "457:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "449:25:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                  "typeString": "mapping(address => struct Stake)"
                },
                "valueType": {
                  "id": 774,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 773,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 757,
                    "src": "468:5:6"
                  },
                  "referencedDeclaration": 757,
                  "src": "468:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                    "typeString": "struct Stake"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 782,
            "mutability": "mutable",
            "name": "bonusList",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "517:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
              "typeString": "mapping(address => struct Bonus)"
            },
            "typeName": {
              "id": 781,
              "keyType": {
                "id": 778,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "525:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "517:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                "typeString": "mapping(address => struct Bonus)"
              },
              "valueType": {
                "id": 780,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 779,
                  "name": "Bonus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 762,
                  "src": "536:5:6"
                },
                "referencedDeclaration": 762,
                "src": "536:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bonus_$762_storage_ptr",
                  "typeString": "struct Bonus"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 786,
            "mutability": "mutable",
            "name": "tokenPool",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "589:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 785,
              "keyType": {
                "id": 783,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "597:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "589:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 784,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "608:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "693:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 791,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "705:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "710:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "705:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "697:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "697:15:6"
                },
                {
                  "id": 796,
                  "nodeType": "PlaceholderStatement",
                  "src": "716:1:6"
                }
              ]
            },
            "id": 798,
            "name": "notNull256",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "682:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:11:6"
            },
            "src": "662:59:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "738:103:6",
              "statements": [
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 801,
                      "name": "_FrenchBorgTokenProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "742:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FBMoney_$747",
                        "typeString": "contract FBMoney"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31303030",
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "781:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "769:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_FBMoney_$747_$",
                          "typeString": "function (uint256) returns (contract FBMoney)"
                        },
                        "typeName": {
                          "id": 803,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 802,
                            "name": "FBMoney",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 747,
                            "src": "773:7:6"
                          },
                          "referencedDeclaration": 747,
                          "src": "773:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        }
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "769:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FBMoney_$747",
                        "typeString": "contract FBMoney"
                      }
                    },
                    "src": "742:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FBMoney_$747",
                      "typeString": "contract FBMoney"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "742:44:6"
                },
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 809,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "790:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 810,
                          "name": "_FrenchBorgTokenProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "802:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FBMoney_$747",
                            "typeString": "contract FBMoney"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "802:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "802:35:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "790:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "790:47:6"
                }
              ]
            },
            "id": 816,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:2:6"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:6"
            },
            "scope": 1280,
            "src": "724:117:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "977:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 824,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1023:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1023:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 822,
                        "name": "_FrenchBorgTokenProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "988:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FBMoney_$747",
                          "typeString": "contract FBMoney"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "988:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 821,
                  "id": 827,
                  "nodeType": "Return",
                  "src": "981:53:6"
                }
              ]
            },
            "documentation": {
              "id": 817,
              "nodeType": "StructuredDocumentation",
              "src": "844:72:6",
              "text": " @dev Returns the balance of our home made token for bonuses"
            },
            "functionSelector": "e2f59ec9",
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMoneyBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:2:6"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "968:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:9:6"
            },
            "scope": 1280,
            "src": "918:120:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "1124:59:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 837,
                          "name": "stakeList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1135:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                          }
                        },
                        "id": 840,
                        "indexExpression": {
                          "expression": {
                            "id": 838,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1145:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1135:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                          "typeString": "mapping(address => struct Stake storage ref)"
                        }
                      },
                      "id": 845,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 843,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "1165:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$591",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1157:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1157:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1157:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1135:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_storage",
                        "typeString": "struct Stake storage ref"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 756,
                    "src": "1135:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 836,
                  "id": 847,
                  "nodeType": "Return",
                  "src": "1128:51:6"
                }
              ]
            },
            "functionSelector": "b80f5f89",
            "id": 849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStakedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "1072:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$591",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 831,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 830,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "1072:5:6"
                    },
                    "referencedDeclaration": 591,
                    "src": "1072:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$591",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1071:13:6"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "1114:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:9:6"
            },
            "scope": 1280,
            "src": "1041:142:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "1379:379:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 861,
                      "name": "_priceDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "1526:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 862,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "1543:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1526:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 879,
                        "name": "_priceDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "1637:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 880,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "1654:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "1637:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 897,
                    "nodeType": "IfStatement",
                    "src": "1633:105:6",
                    "trueBody": {
                      "id": 896,
                      "nodeType": "Block",
                      "src": "1665:73:6",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 882,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "1677:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 892,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 885,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1693:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 890,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 888,
                                          "name": "_priceDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 854,
                                          "src": "1705:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 889,
                                          "name": "_decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 856,
                                          "src": "1722:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "1705:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 887,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1697:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 886,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1697:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1697:35:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1693:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1686:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 883,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1686:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1686:47:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "1677:56:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 860,
                          "id": 895,
                          "nodeType": "Return",
                          "src": "1670:63:6"
                        }
                      ]
                    }
                  },
                  "id": 898,
                  "nodeType": "IfStatement",
                  "src": "1522:216:6",
                  "trueBody": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "1554:73:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 864,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 852,
                            "src": "1566:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 867,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1582:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 870,
                                        "name": "_decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 856,
                                        "src": "1594:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 871,
                                        "name": "_priceDecimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 854,
                                        "src": "1606:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "1594:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1586:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 868,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1586:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1586:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1582:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1575:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 865,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1575:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1575:47:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1566:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 860,
                        "id": 877,
                        "nodeType": "Return",
                        "src": "1559:63:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 899,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 852,
                    "src": "1748:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 860,
                  "id": 900,
                  "nodeType": "Return",
                  "src": "1741:13:6"
                }
              ]
            },
            "documentation": {
              "id": 850,
              "nodeType": "StructuredDocumentation",
              "src": "1186:77:6",
              "text": " @dev Make money compatibles if they don't have the same Decimals"
            },
            "id": 902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scalePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1288:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "_priceDecimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1305:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1329:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1284:63:6"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "1371:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:8:6"
            },
            "scope": 1280,
            "src": "1265:493:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 941,
              "nodeType": "Block",
              "src": "1950:310:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 912,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1962:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1962:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 914,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1977:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dateOfValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 754,
                          "src": "1977:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1962:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420626c6f636b206e756d626572",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1994:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        },
                        "value": "invalid block number"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5fa109ac4408f80e9ce3baa357d9d5db3ba8f8c311d6bf7061ae720db30428f",
                          "typeString": "literal_string \"invalid block number\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1954:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:63:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 928,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 924,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "2187:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "src": "2187:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 926,
                                            "name": "Stk",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 906,
                                            "src": "2202:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                              "typeString": "struct Stake memory"
                                            }
                                          },
                                          "id": 927,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "dateOfValue",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 754,
                                          "src": "2202:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2187:30:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 923,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2179:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 922,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2179:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 929,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2179:39:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 930,
                                    "name": "_Rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "2221:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2179:47:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 932,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2178:49:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "313532343730",
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2243:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_152470_by_1",
                                    "typeString": "int_const 152470"
                                  },
                                  "value": "152470"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_152470_by_1",
                                    "typeString": "int_const 152470"
                                  }
                                ],
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2235:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 933,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2235:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2235:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2178:72:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 938,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2177:74:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2164:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2164:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:92:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 910,
                  "id": 940,
                  "nodeType": "Return",
                  "src": "2154:102:6"
                }
              ]
            },
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "1761:120:6",
              "text": " @dev Retourne le ratio temporel en utilisant le delta des blocks\n @param Stk Current stake for customers"
            },
            "id": 942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1900:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "1900:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "1900:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1899:18:6"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1941:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:9:6"
            },
            "scope": 1280,
            "src": "1883:377:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1006,
              "nodeType": "Block",
              "src": "2528:476:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    954,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "2568:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 960,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 956,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "2612:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 955,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2590:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2590:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:80:6"
                },
                {
                  "assignments": [
                    962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 962,
                      "mutability": "mutable",
                      "name": "tokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "2649:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 961,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2649:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 968,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 964,
                            "name": "Aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "2693:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 963,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2671:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2671:33:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "2671:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2649:66:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 969,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 962,
                      "src": "2803:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 970,
                      "name": "_Decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "2820:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2803:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 993,
                  "nodeType": "IfStatement",
                  "src": "2799:149:6",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 974,
                                  "name": "Stk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "2852:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                    "typeString": "struct Stake memory"
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 756,
                                "src": "2852:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 977,
                                    "name": "Stk",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 946,
                                    "src": "2873:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                      "typeString": "struct Stake memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                      "typeString": "struct Stake memory"
                                    }
                                  ],
                                  "id": 976,
                                  "name": "getRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 942,
                                  "src": "2865:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Stake memory) view returns (uint256)"
                                  }
                                },
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2865:12:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2852:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2845:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 972,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2845:6:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 981,
                          "name": "ratio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "2885:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "2845:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 986,
                                "name": "ratio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 954,
                                "src": "2915:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 987,
                                "name": "tokenDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 962,
                                "src": "2922:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "id": 988,
                                "name": "_Decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 770,
                                "src": "2937:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 985,
                              "name": "scalePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 902,
                              "src": "2904:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                "typeString": "function (int256,uint8,uint8) pure returns (int256)"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2904:43:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2897:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 983,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2897:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2897:51:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "2845:103:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "functionReturnParameters": 952,
                    "id": 992,
                    "nodeType": "Return",
                    "src": "2834:114:6"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 996,
                              "name": "Stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "2966:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                "typeString": "struct Stake memory"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 756,
                            "src": "2966:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 999,
                                "name": "Stk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "2987:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                  "typeString": "struct Stake memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                                  "typeString": "struct Stake memory"
                                }
                              ],
                              "id": 998,
                              "name": "getRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "2979:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct Stake memory) view returns (uint256)"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2979:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2966:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2959:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2959:6:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2959:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1003,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "2995:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "2959:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 952,
                  "id": 1005,
                  "nodeType": "Return",
                  "src": "2952:48:6"
                }
              ]
            },
            "documentation": {
              "id": 943,
              "nodeType": "StructuredDocumentation",
              "src": "2263:165:6",
              "text": " @dev Given a stake, returns the value of potential bonuses\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "2452:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 944,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "2452:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "2452:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "2470:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2451:38:6"
            },
            "returnParameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "2519:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:8:6"
            },
            "scope": 1280,
            "src": "2430:574:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1036,
              "nodeType": "Block",
              "src": "3274:104:6",
              "statements": [
                {
                  "assignments": [
                    1020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1020,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1036,
                      "src": "3278:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1019,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1018,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "3278:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "3278:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1030,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1021,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "3297:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1024,
                      "indexExpression": {
                        "expression": {
                          "id": 1022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3307:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3307:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3297:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1029,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1027,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "3327:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3319:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3319:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3319:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3297:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3278:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1032,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "3358:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      {
                        "id": 1033,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "3363:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1031,
                      "name": "computeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "3345:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$_t_address_$returns$_t_int256_$",
                        "typeString": "function (struct Stake memory,address) view returns (int256)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3345:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 1017,
                  "id": 1035,
                  "nodeType": "Return",
                  "src": "3338:36:6"
                }
              ]
            },
            "documentation": {
              "id": 1008,
              "nodeType": "StructuredDocumentation",
              "src": "3007:170:6",
              "text": " @dev Querying current status of staking - external funk\n @param Token Token staked by customers\n @param Aggregator Provided by JS for evaluating values"
            },
            "functionSelector": "dbc9eda3",
            "id": 1037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evaluateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "3202:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1009,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "3202:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "3202:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "3216:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3216:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:34:6"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "3265:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3264:8:6"
            },
            "scope": 1280,
            "src": "3179:199:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "3620:396:6",
              "statements": [
                {
                  "assignments": [
                    1047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1047,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "3624:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1046,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3624:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1049,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "3652:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      {
                        "id": 1050,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1040,
                        "src": "3657:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1048,
                      "name": "computeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "3639:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$757_memory_ptr_$_t_address_$returns$_t_int256_$",
                        "typeString": "function (struct Stake memory,address) view returns (int256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3639:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3624:44:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1053,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "3676:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3684:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3676:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1060,
                  "nodeType": "IfStatement",
                  "src": "3672:24:6",
                  "trueBody": {
                    "expression": {
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1056,
                        "name": "bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "3687:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3695:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3687:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 1059,
                    "nodeType": "ExpressionStatement",
                    "src": "3687:9:6"
                  }
                },
                {
                  "expression": {
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1061,
                          "name": "bonusList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 782,
                          "src": "3754:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                            "typeString": "mapping(address => struct Bonus storage ref)"
                          }
                        },
                        "id": 1064,
                        "indexExpression": {
                          "expression": {
                            "id": 1062,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3764:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3764:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3754:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bonus_$762_storage",
                          "typeString": "struct Bonus storage ref"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "3754:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1066,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3790:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3790:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3754:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "3754:48:6"
                },
                {
                  "expression": {
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1070,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "3806:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateOfValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "3806:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1073,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3824:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3824:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3806:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:30:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1077,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "3879:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3888:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3879:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1103,
                  "nodeType": "IfStatement",
                  "src": "3875:138:6",
                  "trueBody": {
                    "id": 1102,
                    "nodeType": "Block",
                    "src": "3891:122:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1080,
                                "name": "bonusList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "3896:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bonus_$762_storage_$",
                                  "typeString": "mapping(address => struct Bonus storage ref)"
                                }
                              },
                              "id": 1083,
                              "indexExpression": {
                                "expression": {
                                  "id": 1081,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3906:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3906:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3896:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bonus_$762_storage",
                                "typeString": "struct Bonus storage ref"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 759,
                            "src": "3896:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1087,
                                "name": "bonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "3936:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3928:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1085,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3928:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3928:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3896:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1090,
                        "nodeType": "ExpressionStatement",
                        "src": "3896:46:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1094,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3981:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3981:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1098,
                                  "name": "bonus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1047,
                                  "src": "4001:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3993:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1096,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3993:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3993:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1091,
                              "name": "_FrenchBorgTokenProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "3947:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FBMoney_$747",
                                "typeString": "contract FBMoney"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 165,
                            "src": "3947:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3947:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1101,
                        "nodeType": "ExpressionStatement",
                        "src": "3947:61:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1038,
              "nodeType": "StructuredDocumentation",
              "src": "3381:167:6",
              "text": " @dev Internal function for evaluating and retrieving Bonuses\n @param Stk Current stake for customers\n @param Aggregator used for getting Token value"
            },
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "3573:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "Stk",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "3593:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                    "typeString": "struct Stake"
                  },
                  "typeName": {
                    "id": 1042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1041,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 757,
                      "src": "3593:5:6"
                    },
                    "referencedDeclaration": 757,
                    "src": "3593:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                      "typeString": "struct Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3572:38:6"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3620:0:6"
            },
            "scope": 1280,
            "src": "3550:466:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "4335:625:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1122,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "4354:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4346:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1120,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4346:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4346:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4372:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4364:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4364:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4364:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4346:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1119,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "4339:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1134,
                              "name": "Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1113,
                              "src": "4394:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4386:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4386:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4386:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4417:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4409:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1136,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4409:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4409:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4386:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1131,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "4379:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4379:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:41:6"
                },
                {
                  "assignments": [
                    1145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "4459:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1143,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "4459:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "4459:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1155,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1146,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "4478:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1149,
                      "indexExpression": {
                        "expression": {
                          "id": 1147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4488:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4488:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4478:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1154,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1152,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "4508:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4500:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4500:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4500:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4478:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4459:56:6"
                },
                {
                  "expression": {
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "4590:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1161,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1159,
                            "name": "Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "4608:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$669",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4600:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4600:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4600:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4590:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1162,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "4619:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4590:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "4590:35:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1166,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "4763:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1167,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "4775:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      ],
                      "id": 1165,
                      "name": "retrieveBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "4749:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct Stake memory)"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4749:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "4749:30:6"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1170,
                            "name": "stakeList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "4783:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                            }
                          },
                          "id": 1177,
                          "indexExpression": {
                            "expression": {
                              "id": 1171,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4793:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4793:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4783:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                            "typeString": "mapping(address => struct Stake storage ref)"
                          }
                        },
                        "id": 1178,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1175,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "4813:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4805:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1173,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4805:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4805:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4783:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage",
                          "typeString": "struct Stake storage ref"
                        }
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "4783:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1180,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "4831:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4783:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "4783:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4922:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4922:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1190,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4942:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          ],
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4934:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4934:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4934:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1192,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "4949:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1183,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "4903:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "4903:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1194,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "4019:206:6",
              "text": " @dev Stake swap some tokens for our money token\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "35443571",
            "id": 1196,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1116,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1111,
                    "src": "4327:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1117,
                "modifierName": {
                  "id": 1115,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "4316:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4316:18:6"
              }
            ],
            "name": "StakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "4251:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1107,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "4251:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "4251:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "4267:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "4285:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4247:59:6"
            },
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4335:0:6"
            },
            "scope": 1280,
            "src": "4227:733:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "5264:422:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "5284:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$669",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5276:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5276:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5276:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5302:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5294:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1215,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5294:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5294:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5276:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5268:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5268:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "5268:37:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1225,
                              "name": "Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1204,
                              "src": "5325:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5317:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5317:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5317:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5348:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5340:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5340:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5340:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5317:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5309:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:42:6"
                },
                {
                  "assignments": [
                    1236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1236,
                      "mutability": "mutable",
                      "name": "Stk",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "5391:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                        "typeString": "struct Stake"
                      },
                      "typeName": {
                        "id": 1235,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1234,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 757,
                          "src": "5391:5:6"
                        },
                        "referencedDeclaration": 757,
                        "src": "5391:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_storage_ptr",
                          "typeString": "struct Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1246,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1237,
                        "name": "stakeList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "5410:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct Stake storage ref))"
                        }
                      },
                      "id": 1240,
                      "indexExpression": {
                        "expression": {
                          "id": 1238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5420:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5420:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5410:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$757_storage_$",
                        "typeString": "mapping(address => struct Stake storage ref)"
                      }
                    },
                    "id": 1245,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1243,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "5440:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$669",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5432:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5432:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5410:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$757_storage",
                      "typeString": "struct Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5391:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1248,
                            "name": "Stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1236,
                            "src": "5494:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                              "typeString": "struct Stake memory"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 756,
                          "src": "5494:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1250,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "5508:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5494:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420746f6f2068696768",
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5516:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        },
                        "value": "amount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92",
                          "typeString": "literal_string \"amount too high\""
                        }
                      ],
                      "id": 1247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5486:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5486:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "5486:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1256,
                        "name": "Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "5585:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1257,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "5597:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      ],
                      "id": 1255,
                      "name": "retrieveBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "5571:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Stake_$757_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct Stake memory)"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "5571:30:6"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1260,
                        "name": "Stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "5605:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$757_memory_ptr",
                          "typeString": "struct Stake memory"
                        }
                      },
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "5605:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1263,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "5619:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5605:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1271,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5656:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FBStaker_$1280",
                              "typeString": "contract FBStaker"
                            }
                          ],
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5648:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5648:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5648:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5663:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5663:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1275,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "5675:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1266,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "5629:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "5629:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5629:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "5629:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1197,
              "nodeType": "StructuredDocumentation",
              "src": "4963:189:6",
              "text": " @dev Unstake the staked tokens\n @param Token customer's Token\n @param amount amount of customer's token to Stake\n @param Aggregator Provided by JS for the correct PAIR"
            },
            "functionSelector": "ef9c337d",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1207,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1202,
                    "src": "5256:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1208,
                "modifierName": {
                  "id": 1206,
                  "name": "notNull256",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 798,
                  "src": "5245:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5245:18:6"
              }
            ],
            "name": "UnstakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5180:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$669",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1199,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1198,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 669,
                      "src": "5180:6:6"
                    },
                    "referencedDeclaration": 669,
                    "src": "5180:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$669",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5196:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5196:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "Aggregator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5214:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5214:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:59:6"
            },
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5264:0:6"
            },
            "scope": 1280,
            "src": "5154:532:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1281,
        "src": "327:5361:6"
      }
    ],
    "src": "32:5657:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x382c833633983F032e1F702e58CB01C04039FA10",
      "transactionHash": "0x4d1aba5cde929aa42db9cd658b786f2c66b831f7a5b53906bdb0a8d071c6859e"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0xb9C39B28a96e851C666764f05C832fb500bA54B3",
      "transactionHash": "0x0623288c6eb36c5754c7dedbb653f6df4e78c622dca8ff0d79635fd118803fff"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa38CD86433cE7465f787F42B3949DC8909aa62DD",
      "transactionHash": "0x107e3c7927231f09816d3196ce57e5730da081f462813c776a36e345959ca60f"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-05T09:26:40.630Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "StakeTokens(address,uint256,address)": {
        "details": "Stake swap some tokens for our money token",
        "params": {
          "Aggregator": "Provided by JS for the correct PAIR",
          "Token": "customer's Token",
          "amount": "amount of customer's token to Stake"
        }
      },
      "UnstakeTokens(address,uint256,address)": {
        "details": "Unstake the staked tokens",
        "params": {
          "Aggregator": "Provided by JS for the correct PAIR",
          "Token": "customer's Token",
          "amount": "amount of customer's token to Stake"
        }
      },
      "evaluateBonus(address,address)": {
        "details": "Querying current status of staking - external funk",
        "params": {
          "Aggregator": "Provided by JS for evaluating values",
          "Token": "Token staked by customers"
        }
      },
      "getMoneyBalance()": {
        "details": "Returns the balance of our home made token for bonuses"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}